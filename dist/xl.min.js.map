{"version":3,"sources":["node_modules/browser-pack/_prelude.js","src/xlapi.js","xl.min.js","src/main.js"],"names":["f","exports","module","define","amd","g","window","global","self","this","XL","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length",1,"XLApi","projectId","baseUrl","makeApiCall","params","success","error","XMLHttpRequest","open","method","endpoint","onreadystatechange","readyState","status","JSON","parse","responseText","message","send","getArguments","prototype","getSocialsURLs","loginPassAuth","login","pass","rememberMe","body","username","password","remember_me","stringify","smsAuth","phoneNumber","main","options","_socialUrls","undefined","_options","errorHandler","loginPassValidator","b","isMarkupSocialsHandlersEnabled","_api","response","key","hasOwnProperty","console","getAllElementsWithAttribute","document","addEventListener","element","target","xlData","attributes","nodeValue","authType","prop","callback","startsWith","socialUrl","location","href","res","login_url","createErrorObject","INCORRECT_LOGIN_OR_PASSWORD_ERROR_CODE","err","smsAuthStep","attribute","matchingElements","allElements","getElementsByTagName","getAttribute","push","init","__xl","xl","AuthWidget","divName","html","getElementById","innerHTML","AuthButton","INVALID_LOGIN_ERROR_CODE","./xlapi"],"mappings":"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","file":"xl.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","/**\n * Created by a.korotaev on 24.06.16.\n */\n/**\n * Impelements Xsolla Login Api\n * @param projectId - project's unique identifier\n * @constructor\n */\nvar XLApi = function (projectId) {\n    var self = this;\n    this.baseUrl = 'http://login.xsolla.com/api/';\n    // this.baseUrl = 'http://xsolla-login-api.herokuapp.com/api/';\n    // this.baseUrl = 'http://test-login.xsolla.com/api/';\n    this.projectId = projectId;\n\n    this.makeApiCall = function (params, success, error) {\n        var r = new XMLHttpRequest();\n        r.open(params.method, self.baseUrl + params.endpoint, true);\n        r.onreadystatechange = function () {\n            if (r.readyState == 4) {\n                if (r.status == 200) {\n                    success(JSON.parse(r.responseText));\n                } else {\n                    if (r.responseText) {\n                        error(JSON.parse(r.responseText));\n                    } else {\n                        error({error: {message: 'Networking error', code: r.status}});\n                    }\n                }\n            }\n        };\n        r.send(params.getArguments);\n    };\n};\n/**\n * Get all avialable social methods auth url\n * @param success - success callback\n * @param error - error callback\n */\nXLApi.prototype.getSocialsURLs = function (success, error) {\n    return this.makeApiCall({method: 'GET', endpoint: 'social/login_urls?projectId='+this.projectId, getArguments: null}, success, error);\n};\n\nXLApi.prototype.loginPassAuth = function (login, pass, rememberMe, success, error) {\n    var body = {\n        username: login,\n        password: pass,\n        remember_me: rememberMe\n    };\n    return this.makeApiCall({method: 'POST', endpoint: 'proxy/login?projectId='+this.projectId, getArguments: JSON.stringify(body)}, success, error);\n};\n\nXLApi.prototype.smsAuth = function (phoneNumber, success, error) {\n    return this.makeApiCall({method: 'GET', endpoint: 'sms', getArguments: 'phoneNumber=' + phoneNumber}, success, error);\n};\n\nmodule.exports = XLApi;\n",null,"/**\n * Created by a.korotaev on 24.06.16.\n */\n\nvar XLApi = require('./xlapi');\n/**\n * Create an `Auth0` instance with `options`\n *\n * @class XL\n * @constructor\n */\nfunction XL (options) {\n    var self = this;\n\n    self._socialUrls = undefined;\n\n    self._options = {};\n    self._options.errorHandler = options.errorHandler || function(a) {};\n    self._options.loginPassValidator = options.loginPassValidator || function (a,b) { return true; };\n    self._options.isMarkupSocialsHandlersEnabled = options.isMarkupSocialsHandlersEnabled || false;\n\n    self._api = new XLApi(options.projectId);\n    self._api.getSocialsURLs(function (response) {\n        self._socialUrls = {};\n        for (var key in response) {\n            if (response.hasOwnProperty(key)) {\n                self._socialUrls['sn-' + key] = response[key];\n            }\n        }\n    }, function (e) {\n        console.error(e);\n    });\n\n    var elements = self.getAllElementsWithAttribute('data-xl-auth');\n    var login = '';\n    var pass = '';\n\n    // for (var i = 0; i < elements.length; i++) {\n    //     var nodeValue = elements[i].attributes['data-xl-auth'].nodeValue;\n    //     if (nodeValue.startsWith('sn')) {\n    //         elements[i].onclick = function (nodeValue) {\n    //             return function () {\n    //                 self.login({authType: nodeValue})\n    //             };\n    //         }(nodeValue);\n    //     } else if (nodeValue == 'form-sms') {\n    //         // elements[i].onsubmit = config.eventHandlers.sms;\n    //     } else if (nodeValue == 'form-login_pass') {\n    //         // elements[i].onsubmit = config.eventHandlers.loginPass;\n    //         elements[i].onsubmit = function (login, pass) {\n    //             return function (e) {\n    //                 e.preventDefault();\n    //                 if (self._options.loginPassValidator(login, pass)) {\n    //                     self.login({\n    //                         authType: 'login-pass',\n    //                         login: login,\n    //                         pass: pass\n    //                     }, function (res) {\n    //                         if (res.error) {\n    //                             self._options.errorHandler(res);\n    //                         }\n    //                     });\n    //                 } else {\n    //                     self._options.errorHandler(self.createErrorObject('Login or pass not valid', XL.INVALID_LOGIN_ERROR_CODE));\n    //                 }\n    //             }\n    //         }(login, pass);\n    //     } else if (nodeValue.startsWith('input-')) {\n    //         if (nodeValue == 'input-login') {\n    //             login = '';\n    //         } else if (nodeValue == 'input-pass') {\n    //             pass = '';\n    //         }\n    //     }\n    // }\n\n    if (self._options.isMarkupSocialsHandlersEnabled) {\n        document.addEventListener('click', function (e) {\n            var element = e.target;\n            var xlData = element.attributes['data-xl-auth'];\n            if (xlData) {\n                var nodeValue = xlData.nodeValue;\n                if (nodeValue) {\n                    self.login({authType: nodeValue});\n                }\n            }\n        });\n    }\n}\n\nXL.prototype.login = function (prop, callback) {\n    var self = this;\n\n    if (!prop || !self._socialUrls) {\n        return;\n    }\n\n    /**\n     * props\n     * authType: sn-<social name>, login-pass, sms\n     */\n    if (prop.authType) {\n        if (prop.authType.startsWith('sn-')) {\n            var socialUrl = self._socialUrls[prop.authType];\n            if (socialUrl != undefined) {\n                window.location.href = self._socialUrls[prop.authType];\n            } else {\n                console.error('Auth type: ' + prop.authType + ' doesn\\'t exist');\n            }\n\n        } else if (prop.authType == 'login-pass') {\n            self._api.loginPassAuth(prop.login, prop.pass, prop.rememberMe, function (a) {\n                if (res.login_url) {\n                    window.location.href = res.login_url;\n                } else {\n                    callback(self.createErrorObject('Login or pass not valid', XL.INCORRECT_LOGIN_OR_PASSWORD_ERROR_CODE));\n                }\n            }, function (err) {\n                callback(err);\n            });\n        } else if (prop.authType == 'sms') {\n            if (smsAuthStep == 'phone') {\n                self._api.smsAuth(prop.phoneNumber, null, null);\n            } else if (smsAuthStep == 'code') {\n\n            }\n\n        } else {\n            console.error('Unknown auth type');\n        }\n    }\n};\n\n\nXL.prototype.getAllElementsWithAttribute = function (attribute) {\n    var matchingElements = [];\n    var allElements = document.getElementsByTagName('*');\n    for (var i = 0, n = allElements.length; i < n; i++)\n    {\n        if (allElements[i].getAttribute(attribute) !== null)\n        {\n            matchingElements.push(allElements[i]);\n        }\n    }\n    return matchingElements;\n};\n\nXL.prototype.createErrorObject = function(message, code) {\n    return {\n        error: {\n            message: message,\n            code: code || -1\n        }\n    };\n};\n\nXL.init = function (params) {\n    if (!window.__xl) {\n        var xl = new XL(params);\n        window.__xl = xl;\n    } else {\n        console.error('XL already init!');\n    }\n};\n\nXL.login = function (prop, callback) {\n    if (window.__xl) {\n        window.__xl.login(prop, callback);\n    } else {\n        console.error('Please run XL.init() first');\n    }\n};\n\nXL.AuthWidget = function (divName, options) {\n    if (!divName) {\n        console.error('No div name!');\n    } else {\n        var html = '<iframe></iframe>';\n        var element = document.getElementById(divName);\n        if (element) {\n            document.getElementById(divName).innerHTML = html;\n        } else {\n            console.error('Element ' + divName +' not found!');\n        }\n    }\n};\n\nXL.AuthButton = function (divName, options) {\n\n};\n\nXL.INVALID_LOGIN_ERROR_CODE = 1;\nXL.INCORRECT_LOGIN_OR_PASSWORD_ERROR_CODE = 2;\n\nmodule.exports = XL;"],"sourceRoot":"."}