{"version":3,"sources":["node_modules/browser-pack/_prelude.js","src/easyXDM.js","xl.min.js","src/xlapi.js","src/main.js"],"names":["f","exports","module","define","amd","g","window","global","self","this","XL","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length",1,"document","location","setTimeout","decodeURIComponent","encodeURIComponent","isHostMethod","object","property","isHostObject","isArray","Object","prototype","toString","hasFlash","name","mimeType","undef","navigator","plugins","description","mimeTypes","enabledPlugin","flashVersion","match","flash","ActiveXObject","Array","slice","GetVariable","notSupportedException","major","parseInt","minor","HAS_FLASH_THROTTLED_BUG","dom_onReady","domIsReady","domReadyQueue","whenReady","fn","scope","push","getParentObject","obj","parent","namespace","ii","split","easyXDM","noConflict","ns","_easyXDM","IFRAME_PREFIX","replace","getDomainName","url","reURI","getPort","getLocation","m","toLowerCase","proto","domain","port","resolveUrl","reDoubleSlash","path","substring","pathname","lastIndexOf","protocol","host","reParent","test","appendQueryParameters","parameters","hash","indexOf","q","key","hasOwnProperty","useHash","join","v","apply","destination","source","noOverwrite","member","prop","testForNamePropertyBug","form","body","appendChild","createElement","input","channelId","HAS_NAME_PROPERTY_BUG","elements","removeChild","createFrame","config","frame","props","id","container","getElementById","style","position","top","left","src","border","frameBorder","allowTransparency","onLoad","on","usePost","target","action","method","value","submit","parentNode","checkAcl","acl","re","RegExp","substr","prepareTransportStack","stackEls","isHost","query","xdm_p","remote","channel","secret","Math","random","href","swf","product","userAgent","remoteHelper","xdm_c","xdm_s","xdm_e","interval","delay","useResize","useParent","usePolling","local","image","images","getElementsByTagName","search","xdm_pa","xdm_po","stack","HashTransport","ReliableBehavior","QueueBehavior","encode","maxLength","VerifyBehavior","initiate","PostMessageTransport","NameTransport","NixTransport","SameOriginTransport","FrameElementTransport","FlashTransport","lazy","remove","chainStack","stackElements","stackEl","defaults","incoming","message","origin","up","outgoing","recipient","down","callback","success","init","destroy","len","removeFromStack","element","un","floor","emptyFn","Function","type","listener","addEventListener","removeEventListener","sEvent","fpNotify","attachEvent","detachEvent","readyState","documentElement","doScroll","doScrollCheck","pair","data","getJSON","cached","json","JSON","stringify","toJSON","String","evalJSON","parse","str","version","getJSONObject","DomHelper","requiresJSON","write","_map","Fn","set","get","del","Socket","concat","onMessage","onReady","postMessage","Rpc","jsonRpcConfig","RpcBehavior","pub","send","targetOrigin","onDOMReady","sendFn","msg","addSwf","swfContainer","firstChild","queue","swfNoThrottle","height","width","right","overflow","flashVars","innerHTML","destroyChannel","swfdomain","createChannel","_getOrigin","event","uri","_window_onMessage","_window_waitForReady","callerWindow","contentWindow","referrer","frameElement","_sendMessage","sendMessage","_onReady","readyCount","_onMessage","remoteOrigin","_onLoad","remoteWindow","remoteUrl","w","_callerWindow","_msgNr","_handleHash","_lastMsg","_remoteOrigin","_pollHash","_listenerWindow","_attachListeners","_timer","setInterval","pollInterval","clearInterval","tries","max","getRef","frames","ex","Date","idOut","idIn","currentMessage","ack","dispatch","waiting","destroying","shift","doFragment","seq","fragment","fragments","startVerification","mySecret","theirSecret","proxy","_send","jsonrpc","serializer","_createMethod","definition","arguments","error","params","_callbacks","_callbackCounter","namedParams","_executeMethod","result","ex1","handle",2,"XLApi","projectId","baseUrl","makeApiCall","XMLHttpRequest","withCredentials","open","endpoint","onreadystatechange","status","responseText","setRequestHeader","postBody","getArguments","getSocialsURLs","loginPassAuth","login","pass","rememberMe","redirectUrl","username","password","remember_me","smsAuth","phoneNumber","main","options","findAncestor","el","attributes","parentElement","_options","maxXLClickDepth","_socialUrls","errorHandler","loginPassValidator","b","isMarkupSocialsHandlersEnabled","undefined","apiUrl","onlyWidgets","locale","redirect_url","_api","updateSocialLinks","response","console","getAllElementsWithAttribute","xlData","nodeValue","authType","startsWith","socialUrl","res","login_url","finishAuth","finish","createErrorObject","INCORRECT_LOGIN_OR_PASSWORD_ERROR_CODE","err","smsAuthStep","sendSms","number","attribute","matchingElements","allElements","getAttribute","getProjectId","__xl","getRedirectURL","xl","AuthWidget","elementId","widgetIframe","onload","preloader","AuthButton","divName","INVALID_LOGIN_ERROR_CODE","./easyXDM","./xlapi"],"mappings":"CAAA,SAAAA,GAAA,GAAA,gBAAAC,UAAA,mBAAAC,QAAAA,OAAAD,QAAAD,QAAA,IAAA,kBAAAG,SAAAA,OAAAC,IAAAD,UAAAH,OAAA,CAAA,GAAAK,EAAAA,GAAA,mBAAAC,QAAAA,OAAA,mBAAAC,QAAAA,OAAA,mBAAAC,MAAAA,KAAAC,KAAAJ,EAAAK,GAAAV,MAAA,WAAA,MAAA,SAAAW,GAAAC,EAAAC,EAAAC,GAAA,QAAAC,GAAAC,EAAAC,GAAA,IAAAJ,EAAAG,GAAA,CAAA,IAAAJ,EAAAI,GAAA,CAAA,GAAAE,GAAA,kBAAAC,UAAAA,OAAA,KAAAF,GAAAC,EAAA,MAAAA,GAAAF,GAAA,EAAA,IAAAI,EAAA,MAAAA,GAAAJ,GAAA,EAAA,IAAAhB,GAAA,GAAAqB,OAAA,uBAAAL,EAAA,IAAA,MAAAhB,GAAAsB,KAAA,mBAAAtB,EAAA,GAAAuB,GAAAV,EAAAG,IAAAf,WAAAW,GAAAI,GAAA,GAAAQ,KAAAD,EAAAtB,QAAA,SAAAU,GAAA,GAAAE,GAAAD,EAAAI,GAAA,GAAAL,EAAA,OAAAI,GAAAF,EAAAA,EAAAF,IAAAY,EAAAA,EAAAtB,QAAAU,EAAAC,EAAAC,EAAAC,GAAA,MAAAD,GAAAG,GAAAf,QAAA,IAAA,GAAAmB,GAAA,kBAAAD,UAAAA,QAAAH,EAAA,EAAAA,EAAAF,EAAAW,OAAAT,IAAAD,EAAAD,EAAAE,GAAA,OAAAD,KAAAW,GAAA,SAAAP,EAAAjB,EAAAD,ICuBA,SAAAK,EAAAqB,EAAAC,EAAAC,EAAAC,EAAAC,GA4CA,QAAAC,GAAAC,EAAAC,GACA,GAAAtB,SAAAqB,GAAAC,EACA,OAAA,YAAAtB,KACA,UAAAA,IAAAqB,EAAAC,KACA,WAAAtB,EAGA,QAAAuB,GAAAF,EAAAC,GACA,QAAA,gBAAAD,GAAAC,KAAAD,EAAAC,IAMA,QAAAE,GAAApB,GACA,MAAA,mBAAAqB,OAAAC,UAAAC,SAAAf,KAAAR,GAIA,QAAAwB,KACA,GAAAC,GAAA,kBAAAC,EAAA,+BAEA,KAAAC,EAAAC,UAAAC,UAAA,gBAAAD,WAAAC,QAAAJ,GAAA,CAEA,GAAAK,GAAAF,UAAAC,QAAAJ,GAAAK,WACAA,KAAAH,EAAAC,UAAAG,YAAAH,UAAAG,UAAAL,IAAAE,UAAAG,UAAAL,GAAAM,gBACAC,EAAAH,EAAAI,MAAA,SAGA,IAAAD,EAAA,CACA,GAAAE,EACA,KACAA,EAAA,GAAAC,eAAA,iCACAH,EAAAI,MAAAf,UAAAgB,MAAA9B,KAAA2B,EAAAI,YAAA,YAAAL,MAAA,2BAAA,GACAC,EAAA,KAEA,MAAAK,KAGA,IAAAP,EACA,OAAA,CAEA,IAAAQ,GAAAC,SAAAT,EAAA,GAAA,IAAAU,EAAAD,SAAAT,EAAA,GAAA,GAEA,OADAW,GAAAH,EAAA,GAAAE,EAAA,GACA,EA6CA,QAAAE,KACA,IAAAC,EAAA,CAGAA,GAAA,CACA,KAAA,GAAA1C,GAAA,EAAAA,EAAA2C,EAAAtC,OAAAL,IACA2C,EAAA3C,IAEA2C,GAAAtC,OAAA,GA0CA,QAAAuC,GAAAC,EAAAC,GACA,MAAAJ,OACAG,GAAAzC,KAAA0C,OAGAH,GAAAI,KAAA,WACAF,EAAAzC,KAAA0C,KAUA,QAAAE,KACA,GAAAC,GAAAC,MACA,IAAA,KAAAC,EACA,IAAA,GAAAnD,GAAA,EAAAoD,EAAAD,EAAAE,MAAA,KAAArD,EAAAoD,EAAA/C,OAAAL,IACAiD,EAAAA,EAAAG,EAAApD,GAGA,OAAAiD,GAAAK,QAWA,QAAAC,GAAAC,GAOA,MALAtE,GAAAoE,QAAAG,EACAN,EAAAK,EACAL,IACAO,EAAA,WAAAP,EAAAQ,QAAA,IAAA,KAAA,KAEAL,EAYA,QAAAM,GAAAC,GACA,MAAAA,GAAA/B,MAAAgC,GAAA,GASA,QAAAC,GAAAF,GACA,MAAAA,GAAA/B,MAAAgC,GAAA,IAAA,GAQA,QAAAE,GAAAH,GACA,GAAAI,GAAAJ,EAAAK,cAAApC,MAAAgC,GACAK,EAAAF,EAAA,GAAAG,EAAAH,EAAA,GAAAI,EAAAJ,EAAA,IAAA,EAIA,QAHA,SAAAE,GAAA,OAAAE,GAAA,UAAAF,GAAA,QAAAE,KACAA,EAAA,IAEAF,EAAA,KAAAC,EAAAC,EAQA,QAAAC,GAAAT,GAMA,GAHAA,EAAAA,EAAAF,QAAAY,EAAA,QAGAV,EAAA/B,MAAA,uBAAA,CAEA,GAAA0C,GAAA,MAAAX,EAAAY,UAAA,EAAA,GAAA,GAAAjE,EAAAkE,QACA,OAAAF,EAAAC,UAAAD,EAAAnE,OAAA,KACAmE,EAAAA,EAAAC,UAAA,EAAAD,EAAAG,YAAA,KAAA,IAGAd,EAAArD,EAAAoE,SAAA,KAAApE,EAAAqE,KAAAL,EAAAX,EAIA,KAAAiB,EAAAC,KAAAlB,IACAA,EAAAA,EAAAF,QAAAmB,EAAA,GAGA,OAAAjB,GAUA,QAAAmB,GAAAnB,EAAAoB,GAEA,GAAAC,GAAA,GAAAC,EAAAtB,EAAAsB,QAAA,IACA,MAAAA,IACAD,EAAArB,EAAAY,UAAAU,GACAtB,EAAAA,EAAAY,UAAA,EAAAU,GAEA,IAAAC,KACA,KAAA,GAAAC,KAAAJ,GACAA,EAAAK,eAAAD,IACAD,EAAArC,KAAAsC,EAAA,IAAA1E,EAAAsE,EAAAI,IAGA,OAAAxB,IAAA0B,EAAA,IAAA,IAAA1B,EAAAsB,QAAA,KAAA,IAAA,KAAAC,EAAAI,KAAA,KAAAN,EAuBA,QAAA3D,GAAAkE,GACA,MAAA,mBAAAA,GAkDA,QAAAC,GAAAC,EAAAC,EAAAC,GACA,GAAAC,EACA,KAAA,GAAAC,KAAAH,GACAA,EAAAN,eAAAS,KACAA,IAAAJ,IACAG,EAAAF,EAAAG,GACA,gBAAAD,GACAJ,EAAAC,EAAAI,GAAAD,EAAAD,GAEAA,IACAF,EAAAI,GAAAH,EAAAG,KAIAJ,EAAAI,GAAAH,EAAAG,GAIA,OAAAJ,GAIA,QAAAK,KACA,GAAAC,GAAA1F,EAAA2F,KAAAC,YAAA5F,EAAA6F,cAAA,SAAAC,EAAAJ,EAAAE,YAAA5F,EAAA6F,cAAA,SACAC,GAAAhF,KAAAqC,EAAA,OAAA4C,EACAC,EAAAF,IAAAJ,EAAAO,SAAAH,EAAAhF,MACAd,EAAA2F,KAAAO,YAAAR,GAeA,QAAAS,GAAAC,GACApF,EAAAgF,IACAP,GAEA,IAAAY,EAIAL,GACAK,EAAArG,EAAA6F,cAAA,iBAAAO,EAAAE,MAAAxF,KAAA,QAGAuF,EAAArG,EAAA6F,cAAA,UACAQ,EAAAvF,KAAAsF,EAAAE,MAAAxF,MAGAuF,EAAAE,GAAAF,EAAAvF,KAAAsF,EAAAE,MAAAxF,WACAsF,GAAAE,MAAAxF,KAEA,gBAAAsF,GAAAI,YACAJ,EAAAI,UAAAxG,EAAAyG,eAAAL,EAAAI,YAGAJ,EAAAI,YAEArB,EAAAkB,EAAAK,OACAC,SAAA,WACAC,IAAA,UAEAC,KAAA,QAEAT,EAAAI,UAAAxG,EAAA2F,KAQA,IAAAmB,GAAAV,EAAAE,MAAAQ,GAgBA,IAfAV,EAAAE,MAAAQ,IAAA,mBAGA3B,EAAAkB,EAAAD,EAAAE,OAEAD,EAAAU,OAAAV,EAAAW,YAAA,EACAX,EAAAY,mBAAA,EACAb,EAAAI,UAAAZ,YAAAS,GAEAD,EAAAc,QACAC,EAAAd,EAAA,OAAAD,EAAAc,QAKAd,EAAAgB,QAAA,CACA,GAAAtB,GAAAJ,EAAAU,EAAAI,UAAAZ,YAAA5F,EAAA6F,cAAA,QAIA,IAHAH,EAAA2B,OAAAhB,EAAAvF,KACA4E,EAAA4B,OAAAR,EACApB,EAAA6B,OAAA,OACA,gBAAAnB,GAAA,QACA,IAAA,GAAA3G,KAAA2G,GAAAgB,QACAhB,EAAAgB,QAAArC,eAAAtF,KACAuG,EACAF,EAAA9F,EAAA6F,cAAA,gBAAApG,EAAA,QAEAqG,EAAA9F,EAAA6F,cAAA,SACAC,EAAAhF,KAAArB,GAEAqG,EAAA0B,MAAApB,EAAAgB,QAAA3H,GACAiG,EAAAE,YAAAE,GAIAJ,GAAA+B,SACA/B,EAAAgC,WAAAxB,YAAAR,OAEAW,GAAAS,IAAAA,CAIA,OAFAV,GAAAE,MAAAQ,IAAAA,EAEAT,EAWA,QAAAsB,GAAAC,EAAA/D,GAEA,gBAAA+D,KACAA,GAAAA,GAGA,KADA,GAAAC,GAAApI,EAAAmI,EAAA9H,OACAL,KAGA,GAFAoI,EAAAD,EAAAnI,GACAoI,EAAA,GAAAC,QAAA,KAAAD,EAAAE,OAAA,EAAA,GAAAF,EAAA,IAAAA,EAAAzE,QAAA,QAAA,OAAAA,QAAA,MAAA,KAAA,KACAyE,EAAArD,KAAAX,GACA,OAAA,CAGA,QAAA,EAWA,QAAAmE,GAAA5B,GACA,GAAA6B,GAAA5D,EAAA+B,EAAA/B,QAOA,IANA+B,EAAA8B,OAAA9B,EAAA8B,QAAAlH,EAAAmH,EAAAC,OACApD,EAAAoB,EAAAzB,OAAA,EAEAyB,EAAAE,QACAF,EAAAE,UAEAF,EAAA8B,OAWA9B,EAAAiC,OAAAtE,EAAAqC,EAAAiC,QACAjC,EAAAkC,QAAAlC,EAAAkC,SAAA,UAAAvC,IACAK,EAAAmC,OAAAC,KAAAC,SAAA7H,SAAA,IAAAsD,UAAA,GACAlD,EAAAqD,KAKAA,EAJAZ,EAAAxD,EAAAyI,OAAAjF,EAAA2C,EAAAiC,QAIA,IAEAhI,EAAA1B,EAAA,gBAAA0B,EAAAL,EAAA,eAIA,IAEAoG,EAAAuC,KAAAtI,EAAA1B,EAAA,kBAAAkC,IAIA,IAEA,UAAAI,UAAA2H,SAAA,gBAAAjK,IAAA,IAAAsC,UAAA4H,UAAAjE,QAAA,UAIA,IAEAwB,EAAA0C,aAMA,IAQA,SA/CA,IALA1C,EAAAkC,QAAAH,EAAAY,MAAA3F,QAAA,YAAA,IACAgD,EAAAmC,OAAAJ,EAAAa,MACA5C,EAAAiC,OAAAF,EAAAc,MAAA7F,QAAA,YAAA,IAEAiB,EAAA8D,EAAAC,MACAhC,EAAAwB,MAAAD,EAAAvB,EAAAwB,IAAAxB,EAAAiC,QACA,KAAA,IAAA3I,OAAA,qBAAA0G,EAAAiC,OAmDA,QADAjC,EAAA/B,SAAAA,EACAA,GACA,IAAA,IAQA,GAPAc,EAAAiB,GACA8C,SAAA,IACAC,MAAA,IACAC,WAAA,EACAC,WAAA,EACAC,YAAA,IACA,GACAlD,EAAA8B,OAAA,CACA,IAAA9B,EAAAmD,MAAA,CAIA,IAFA,GAAAC,GAAA3F,EAAA5D,EAAAoE,SAAA,KAAApE,EAAAqE,KAAAmF,EAAAzJ,EAAA2F,KAAA+D,qBAAA,OACAjK,EAAAgK,EAAA3J,OACAL,KAEA,GADA+J,EAAAC,EAAAhK,GACA+J,EAAA1C,IAAA5C,UAAA,EAAAL,EAAA/D,UAAA+D,EAAA,CACAuC,EAAAmD,MAAAC,EAAA1C,GACA,OAGAV,EAAAmD,QAEAnD,EAAAmD,MAAA5K,GAIA,GAAA+F,IACAqE,MAAA3C,EAAAkC,QACAF,MAAA,EAGAhC,GAAAmD,QAAA5K,GAEAyH,EAAAkD,YAAA,EACAlD,EAAAiD,WAAA,EACAjD,EAAAmD,MAAAtJ,EAAAoE,SAAA,KAAApE,EAAAqE,KAAArE,EAAAkE,SAAAlE,EAAA0J,OACAjF,EAAAuE,MAAA7C,EAAAmD,MACA7E,EAAAkF,OAAA,GAGAlF,EAAAuE,MAAAlF,EAAAqC,EAAAmD,OAGAnD,EAAAI,YACAJ,EAAAgD,WAAA,EACA1E,EAAAmF,OAAA,GAEAzD,EAAAiC,OAAA5D,EAAA2B,EAAAiC,OAAA3D,OAGAS,GAAAiB,GACAiD,WAAArI,EAAAmH,EAAAyB,QACAN,YAAAtI,EAAAmH,EAAA0B,QACAT,UAAAhD,EAAAiD,WAAA,EAAAjD,EAAAgD,WAGAnB,IAAA,GAAAlF,GAAA+G,MAAAC,cAAA3D,GAAA,GAAArD,GAAA+G,MAAAE,qBAAA,GAAAjH,GAAA+G,MAAAG,eACAC,QAAA,EACAC,UAAA,IAAA/D,EAAAiC,OAAAvI,SACA,GAAAiD,GAAA+G,MAAAM,gBACAC,SAAAjE,EAAA8B,SAEA,MACA,KAAA,IACAD,GAAA,GAAAlF,GAAA+G,MAAAQ,qBAAAlE,GACA,MACA,KAAA,IACAA,EAAA8B,SACA9B,EAAA0C,aAAA/E,EAAAqC,EAAA0C,eAEAb,GAAA,GAAAlF,GAAA+G,MAAAS,cAAAnE,GAAA,GAAArD,GAAA+G,MAAAG,cAAA,GAAAlH,GAAA+G,MAAAM,gBACAC,SAAAjE,EAAA8B,SAEA,MACA,KAAA,IACAD,GAAA,GAAAlF,GAAA+G,MAAAU,aAAApE,GACA,MACA,KAAA,IACA6B,GAAA,GAAAlF,GAAA+G,MAAAW,oBAAArE,GACA,MACA,KAAA,IACA6B,GAAA,GAAAlF,GAAA+G,MAAAY,sBAAAtE,GACA,MACA,KAAA,IACA9E,GACAT,IAEAoH,GAAA,GAAAlF,GAAA+G,MAAAa,eAAAvE,IAQA,MAJA6B,GAAAzF,KAAA,GAAAO,GAAA+G,MAAAG,eACAW,KAAAxE,EAAAwE,KACAC,QAAA,KAEA5C,EASA,QAAA6C,GAAAC,GAkBA,IAAA,GAjBAC,GAAAC,GACAC,SAAA,SAAAC,EAAAC,GACAtM,KAAAuM,GAAAH,SAAAC,EAAAC,IAEAE,SAAA,SAAAH,EAAAI,GACAzM,KAAA0M,KAAAF,SAAAH,EAAAI,IAEAE,SAAA,SAAAC,GACA5M,KAAAuM,GAAAI,SAAAC,IAEAC,KAAA,WACA7M,KAAA0M,KAAAG,QAEAC,QAAA,WACA9M,KAAA0M,KAAAI,YAGAnM,EAAA,EAAAoM,EAAAd,EAAAjL,OAAA+L,EAAApM,EAAAA,IACAuL,EAAAD,EAAAtL,GACA0F,EAAA6F,EAAAC,GAAA,GACA,IAAAxL,IACAuL,EAAAQ,KAAAT,EAAAtL,EAAA,IAEAA,IAAAoM,EAAA,IACAb,EAAAK,GAAAN,EAAAtL,EAAA,GAGA,OAAAuL,GAOA,QAAAc,GAAAC,GACAA,EAAAV,GAAAG,KAAAO,EAAAP,KACAO,EAAAP,KAAAH,GAAAU,EAAAV,GACAU,EAAAV,GAAAU,EAAAP,KAAA,KAttBA,GAUAxF,GAEA1E,EACAW,EAsDAkF,EAAA6E,EAnEApN,EAAAE,KACAiH,EAAAyC,KAAAyD,MAAA,IAAAzD,KAAAC,UACAyD,EAAAC,SAAAxL,UACA4C,EAAA,qCACAgB,EAAA,kBACAP,EAAA,cACApB,EAAA,GACAG,KACAG,EAAAvE,EAAAoE,QACAI,EAAA,WAEA6B,GAAA,CAyDA,IAAA3E,EAAA1B,EAAA,oBACAwI,EAAA,SAAAE,EAAA+E,EAAAC,GACAhF,EAAAiF,iBAAAF,EAAAC,GAAA,IAEAL,EAAA,SAAA3E,EAAA+E,EAAAC,GACAhF,EAAAkF,oBAAAH,EAAAC,GAAA,QAGA,CAAA,IAAAhM,EAAA1B,EAAA,eASA,KAAA,IAAAe,OAAA,wBARAyH,GAAA,SAAA7G,EAAAkM,EAAAC,GACAnM,EAAAoM,YAAA,KAAAF,EAAAC,IAEAT,EAAA,SAAA1L,EAAAkM,EAAAC,GACAnM,EAAAqM,YAAA,KAAAH,EAAAC,IAUA,GAAAG,GAAAzK,GAAA,EAAAC,IA2BA,IA1BA,cAAApC,IAIA4M,EAAA5M,EAAA4M,WACAzK,EAAA,YAAAyK,IAAA3L,UAAA4H,UAAAjE,QAAA,kBAAA,UAAAgI,GAAA,eAAAA,IAMAzK,IAAAnC,EAAA2F,MAeAxD,EAAA,CACA,GAAA9B,EAAA1B,EAAA,oBACAwI,EAAAnH,EAAA,mBAAAkC,OAQA,IALAiF,EAAAnH,EAAA,mBAAA,WACA,YAAAA,EAAA4M,YACA1K,MAGAlC,EAAA6M,gBAAAC,UAAAnO,IAAAiI,IAAA,CACA,GAAAmG,GAAA,WACA,IAAA5K,EAAA,CAIA,IACAnC,EAAA6M,gBAAAC,SAAA,QAEA,MAAA9N,GAEA,WADAkB,GAAA6M,EAAA,GAGA7K,KAEA6K,KAKA5F,EAAAxI,EAAA,OAAAuD,GA+IA,GAAAiG,GAAA,SAAArC,GACAA,EAAAA,EAAA5B,UAAA,GAAApB,MAAA,IAEA,KADA,GAAAkK,GAAAC,KAAAxN,EAAAqG,EAAAhG,OACAL,KACAuN,EAAAlH,EAAArG,GAAAqD,MAAA,KACAmK,EAAAD,EAAA,IAAA7M,EAAA6M,EAAA,GAEA,OAAAC,IACA,SAAAzI,KAAAvE,EAAA0J,QAAA1J,EAAA0J,OAAA1J,EAAA0E,MAkBAuI,EAAA,WACA,GAAAC,MACAzK,GACAnD,GAAA,EAAA,EAAA,IACA6N,EAAA,eAEA,OAAA,mBAAAC,OAAA,kBAAAA,MAAAC,WAAAD,KAAAC,UAAA5K,GAAAU,QAAA,MAAA,MAAAgK,EAEAC,MAEA3M,OAAA6M,QACA7M,OAAA6M,OAAA7K,GAAAU,QAAA,MAAA,MAAAgK,IAEAD,EAAAG,UAAA5M,OAAA6M,QAIA,kBAAAC,QAAA7M,UAAA8M,WACA/K,EAAA0K,EAAAK,WACA/K,EAAAnD,GAAA,IAAAmD,EAAAnD,EAAAO,QAAA,IAAA4C,EAAAnD,EAAA,KAEA4N,EAAAO,MAAA,SAAAC,GACA,MAAAA,GAAAF,cAKAN,EAAAG,WAAAH,EAAAO,OAEAR,EAAA,WACA,MAAAC,IAEAA,GAEA,MAmYAhI,GAAApC,GAKA6K,QAAA,WAMAzF,MAAAA,EAIA2B,SAOA3E,MAAAA,EAMA0I,cAAAX,EAOA7K,UAAAA,EASAW,WAAAA,IA4DAD,EAAA+K,WAOA3G,GAAAA,EAOA6E,GAAAA,EAQA+B,aAAA,SAAA9J,GACAzD,EAAA7B,EAAA,SAGAqB,EAAAgO,MAAA,uCAAA/J,EAAA,iBA8BA,WAEA,GAAAgK,KAQAlL,GAAAmL,IAOAC,IAAA,SAAArN,EAAAwB,GACA2L,EAAAnN,GAAAwB,GASA8L,IAAA,SAAAtN,EAAAuN,GACA,GAAAJ,EAAAlJ,eAAAjE,GAAA,CAGA,GAAAwB,GAAA2L,EAAAnN,EAKA,OAHAuN,UACAJ,GAAAnN,GAEAwB,QAoFAS,EAAAuL,OAAA,SAAAlI,GAGA,GAAA0D,GAAAgB,EAAA9C,EAAA5B,GAAAmI,SACArD,SAAA,SAAAC,EAAAC,GACAhF,EAAAoI,UAAArD,EAAAC,IAEAK,SAAA,SAAAC,GACAtF,EAAAqI,SACArI,EAAAqI,QAAA/C,QAGAH,EAAA9H,EAAA2C,EAAAiC,OAGAvJ,MAAAsM,OAAA3H,EAAA2C,EAAAiC,QAKAvJ,KAAA8M,QAAA,WACA9B,EAAA8B,WAOA9M,KAAA4P,YAAA,SAAAvD,GACArB,EAAAwB,SAAAH,EAAAI,IAGAzB,EAAA6B,QAmIA5I,EAAA4L,IAAA,SAAAvI,EAAAwI,GAGA,GAAAA,EAAArF,MACA,IAAA,GAAAhC,KAAAqH,GAAArF,MACA,GAAAqF,EAAArF,MAAAxE,eAAAwC,GAAA,CACA,GAAAhC,GAAAqJ,EAAArF,MAAAhC,EACA,mBAAAhC,KACAqJ,EAAArF,MAAAhC,IACAA,OAAAhC,IAQA,GAAAuE,GAAAgB,EAAA9C,EAAA5B,GAAAmI,QAAA,GAAAxL,GAAA+G,MAAA+E,YAAA/P,KAAA8P,IACAnD,SAAA,SAAAC,GACAtF,EAAAqI,SACArI,EAAAqI,QAAA/C,OAMA5M,MAAAsM,OAAA3H,EAAA2C,EAAAiC,QAMAvJ,KAAA8M,QAAA,WACA9B,EAAA8B,WAGA9B,EAAA6B,QAqCA5I,EAAA+G,MAAAW,oBAAA,SAAArE,GACA,GAAA0I,GAAAzI,EAAA0I,EAAAC,CAEA,OAAAF,IACAxD,SAAA,SAAAH,EAAAtH,EAAAvB,GACAyM,EAAA5D,GACA7I,GACAA,KAGAsJ,QAAA,WACAvF,IACAA,EAAAqB,WAAAxB,YAAAG,GACAA,EAAA,OAGA4I,WAAA,WACAD,EAAAvL,EAAA2C,EAAAiC,QAEAjC,EAAA8B,QAEA/C,EAAAiB,EAAAE,OACAQ,IAAArC,EAAA2B,EAAAiC,QACAY,MAAAhJ,EAAAoE,SAAA,KAAApE,EAAAqE,KAAArE,EAAAkE,SACA4E,MAAA3C,EAAAkC,QACAF,MAAA,IAEAtH,KAAAqC,EAAAiD,EAAAkC,QAAA,cAEAjC,EAAAF,EAAAC,GACArD,EAAAmL,GAAAC,IAAA/H,EAAAkC,QAAA,SAAA4G,GAKA,MAJAH,GAAAG,EACAhP,EAAA,WACA4O,EAAAzD,GAAAI,UAAA,IACA,GACA,SAAA0D,GACAL,EAAAzD,GAAAH,SAAAiE,EAAAH,QAKAD,EAAAtM,IAAAyL,GAAAE,IAAAhI,EAAAkC,SAAA,GAAA,SAAA6G,GACAL,EAAAzD,GAAAH,SAAAiE,EAAAH,KAEA9O,EAAA,WACA4O,EAAAzD,GAAAI,UAAA,IACA,KAGAE,KAAA,WACAtJ,EAAAyM,EAAAG,WAAAH,MA0CA/L,EAAA+G,MAAAa,eAAA,SAAAvE,GAIA,QAAAoI,GAAArD,EAAAC,GACAlL,EAAA,WACA4O,EAAAzD,GAAAH,SAAAC,EAAA6D,IACA,GAMA,QAAAI,GAAAvL,GAEA,GAAAP,GAAA8C,EAAAuC,IAAA,SAAAvC,EAAA8B,OACA3B,EAAA,eAAAiC,KAAAyD,MAAA,IAAAzD,KAAAC,SAGA1F,GAAAmL,GAAAC,IAAA,eAAAtK,EAAAT,QAAA,SAAA,KAAA,WACAL,EAAA+G,MAAAa,eAAA9G,GAAA8E,IAAAA,EAAA0G,EAAAC,UAEA,KAAA,GADAC,GAAAxM,EAAA+G,MAAAa,eAAA9G,GAAA0L,MACA9P,EAAA,EAAAA,EAAA8P,EAAAzP,OAAAL,IACA8P,EAAA9P,IAEA8P,GAAAzP,OAAA,IAGAsG,EAAAiJ,aACAA,EAAA,gBAAAjJ,GAAAiJ,aAAArP,EAAAyG,eAAAL,EAAAiJ,cAAAjJ,EAAAiJ,cAIAA,EAAArP,EAAA6F,cAAA,OAKAV,EAAAkK,EAAA3I,MAAAzE,GAAAmE,EAAAoJ,eACAC,OAAA,OACAC,MAAA,OACA/I,SAAA,QACAgJ,MAAA,EACA/I,IAAA,IAEA6I,OAAA,MACAC,MAAA,MACA/I,SAAA,WACAiJ,SAAA,SACAD,MAAA,EACA/I,IAAA,IAEA5G,EAAA2F,KAAAC,YAAAyJ,GAIA,IAAAQ,GAAA,wBAAAzP,EAAAyD,EAAAT,QAAA,SAAA,MACA,UAAAxE,EAAAqB,SAAAoE,SACA,WAAAjE,EAAAiD,EAAAzE,EAAAqB,SAAAyI,OACA,SAAAtI,EAAAoD,EAAA5E,EAAAqB,SAAAyI,OACA,OAAAtI,EAAAwC,EACAyM,GAAAS,UAAA,2EAAAvJ,EAAA,WAAAjD,EAAA,+HAIAA,EACA,4CAEAuM,EACA,oEAEAA,EACA,yDACAvM,EACA,2CAzEA,GAAAwL,GACAzI,EAAA2I,EAAArG,EAAA0G,CA4EA,OAAAP,IACAxD,SAAA,SAAAH,EAAAtH,EAAAvB,GACAqG,EAAA+F,YAAAtI,EAAAkC,QAAA6C,EAAAvK,YACA0B,GACAA,KAGAsJ,QAAA,WACA,IACAjD,EAAAoH,eAAA3J,EAAAkC,SAEA,MAAAtJ,IAEA2J,EAAA,KACAtC,IACAA,EAAAqB,WAAAxB,YAAAG,GACAA,EAAA,OAGA4I,WAAA,WAEAD,EAAA5I,EAAAiC,OAGAtF,EAAAmL,GAAAC,IAAA,SAAA/H,EAAAkC,QAAA,QAAA,WACApI,EAAA,WACA4O,EAAAzD,GAAAI,UAAA,OAKA1I,EAAAmL,GAAAC,IAAA,SAAA/H,EAAAkC,QAAA,aAAAkG,GAEApI,EAAAuC,IAAA5E,EAAAqC,EAAAuC,IACA,IAAAqH,GAAA3M,EAAA+C,EAAAuC,KACArG,EAAA,WAEAS,EAAA+G,MAAAa,eAAAqF,GAAArE,MAAA,EACAhD,EAAA5F,EAAA+G,MAAAa,eAAAqF,GAAArH,IAEAA,EAAAsH,cAAA7J,EAAAkC,QAAAlC,EAAAmC,OAAA9E,EAAA2C,EAAAiC,QAAAjC,EAAA8B,QAEA9B,EAAA8B,SAEAjG,GAAAmE,EAAAoJ,eACArK,EAAAiB,EAAAE,OACAK,SAAA,QACAgJ,MAAA,EACA/I,IAAA,EACA6I,OAAA,OACAC,MAAA,SAIAvK,EAAAiB,EAAAE,OACAQ,IAAArC,EAAA2B,EAAAiC,QACAY,MAAAxF,EAAAxD,EAAAyI,MACAK,MAAA3C,EAAAkC,QACAF,MAAA,EACAY,MAAA5C,EAAAmC,SAEAzH,KAAAqC,EAAAiD,EAAAkC,QAAA,cAEAjC,EAAAF,EAAAC,IAIArD,GAAA+G,MAAAa,eAAAqF,IAAAjN,EAAA+G,MAAAa,eAAAqF,GAAArE,KAEArJ,IAIAS,EAAA+G,MAAAa,eAAAqF,GAQAjN,EAAA+G,MAAAa,eAAAqF,GAAAT,MAAA/M,KAAAF,IANAS,EAAA+G,MAAAa,eAAAqF,IACAT,OAAAjN,IAEA8M,EAAAY,KAOArE,KAAA,WACAtJ,EAAAyM,EAAAG,WAAAH,MAwCA/L,EAAA+G,MAAAQ,qBAAA,SAAAlE,GAWA,QAAA8J,GAAAC,GACA,GAAAA,EAAA/E,OAEA,MAAA3H,GAAA0M,EAAA/E,OAEA,IAAA+E,EAAAC,IAEA,MAAA3M,GAAA0M,EAAAC,IAEA,IAAAD,EAAAtM,OAGA,MAAA5D,GAAAoE,SAAA,KAAA8L,EAAAtM,MAEA,MAAA,6CASA,QAAAwM,GAAAF,GACA,GAAA,gBAAAA,GAAAlD,KAAA,CAIA,GAAA7B,GAAA8E,EAAAC,EACA/E,IAAA4D,GAAAmB,EAAAlD,KAAA/I,UAAA,EAAAkC,EAAAkC,QAAAxI,OAAA,IAAAsG,EAAAkC,QAAA,KACAwG,EAAAzD,GAAAH,SAAAiF,EAAAlD,KAAA/I,UAAAkC,EAAAkC,QAAAxI,OAAA,GAAAsL,IAWA,QAAAkF,GAAAH,GACAA,EAAAlD,MAAA7G,EAAAkC,QAAA,WAEAiI,EAAA,eAAAlK,GAAAmK,cAAAnK,EAAAmK,cAAAnK,EAAAmK,cAAAxQ,SACAgM,EAAArN,EAAA,UAAA2R,GACAnJ,EAAAxI,EAAA,UAAA0R,GACAnQ,EAAA,WACA4O,EAAAzD,GAAAI,UAAA,IACA,IA3DA,GAAAqD,GACAzI,EACAkK,EACAvB,CA4DA,OAAAF,IACAxD,SAAA,SAAAH,EAAAtH,EAAAvB,GACAiO,EAAA7B,YAAAtI,EAAAkC,QAAA,IAAA6C,EAAAtH,GAAAmL,GACA1M,GACAA,KAGAsJ,QAAA,WACAI,EAAArN,EAAA,UAAA2R,GACAtE,EAAArN,EAAA,UAAA0R,GACAhK,IACAkK,EAAA,KACAlK,EAAAqB,WAAAxB,YAAAG,GACAA,EAAA,OAGA4I,WAAA,WACAD,EAAAvL,EAAA2C,EAAAiC,QACAjC,EAAA8B,QACAf,EAAAxI,EAAA,UAAA2R,GAGAnL,EAAAiB,EAAAE,OACAQ,IAAArC,EAAA2B,EAAAiC,QACAY,MAAAxF,EAAAxD,EAAAyI,MACAK,MAAA3C,EAAAkC,QACAF,MAAA,IAEAtH,KAAAqC,EAAAiD,EAAAkC,QAAA,cAEAjC,EAAAF,EAAAC,KAIAe,EAAAxI,EAAA,UAAA0R,GACAE,EAAA,eAAA5R,GAAAgE,OAAAhE,EAAAgE,OAAAhE,EAAAgE,OAAA3C,SACAuQ,EAAA7B,YAAAtI,EAAAkC,QAAA,SAAA0G,GAEA9O,EAAA,WACA4O,EAAAzD,GAAAI,UAAA,IACA,KAGAE,KAAA,WACAtJ,EAAAyM,EAAAG,WAAAH,MAuCA/L,EAAA+G,MAAAY,sBAAA,SAAAtE,GACA,GAAA0I,GAAAzI,EAAA0I,EAAAC,CAEA,OAAAF,IACAxD,SAAA,SAAAH,EAAAtH,EAAAvB,GACAyM,EAAAlP,KAAAf,KAAAqM,GACA7I,GACAA,KAGAsJ,QAAA,WACAvF,IACAA,EAAAqB,WAAAxB,YAAAG,GACAA,EAAA,OAGA4I,WAAA,WACAD,EAAAvL,EAAA2C,EAAAiC,QAEAjC,EAAA8B,QAEA/C,EAAAiB,EAAAE,OACAQ,IAAArC,EAAA2B,EAAAiC,QACAY,MAAAxF,EAAAxD,EAAAyI,MACAK,MAAA3C,EAAAkC,QACAF,MAAA,IAEAtH,KAAAqC,EAAAiD,EAAAkC,QAAA,cAEAjC,EAAAF,EAAAC,GACAC,EAAA/D,GAAA,SAAA4M,GAOA,aANA7I,GAAA/D,GACAyM,EAAAG,EACAhP,EAAA,WACA4O,EAAAzD,GAAAI,UAAA,IACA,GAEA,SAAA0D,GACAL,EAAAzD,GAAAH,SAAAiE,EAAAH,OAMAhP,EAAAyQ,UAAAhN,EAAAzD,EAAAyQ,WAAAtI,EAAAc,QACAtK,EAAAiI,IAAA3G,SAAAkI,EAAAc,OAEA8F,EAAApQ,EAAA+R,aAAApO,GAAA,SAAA6M,GACAL,EAAAzD,GAAAH,SAAAiE,EAAAH,KAEAF,EAAAzD,GAAAI,UAAA,KAGAE,KAAA,WACAtJ,EAAAyM,EAAAG,WAAAH,MAwCA/L,EAAA+G,MAAAS,cAAA,SAAAnE,GAKA,QAAAuK,GAAAxF,GACA,GAAA7H,GAAA8C,EAAA0C,cAAAZ,EAAA,MAAA,OAAA9B,EAAAkC,OACAiI,GAAAC,cAAAI,YAAAzF,EAAA7H,GAGA,QAAAuN,KACA3I,EACA,MAAA4I,GAAA5I,GACA4G,EAAAzD,GAAAI,UAAA,IAIAkF,EAAA,SACA7B,EAAAzD,GAAAI,UAAA,IAIA,QAAAsF,GAAA5F,GACA2D,EAAAzD,GAAAH,SAAAC,EAAA6F,GAGA,QAAAC,KACAxF,GACAvL,EAAA,WACAuL,GAAA,IACA,GA5BA,GAAAqD,GACA5G,EAAAqI,EAAAW,EAAAJ,EAAArF,EAAAuF,EAAAG,CA+BA,OAAArC,IACAxD,SAAA,SAAAH,EAAAtH,EAAAvB,GACAmJ,EAAAnJ,EACAqO,EAAAxF,IAEAS,QAAA,WACA2E,EAAA7I,WAAAxB,YAAAqK,GACAA,EAAA,KACArI,IACAgJ,EAAAxJ,WAAAxB,YAAAgL,GACAA,EAAA,OAGAjC,WAAA,WACA/G,EAAA9B,EAAA8B,OACA4I,EAAA,EACAE,EAAAvN,EAAA2C,EAAAiC,QACAjC,EAAAmD,MAAAxF,EAAAqC,EAAAmD,OAEArB,GAEAnF,EAAAmL,GAAAC,IAAA/H,EAAAkC,QAAA,SAAA6C,GACAjD,GAAA,UAAAiD,IAEApI,EAAAmL,GAAAC,IAAA/H,EAAAkC,QAAAyI,GACAF,OAKAM,EAAA1M,EAAA2B,EAAAiC,QACAY,MAAA7C,EAAAmD,MACAR,MAAA3C,EAAAkC,QACAF,MAAA,IAEAjD,EAAAiB,EAAAE,OACAQ,IAAAqK,EAAA,IAAA/K,EAAAkC,QACAxH,KAAAqC,EAAAiD,EAAAkC,QAAA,cAEA4I,EAAA/K,EAAAC,KAGAA,EAAA0C,aAAA1C,EAAAiC,OACAtF,EAAAmL,GAAAC,IAAA/H,EAAAkC,QAAAyI,GAIA,IAAA7J,GAAA,WAEA,GAAAkK,GAAAb,GAAAzR,IACAkN,GAAAoF,EAAA,OAAAlK,GACAnE,EAAAmL,GAAAC,IAAA/H,EAAAkC,QAAA,QAAA2I,GACA,QAAAzM,KACA,kBAAA4M,GAAAZ,cAAAI,YACAC,IAGA3Q,EAAAsE,EAAA,OAKA+L,GAAApK,GACAG,OACAQ,IAAAV,EAAAmD,MAAA,MAAAnD,EAAAkC,SAEApB,OAAAA,KAGAyE,KAAA,WACAtJ,EAAAyM,EAAAG,WAAAH,MAyCA/L,EAAA+G,MAAAC,cAAA,SAAA3D,GAKA,QAAAuK,GAAAxF,GACA,GAAAkG,EAAA,CAGA,GAAA/N,GAAA8C,EAAAiC,OAAA,IAAAiJ,KAAA,IAAAnG,GACAjD,IAAAmB,EAAAgI,EAAAb,cAAAa,GAAApR,SAAAqD,GAGA,QAAAiO,GAAA5M,GACA6M,EAAA7M,EACAmK,EAAAzD,GAAAH,SAAAsG,EAAAtN,UAAAsN,EAAA5M,QAAA,KAAA,GAAA6M,GAOA,QAAAC,KACA,GAAAC,EAAA,CAGA,GAAAjJ,GAAAiJ,EAAA1R,SAAAyI,KAAA/D,EAAA,GAAAC,EAAA8D,EAAA9D,QAAA,IACA,KAAAA,IACAD,EAAA+D,EAAAxE,UAAAU,IAEAD,GAAAA,GAAA6M,GACAD,EAAA5M,IAIA,QAAAiN,KACAC,EAAAC,YAAAJ,EAAAK,GAnCA,GAAAjD,GACA5G,EAAA2J,EAAAE,EAAAP,EAAAF,EAAAK,EAAAN,EACAhI,EAAAoI,CAoCA,OAAA3C,IACAxD,SAAA,SAAAH,EAAAtH,GACA8M,EAAAxF,IAEAS,QAAA,WACAjN,EAAAqT,cAAAH,IACA3J,IAAAmB,IACAgI,EAAA3J,WAAAxB,YAAAmL,GAEAA,EAAA,MAEApC,WAAA,WAOA,GANA/G,EAAA9B,EAAA8B,OACA6J,EAAA3L,EAAA8C,SACAsI,EAAA,IAAApL,EAAAkC,QACAgJ,EAAA,EACAjI,EAAAjD,EAAAiD,UACAoI,EAAAhO,EAAA2C,EAAAiC,QACAH,EAAA,CAKA,GAJA/C,EAAAiB,EAAAE,OACAQ,IAAAV,EAAAiC,OACAvH,KAAAqC,EAAAiD,EAAAkC,QAAA,cAEAe,EACAjD,EAAAc,OAAA,WACAyK,EAAAhT,EACAiT,IACA9C,EAAAzD,GAAAI,UAAA,QAGA,CACA,GAAAwG,GAAA,EAAAC,EAAA9L,EAAA+C,MAAA,IACA,QAAAgJ,KACA,KAAAF,EAAAC,EACA,KAAA,IAAAxS,OAAA,qCAEA,KACAiS,EAAAN,EAAAb,cAAA4B,OAAAjP,EAAAiD,EAAAkC,QAAA,aAEA,MAAA+J,IAEAV,GACAC,IACA9C,EAAAzD,GAAAI,UAAA,IAGAvL,EAAAiS,EAAA,OAIAd,EAAAlL,EAAAC,OAGAuL,GAAAhT,EACAiT,IACAvI,GACAgI,EAAA1O,OACAmM,EAAAzD,GAAAI,UAAA,KAGAtG,EAAAiB,GACAE,OACAQ,IAAAV,EAAAiC,OAAA,IAAAjC,EAAAkC,QAAA,GAAAgK,MACAxR,KAAAqC,EAAAiD,EAAAkC,QAAA,aAEApB,OAAA,WACA4H,EAAAzD,GAAAI,UAAA,MAGA4F,EAAAlL,EAAAC,KAIAuF,KAAA,WACAtJ,EAAAyM,EAAAG,WAAAH,MAqCA/L,EAAA+G,MAAAE,iBAAA,SAAA5D,GACA,GAAA0I,GACArD,EACA8G,EAAA,EAAAC,EAAA,EAAAC,EAAA,EAEA,OAAA3D,IACA5D,SAAA,SAAAC,EAAAC,GACA,GAAAxG,GAAAuG,EAAAvG,QAAA,KAAA8N,EAAAvH,EAAAjH,UAAA,EAAAU,GAAA9B,MAAA,IACAqI,GAAAA,EAAAjH,UAAAU,EAAA,GAEA8N,EAAA,IAAAH,IACAE,EAAA,GACAhH,GACAA,GAAA,IAGAN,EAAArL,OAAA,IACAgP,EAAAtD,KAAAF,SAAAoH,EAAA,GAAA,IAAAH,EAAA,IAAAE,EAAArH,GACAoH,GAAAE,EAAA,KACAF,EAAAE,EAAA,GACA5D,EAAAzD,GAAAH,SAAAC,EAAAC,MAKAE,SAAA,SAAAH,EAAAC,EAAA9I,GACAmQ,EAAAtH,EACAM,EAAAnJ,EACAwM,EAAAtD,KAAAF,SAAAkH,EAAA,OAAAD,EAAA,IAAApH,EAAAC,MAyCArI,EAAA+G,MAAAG,cAAA,SAAA7D,GAGA,QAAAuM,KACA,GAAAvM,EAAAyE,QAAA,IAAA0E,EAAAzP,OAEA,WADAgM,GAAAgD,EAGA,KAAA8D,GAAA,IAAArD,EAAAzP,SAAA+S,EAAA,CAGAD,GAAA,CACA,IAAAzH,GAAAoE,EAAAuD,OAEAhE,GAAAtD,KAAAF,SAAAH,EAAA8B,KAAA9B,EAAAC,OAAA,SAAAM,GACAkH,GAAA,EACAzH,EAAAM,UACAvL,EAAA,WACAiL,EAAAM,SAAAC,IACA,GAEAiH,OApBA,GAAA7D,GAAA+D,EAAAtD,KAAAqD,GAAA,EAAA1H,EAAA,GAAAf,EAAA,EAAAS,GAAA,EAAAmI,GAAA,CAuBA,OAAAjE,IACAnD,KAAA,WACA3K,EAAAoF,KACAA,MAEAA,EAAA+D,YACAA,EAAA/D,EAAA+D,UACA4I,GAAA,GAEA3M,EAAAwE,KACAA,GAAA,EAGAkE,EAAAtD,KAAAG,QAGAF,SAAA,SAAAC,GACAkH,GAAA,CACA,IAAAvH,GAAAyD,EAAAzD,EACAsH,KACAtH,EAAAI,SAAAC,IAEAR,SAAA,SAAAC,EAAAC,GACA,GAAA2H,EAAA,CACA,GAAAnO,GAAAuG,EAAAvG,QAAA,KAAAoO,EAAAjR,SAAAoJ,EAAAjH,UAAA,EAAAU,GAAA,GACAsG,IAAAC,EAAAjH,UAAAU,EAAA,GACA,IAAAoO,IACA5M,EAAA8D,SACAgB,EAAA/K,EAAA+K,IAEA4D,EAAAzD,GAAAH,SAAAA,EAAAE,GACAF,EAAA,QAIA4D,GAAAzD,GAAAH,SAAAC,EAAAC,IAGAE,SAAA,SAAAH,EAAAC,EAAA9I,GACA8D,EAAA8D,SACAiB,EAAA/K,EAAA+K,GAEA,IAAA8H,GAAAC,IACA,IAAAH,EAAA,CAEA,KAAA,IAAA5H,EAAArL,QACAmT,EAAA9H,EAAAjH,UAAA,EAAAiG,GACAgB,EAAAA,EAAAjH,UAAA+O,EAAAnT,QACAoT,EAAA1Q,KAAAyQ,EAGA,MAAAA,EAAAC,EAAAJ,SACAvD,EAAA/M,MACAyK,KAAAiG,EAAApT,OAAA,IAAAmT,EACA7H,OAAAA,EACAK,SAAA,IAAAyH,EAAApT,OAAAwC,EAAA,WAKAiN,GAAA/M,MACAyK,KAAA9B,EACAC,OAAAA,EACAK,SAAAnJ,GAGAsI,GACAkE,EAAAtD,KAAAG,OAGAgH,KAGA/G,QAAA,WACAiH,GAAA,EACA/D,EAAAtD,KAAAI,aAuCA7I,EAAA+G,MAAAM,eAAA,SAAAhE,GAGA,QAAA+M,KACAC,EAAA5K,KAAAC,SAAA7H,SAAA,IAAAsD,UAAA,GACA4K,EAAAtD,KAAAF,SAAA8H,GAJA,GAAAtE,GAAAsE,EAAAC,CAOA,OAAAvE,IACA5D,SAAA,SAAAC,EAAAC,GACA,GAAAxG,GAAAuG,EAAAvG,QAAA,IACA,MAAAA,EACAuG,IAAAiI,EACAtE,EAAAzD,GAAAI,UAAA,GAEA4H,IACAA,EAAAlI,EACA/E,EAAAiE,UACA8I,IAEArE,EAAAtD,KAAAF,SAAAH,IAIAA,EAAAjH,UAAA,EAAAU,KAAAyO,GACAvE,EAAAzD,GAAAH,SAAAC,EAAAjH,UAAAU,EAAA,GAAAwG,IAIAE,SAAA,SAAAH,EAAAC,EAAA9I,GACAwM,EAAAtD,KAAAF,SAAA8H,EAAA,IAAAjI,EAAAC,EAAA9I,IAEAmJ,SAAA,SAAAC,GACAtF,EAAAiE,UACA8I,OA2CApQ,EAAA+G,MAAA+E,YAAA,SAAAyE,EAAAlN,GASA,QAAAmN,GAAAtG,GACAA,EAAAuG,QAAA,MACA1E,EAAAtD,KAAAF,SAAAmI,EAAAnG,UAAAL,IAUA,QAAAyG,GAAAC,EAAApM,GACA,GAAA5F,GAAAD,MAAAf,UAAAgB,KAEA,OAAA,YACA,GAAA8J,GAAA7L,EAAAgU,UAAA9T,OAAAqL,GACA5D,OAAAA,EAGA3H,GAAA,GAAA,kBAAAgU,WAAAhU,EAAA,IAEAA,EAAA,GAAA,kBAAAgU,WAAAhU,EAAA,IAEA6L,GACAC,QAAAkI,UAAAhU,EAAA,GACAiU,MAAAD,UAAAhU,EAAA,IAEAuL,EAAA2I,OAAAnS,EAAA9B,KAAA+T,UAAA,EAAAhU,EAAA,KAIA6L,GACAC,QAAAkI,UAAAhU,EAAA,IAEAuL,EAAA2I,OAAAnS,EAAA9B,KAAA+T,UAAA,EAAAhU,EAAA,IAEAmU,EAAA,MAAAC,GAAAvI,EACAN,EAAA5E,GAAAyN,GAIA7I,EAAA2I,OAAAnS,EAAA9B,KAAA+T,UAAA,GAEAD,EAAAM,aAAA,IAAA9I,EAAA2I,OAAAhU,SACAqL,EAAA2I,OAAA3I,EAAA2I,OAAA,IAGAP,EAAApI,IAYA,QAAA+I,GAAA3M,EAAAhB,EAAAjE,EAAAwR,GACA,IAAAxR,EAUA,YATAiE,GACAgN,GACAhN,GAAAA,EACAsN,OACAlU,KAAA,OACAwL,QAAA,0BAOA,IAAAO,GAAAmI,CACAtN,IACAmF,EAAA,SAAAyI,GACAzI,EAAAQ,EACAqH,GACAhN,GAAAA,EACA4N,OAAAA,KAGAN,EAAA,SAAA1I,EAAA8B,GACA4G,EAAA3H,CACA,IAAAiD,IACA5I,GAAAA,EACAsN,OACAlU,KAAA,OACAwL,QAAAA,GAGA8B,KACAkC,EAAA0E,MAAA5G,KAAAA,GAEAsG,EAAApE,KAIAzD,EAAAmI,EAAA3H,EAGAzL,EAAAqT,KACAA,GAAAA,GAEA,KACA,GAAAK,GAAA7R,EAAAiF,OAAApC,MAAA7C,EAAAC,MAAAuR,EAAAvF,QAAA7C,EAAAmI,IACA7S,GAAAmT,IACAzI,EAAAyI,GAGA,MAAAC,GACAP,EAAAO,EAAAjJ,UAxHA,GAAA2D,GAAA2E,EAAArN,EAAAqN,YAAAvG,IACA8G,EAAA,EAAAD,IA2HA,OAAAjF,IACA5D,SAAA,SAAAC,EAAAC,GACA,GAAA6B,GAAAwG,EAAA/F,MAAAvC,EACA,IAAA8B,EAAA1F,OAEAnB,EAAAiO,OACAjO,EAAAiO,OAAApH,EAAAsG,GAGAW,EAAAjH,EAAA1F,OAAA0F,EAAA1G,GAAAH,EAAAmD,MAAA0D,EAAA1F,QAAA0F,EAAA6G,YAGA,CAEA,GAAArI,GAAAsI,EAAA9G,EAAA1G,GACA0G,GAAA4G,MACApI,EAAAoI,OACApI,EAAAoI,MAAA5G,EAAA4G,OAGApI,EAAAC,SACAD,EAAAC,QAAAuB,EAAAkH,cAEAJ,GAAA9G,EAAA1G,MAGAoF,KAAA,WACA,GAAAvF,EAAAiC,OAEA,IAAA,GAAAd,KAAAnB,GAAAiC,OACAjC,EAAAiC,OAAAtD,eAAAwC,KACA+L,EAAA/L,GAAAmM,EAAAtN,EAAAiC,OAAAd,GAAAA,GAIAuH,GAAAtD,KAAAG,QAEAC,QAAA,WACA,IAAA,GAAArE,KAAAnB,GAAAiC,OACAjC,EAAAiC,OAAAtD,eAAAwC,IAAA+L,EAAAvO,eAAAwC,UACA+L,GAAA/L,EAGAuH,GAAAtD,KAAAI,aAIAhN,EAAAmE,QAAAA,GACApE,OAAAqB,SAAAC,SAAAtB,OAAAuB,WAAAC,mBAAAC,yBCGMkU,GAAG,SAAS9U,EAAQjB,EAAOD,GC1hFjC,GAAAiW,GAAA,SAAAC,EAAAC,GACA,GAAA5V,GAAAC,IACAA,MAAA2V,QAAAA,GAAA,0BAEA3V,KAAA0V,UAAAA,EAEA1V,KAAA4V,YAAA,SAAAZ,EAAApI,EAAAmI,GACA,GAAA1U,GAAA,GAAAwV,eACAxV,GAAAyV,iBAAA,EACAzV,EAAA0V,KAAAf,EAAAvM,OAAA1I,EAAA4V,QAAAX,EAAAgB,UAAA,GACA3V,EAAA4V,mBAAA,WACA,GAAA5V,EAAAyN,aACA,KAAAzN,EAAA6V,OACAtJ,EAAA2B,KAAAK,MAAAvO,EAAA8V,eAGApB,EADA1U,EAAA8V,aACA5H,KAAAK,MAAAvO,EAAA8V,eAEApB,OAAA1I,QAAA,mBAAAxL,KAAAR,EAAA6V,YAKA,QAAAlB,EAAAvM,QACApI,EAAA+V,iBAAA,eAAA,kCACA/V,EAAA4P,KAAA+E,EAAAqB,WACA,OAAArB,EAAAvM,QACApI,EAAA4P,KAAA+E,EAAAsB,eAUAb,GAAA5T,UAAA0U,eAAA,SAAA3J,EAAAmI,EAAAuB,GACA,GAAAzH,GAAA,EACA,KAAA,GAAA7I,KAAAsQ,GACA,IAAAzH,IACAA,GAAA,KAEAA,GAAA7I,EAAA,IAAA1E,mBAAAgV,EAAAtQ,GAGA,OAAAhG,MAAA4V,aAAAnN,OAAA,MAAAuN,SAAA,qBAAAnH,EAAAyH,aAAA,MAAA1J,EAAAmI,IAGAU,EAAA5T,UAAA2U,cAAA,SAAAC,EAAAC,EAAAC,EAAAC,EAAAhK,EAAAmI,GACA,GAAAlO,IACAgQ,SAAAJ,EACAK,SAAAJ,EACAK,YAAAJ,EAEA,OAAA3W,MAAA4V,aAAAnN,OAAA,OAAAuN,SAAA,yBAAAhW,KAAA0V,UAAA,iBAAApU,mBAAAsV,GAAAP,SAAA9H,KAAAC,UAAA3H,IAAA+F,EAAAmI,IAGAU,EAAA5T,UAAAmV,QAAA,SAAAC,EAAArK,EAAAmI,GACA,MAAA/U,MAAA4V,aAAAnN,OAAA,MAAAuN,SAAA,MAAAM,aAAA,eAAAW,GAAArK,EAAAmI,IAGAtV,EAAAD,QAAAiW,ODuiFMyB,MAAQ,SAASxW,EAAQjB,EAAOD,GEnmFtC,QAAAS,GAAAkX,GAoDA,QAAAC,GAAAC,GACA,GAAAA,EAAAC,WAAA,gBACA,MAAAD,EAGA,KADA,GAAA1W,GAAA,GACA0W,EAAAA,EAAAE,iBAAAF,EAAAC,WAAA,mBAAA3W,EAAAZ,EAAAyX,SAAAC,kBACA,MAAAJ,GAzDA,GAAAtX,GAAAC,IAEAD,GAAA2X,eAEA3X,EAAAyX,YACAzX,EAAAyX,SAAAG,aAAAR,EAAAQ,cAAA,SAAAlX,KAEAV,EAAAyX,SAAAI,mBAAAT,EAAAS,oBAAA,SAAAnX,EAAAoX,GACA,OAAA,GAEA9X,EAAAyX,SAAAM,+BAAAX,EAAAW,iCAAA,EACA/X,EAAAyX,SAAAZ,YAAAO,EAAAP,aAAAmB,OACAhY,EAAAyX,SAAAQ,OAAAb,EAAAa,QAAA,0BACAjY,EAAAyX,SAAAC,gBAAAN,EAAAM,iBAAA,GACA1X,EAAAyX,SAAAS,YAAAd,EAAAc,cAAA,EACAlY,EAAAyX,SAAA9B,UAAAyB,EAAAzB,UACA3V,EAAAyX,SAAAU,OAAAf,EAAAe,QAAA,IAEA,IAAAlD,KASA,IARAA,EAAAU,UAAAyB,EAAAzB,UAEA3V,EAAAyX,SAAAZ,cACA5B,EAAAmD,aAAApY,EAAAyX,SAAAZ,aAGA7W,EAAAqY,KAAA,GAAA3C,GAAA0B,EAAAzB,UAAA3V,EAAAyX,SAAAQ,SAEAjY,EAAAyX,SAAAS,YAAA,CAEA,GAAAI,GAAA,WACAtY,EAAAqY,KAAA7B,eAAA,SAAA+B,GACAvY,EAAA2X,cACA,KAAA,GAAA1R,KAAAsS,GACAA,EAAArS,eAAAD,KACAjG,EAAA2X,YAAA,MAAA1R,GAAAsS,EAAAtS,KAGA,SAAA9F,GACAqY,QAAAxD,MAAA7U,IACA8U,GAIAqD,KACArF,YAAAqF,EAAA,MAEA,EAAAtY,EAAAyY,4BAAA,gBAcAzY,EAAAyX,SAAAM,gCACA5W,SAAAsM,iBAAA,QAAA,SAAAtN,GACA,GAAAqI,GAAA6O,EAAAlX,EAAAqI,OAEA,IAAAA,EAAA,CAGA,GAAAkQ,GAAAlQ,EAAA+O,WAAA,eACA,IAAAmB,EAAA,CACA,GAAAC,GAAAD,EAAAC,SACAA,IACA3Y,EAAA0W,OAAAkC,SAAAD,SAhFA,GAAAjD,GAAA/U,EAAA,UACAA,GAAA,aA4FAT,EAAA4B,UAAA4U,MAAA,SAAA/P,EAAAqO,EAAAnI,GACA,GAAA7M,GAAAC,IAEA,IAAA0G,GAAA3G,EAAA2X,aAQAhR,EAAAiS,SACA,GAAAjS,EAAAiS,SAAAC,WAAA,OAAA,CACA,GAAAC,GAAA9Y,EAAA2X,YAAAhR,EAAAiS,SACAZ,SAAAc,EACAhZ,OAAAsB,SAAAyI,KAAA7J,EAAA2X,YAAAhR,EAAAiS,UAEAJ,QAAAxD,MAAA,cAAArO,EAAAiS,SAAA,sBAGA,cAAAjS,EAAAiS,SACA5Y,EAAAqY,KAAA5B,cAAA9P,EAAA+P,MAAA/P,EAAAgQ,KAAAhQ,EAAAiQ,WAAA5W,EAAAyX,SAAAZ,YAAA,SAAAkC,GACA,GAAAA,EAAAC,UAAA,CACA,GAAAC,GAAA,WACAnZ,OAAAsB,SAAAyI,KAAAkP,EAAAC,UAEAnM,GACAA,GAAAsJ,OAAA,UAAA+C,OAAAD,EAAApC,YAAAkC,EAAAC,YAEAC,QAGAjE,GAAAhV,EAAAmZ,kBAAA,0BAAAjZ,EAAAkZ,0CAEA,SAAAC,GACArE,EAAAqE,KAEA,OAAA1S,EAAAiS,SACA,SAAAU,YACAtZ,EAAAqY,KAAApB,QAAAtQ,EAAAuQ,YAAA,KAAA,MACA,QAAAoC,YAKAd,QAAAxD,MAAA,sBAKA9U,EAAA4B,UAAAyX,QAAA,SAAAC,EAAAxE,EAAAnI,KAKA3M,EAAA4B,UAAA2W,4BAAA,SAAAgB,GAGA,IAAA,GAFAC,MACAC,EAAAxY,SAAA0J,qBAAA,KACAjK,EAAA,EAAAP,EAAAsZ,EAAA1Y,OAAAZ,EAAAO,EAAAA,IAEA,OAAA+Y,EAAA/Y,GAAAgZ,aAAAH,IAEAC,EAAA/V,KAAAgW,EAAA/Y,GAGA,OAAA8Y,IAGAxZ,EAAA4B,UAAAqX,kBAAA,SAAA7M,EAAAxL,GACA,OACAkU,OACA1I,QAAAA,EACAxL,KAAAA,GAAA,MAKAZ,EAAA2Z,aAAA,WACA,MAAA/Z,QAAAga,KAAArC,SAAA9B,WAGAzV,EAAA6Z,eAAA,WACA,MAAAja,QAAAga,KAAArC,SAAAZ,aAGA3W,EAAA4M,KAAA,SAAAmI,GACA,GAAAnV,OAAAga,KAIAtB,QAAAxD,MAAA,wBAJA,CACA,GAAAgF,GAAA,GAAA9Z,GAAA+U,EACAnV,QAAAga,KAAAE,IAMA9Z,EAAAwW,MAAA,SAAA/P,EAAAqO,EAAAnI,GACA/M,OAAAga,KACAha,OAAAga,KAAApD,MAAA/P,EAAAqO,EAAAnI,GAEA2L,QAAAxD,MAAA,+BAIA9U,EAAA+Z,WAAA,SAAAC,EAAA9C,GACA,GAAAtX,OAAAga,KACA,GAAAI,EAEA,CACAlC,QAAAZ,IACAA,KAEA,IAAAvG,GAAAuG,EAAAvG,OAAA,IACAD,EAAAwG,EAAAxG,QAAA,IAGA3I,EAAA,yCAAA/H,EAAA2Z,eAAA,WAAA/Z,OAAAga,KAAArC,SAAAU,OAEAtB,EAAA3W,EAAA6Z,gBACAlD,KACA5O,EAAAA,EAAA,gBAAA1G,mBAAAsV,GAIA,IAAAsD,GAAAhZ,SAAA6F,cAAA,SACAmT,GAAAC,OAAA,WACAlN,EAAA7F,YAAAgT,GACAF,EAAAtS,MAAAgJ,MAAAA,EAAA,KACAsJ,EAAAtS,MAAA+I,OAAAA,EAAA,MAEAuJ,EAAAtS,MAAAgJ,MAAA,EACAsJ,EAAAtS,MAAA+I,OAAA,EACAuJ,EAAAhS,YAAA,IACAgS,EAAAlS,IAAAA,CAGA,IAAAoS,GAAAlZ,SAAA6F,cAAA,MACAqT,GAAApJ,UAAA,YAEA,IAAA/D,GAAA/L,SAAAyG,eAAAsS,EACAhN,IACAA,EAAAnG,YAAAsT,GACAnN,EAAAnG,YAAAoT,IAEA3B,QAAAxD,MAAA,YAAAkF,EAAA,oBArCA1B,SAAAxD,MAAA,oBAiDAwD,SAAAxD,MAAA,+BAIA9U,EAAAoa,WAAA,SAAAC,EAAAnD,KAIAlX,EAAAsa,yBAAA,EACAta,EAAAkZ,uCAAA,EAEA1Z,EAAAD,QAAAS,IFinFGua,YAAY,EAAEC,UAAU,SAAS,SAAS","file":"xl.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","/**\n * easyXDM\n * http://easyxdm.net/\n * Copyright(c) 2009-2011, Øyvind Sean Kinsey, oyvind@kinsey.no.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n(function (window, document, location, setTimeout, decodeURIComponent, encodeURIComponent) {\n/*jslint evil: true, browser: true, immed: true, passfail: true, undef: true, newcap: true*/\n/*global JSON, XMLHttpRequest, window, escape, unescape, ActiveXObject */\n//\n// easyXDM\n// http://easyxdm.net/\n// Copyright(c) 2009-2011, Øyvind Sean Kinsey, oyvind@kinsey.no.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\nvar global = this;\nvar channelId = Math.floor(Math.random() * 10000); // randomize the initial id in case of multiple closures loaded \nvar emptyFn = Function.prototype;\nvar reURI = /^((http.?:)\\/\\/([^:\\/\\s]+)(:\\d+)*)/; // returns groups for protocol (2), domain (3) and port (4) \nvar reParent = /[\\-\\w]+\\/\\.\\.\\//; // matches a foo/../ expression \nvar reDoubleSlash = /([^:])\\/\\//g; // matches // anywhere but in the protocol\nvar namespace = \"\"; // stores namespace under which easyXDM object is stored on the page (empty if object is global)\nvar easyXDM = {};\nvar _easyXDM = window.easyXDM; // map over global easyXDM in case of overwrite\nvar IFRAME_PREFIX = \"easyXDM_\";\nvar HAS_NAME_PROPERTY_BUG;\nvar useHash = false; // whether to use the hash over the query\nvar flashVersion; // will be set if using flash\nvar HAS_FLASH_THROTTLED_BUG;\n\n\n// http://peter.michaux.ca/articles/feature-detection-state-of-the-art-browser-scripting\nfunction isHostMethod(object, property){\n    var t = typeof object[property];\n    return t == 'function' ||\n    (!!(t == 'object' && object[property])) ||\n    t == 'unknown';\n}\n\nfunction isHostObject(object, property){\n    return !!(typeof(object[property]) == 'object' && object[property]);\n}\n\n// end\n\n// http://perfectionkills.com/instanceof-considered-harmful-or-how-to-write-a-robust-isarray/\nfunction isArray(o){\n    return Object.prototype.toString.call(o) === '[object Array]';\n}\n\n// end\nfunction hasFlash(){\n    var name = \"Shockwave Flash\", mimeType = \"application/x-shockwave-flash\";\n    \n    if (!undef(navigator.plugins) && typeof navigator.plugins[name] == \"object\") {\n        // adapted from the swfobject code\n        var description = navigator.plugins[name].description;\n        if (description && !undef(navigator.mimeTypes) && navigator.mimeTypes[mimeType] && navigator.mimeTypes[mimeType].enabledPlugin) {\n            flashVersion = description.match(/\\d+/g);\n        }\n    }\n    if (!flashVersion) {\n        var flash;\n        try {\n            flash = new ActiveXObject(\"ShockwaveFlash.ShockwaveFlash\");\n            flashVersion = Array.prototype.slice.call(flash.GetVariable(\"$version\").match(/(\\d+),(\\d+),(\\d+),(\\d+)/), 1);\n            flash = null;\n        } \n        catch (notSupportedException) {\n        }\n    }\n    if (!flashVersion) {\n        return false;\n    }\n    var major = parseInt(flashVersion[0], 10), minor = parseInt(flashVersion[1], 10);\n    HAS_FLASH_THROTTLED_BUG = major > 9 && minor > 0;\n    return true;\n}\n\n/*\n * Cross Browser implementation for adding and removing event listeners.\n */\nvar on, un;\nif (isHostMethod(window, \"addEventListener\")) {\n    on = function(target, type, listener){\n        target.addEventListener(type, listener, false);\n    };\n    un = function(target, type, listener){\n        target.removeEventListener(type, listener, false);\n    };\n}\nelse if (isHostMethod(window, \"attachEvent\")) {\n    on = function(object, sEvent, fpNotify){\n        object.attachEvent(\"on\" + sEvent, fpNotify);\n    };\n    un = function(object, sEvent, fpNotify){\n        object.detachEvent(\"on\" + sEvent, fpNotify);\n    };\n}\nelse {\n    throw new Error(\"Browser not supported\");\n}\n\n/*\n * Cross Browser implementation of DOMContentLoaded.\n */\nvar domIsReady = false, domReadyQueue = [], readyState;\nif (\"readyState\" in document) {\n    // If browser is WebKit-powered, check for both 'loaded' (legacy browsers) and\n    // 'interactive' (HTML5 specs, recent WebKit builds) states.\n    // https://bugs.webkit.org/show_bug.cgi?id=45119\n    readyState = document.readyState;\n    domIsReady = readyState == \"complete\" || (~ navigator.userAgent.indexOf('AppleWebKit/') && (readyState == \"loaded\" || readyState == \"interactive\"));\n}\nelse {\n    // If readyState is not supported in the browser, then in order to be able to fire whenReady functions apropriately\n    // when added dynamically _after_ DOM load, we have to deduce wether the DOM is ready or not.\n    // We only need a body to add elements to, so the existence of document.body is enough for us.\n    domIsReady = !!document.body;\n}\n\nfunction dom_onReady(){\n    if (domIsReady) {\n        return;\n    }\n    domIsReady = true;\n    for (var i = 0; i < domReadyQueue.length; i++) {\n        domReadyQueue[i]();\n    }\n    domReadyQueue.length = 0;\n}\n\n\nif (!domIsReady) {\n    if (isHostMethod(window, \"addEventListener\")) {\n        on(document, \"DOMContentLoaded\", dom_onReady);\n    }\n    else {\n        on(document, \"readystatechange\", function(){\n            if (document.readyState == \"complete\") {\n                dom_onReady();\n            }\n        });\n        if (document.documentElement.doScroll && window === top) {\n            var doScrollCheck = function(){\n                if (domIsReady) {\n                    return;\n                }\n                // http://javascript.nwbox.com/IEContentLoaded/\n                try {\n                    document.documentElement.doScroll(\"left\");\n                } \n                catch (e) {\n                    setTimeout(doScrollCheck, 1);\n                    return;\n                }\n                dom_onReady();\n            };\n            doScrollCheck();\n        }\n    }\n    \n    // A fallback to window.onload, that will always work\n    on(window, \"load\", dom_onReady);\n}\n/**\n * This will add a function to the queue of functions to be run once the DOM reaches a ready state.\n * If functions are added after this event then they will be executed immediately.\n * @param {function} fn The function to add\n * @param {Object} scope An optional scope for the function to be called with.\n */\nfunction whenReady(fn, scope){\n    if (domIsReady) {\n        fn.call(scope);\n        return;\n    }\n    domReadyQueue.push(function(){\n        fn.call(scope);\n    });\n}\n\n/**\n * Returns an instance of easyXDM from the parent window with\n * respect to the namespace.\n *\n * @return An instance of easyXDM (in the parent window)\n */\nfunction getParentObject(){\n    var obj = parent;\n    if (namespace !== \"\") {\n        for (var i = 0, ii = namespace.split(\".\"); i < ii.length; i++) {\n            obj = obj[ii[i]];\n        }\n    }\n    return obj.easyXDM;\n}\n\n/**\n * Removes easyXDM variable from the global scope. It also returns control\n * of the easyXDM variable to whatever code used it before.\n *\n * @param {String} ns A string representation of an object that will hold\n *                    an instance of easyXDM.\n * @return An instance of easyXDM\n */\nfunction noConflict(ns){\n    \n    window.easyXDM = _easyXDM;\n    namespace = ns;\n    if (namespace) {\n        IFRAME_PREFIX = \"easyXDM_\" + namespace.replace(\".\", \"_\") + \"_\";\n    }\n    return easyXDM;\n}\n\n/*\n * Methods for working with URLs\n */\n/**\n * Get the domain name from a url.\n * @param {String} url The url to extract the domain from.\n * @return The domain part of the url.\n * @type {String}\n */\nfunction getDomainName(url){\n    return url.match(reURI)[3];\n}\n\n/**\n * Get the port for a given URL, or \"\" if none\n * @param {String} url The url to extract the port from.\n * @return The port part of the url.\n * @type {String}\n */\nfunction getPort(url){\n    return url.match(reURI)[4] || \"\";\n}\n\n/**\n * Returns  a string containing the schema, domain and if present the port\n * @param {String} url The url to extract the location from\n * @return {String} The location part of the url\n */\nfunction getLocation(url){\n    var m = url.toLowerCase().match(reURI);\n    var proto = m[2], domain = m[3], port = m[4] || \"\";\n    if ((proto == \"http:\" && port == \":80\") || (proto == \"https:\" && port == \":443\")) {\n        port = \"\";\n    }\n    return proto + \"//\" + domain + port;\n}\n\n/**\n * Resolves a relative url into an absolute one.\n * @param {String} url The path to resolve.\n * @return {String} The resolved url.\n */\nfunction resolveUrl(url){\n    \n    // replace all // except the one in proto with /\n    url = url.replace(reDoubleSlash, \"$1/\");\n    \n    // If the url is a valid url we do nothing\n    if (!url.match(/^(http||https):\\/\\//)) {\n        // If this is a relative path\n        var path = (url.substring(0, 1) === \"/\") ? \"\" : location.pathname;\n        if (path.substring(path.length - 1) !== \"/\") {\n            path = path.substring(0, path.lastIndexOf(\"/\") + 1);\n        }\n        \n        url = location.protocol + \"//\" + location.host + path + url;\n    }\n    \n    // reduce all 'xyz/../' to just '' \n    while (reParent.test(url)) {\n        url = url.replace(reParent, \"\");\n    }\n    \n    return url;\n}\n\n/**\n * Appends the parameters to the given url.<br/>\n * The base url can contain existing query parameters.\n * @param {String} url The base url.\n * @param {Object} parameters The parameters to add.\n * @return {String} A new valid url with the parameters appended.\n */\nfunction appendQueryParameters(url, parameters){\n    \n    var hash = \"\", indexOf = url.indexOf(\"#\");\n    if (indexOf !== -1) {\n        hash = url.substring(indexOf);\n        url = url.substring(0, indexOf);\n    }\n    var q = [];\n    for (var key in parameters) {\n        if (parameters.hasOwnProperty(key)) {\n            q.push(key + \"=\" + encodeURIComponent(parameters[key]));\n        }\n    }\n    return url + (useHash ? \"#\" : (url.indexOf(\"?\") == -1 ? \"?\" : \"&\")) + q.join(\"&\") + hash;\n}\n\n\n// build the query object either from location.query, if it contains the xdm_e argument, or from location.hash\nvar query = (function(input){\n    input = input.substring(1).split(\"&\");\n    var data = {}, pair, i = input.length;\n    while (i--) {\n        pair = input[i].split(\"=\");\n        data[pair[0]] = decodeURIComponent(pair[1]);\n    }\n    return data;\n}(/xdm_e=/.test(location.search) ? location.search : location.hash));\n\n/*\n * Helper methods\n */\n/**\n * Helper for checking if a variable/property is undefined\n * @param {Object} v The variable to test\n * @return {Boolean} True if the passed variable is undefined\n */\nfunction undef(v){\n    return typeof v === \"undefined\";\n}\n\n/**\n * A safe implementation of HTML5 JSON. Feature testing is used to make sure the implementation works.\n * @return {JSON} A valid JSON conforming object, or null if not found.\n */\nvar getJSON = function(){\n    var cached = {};\n    var obj = {\n        a: [1, 2, 3]\n    }, json = \"{\\\"a\\\":[1,2,3]}\";\n    \n    if (typeof JSON != \"undefined\" && typeof JSON.stringify === \"function\" && JSON.stringify(obj).replace((/\\s/g), \"\") === json) {\n        // this is a working JSON instance\n        return JSON;\n    }\n    if (Object.toJSON) {\n        if (Object.toJSON(obj).replace((/\\s/g), \"\") === json) {\n            // this is a working stringify method\n            cached.stringify = Object.toJSON;\n        }\n    }\n    \n    if (typeof String.prototype.evalJSON === \"function\") {\n        obj = json.evalJSON();\n        if (obj.a && obj.a.length === 3 && obj.a[2] === 3) {\n            // this is a working parse method           \n            cached.parse = function(str){\n                return str.evalJSON();\n            };\n        }\n    }\n    \n    if (cached.stringify && cached.parse) {\n        // Only memoize the result if we have valid instance\n        getJSON = function(){\n            return cached;\n        };\n        return cached;\n    }\n    return null;\n};\n\n/**\n * Applies properties from the source object to the target object.<br/>\n * @param {Object} target The target of the properties.\n * @param {Object} source The source of the properties.\n * @param {Boolean} noOverwrite Set to True to only set non-existing properties.\n */\nfunction apply(destination, source, noOverwrite){\n    var member;\n    for (var prop in source) {\n        if (source.hasOwnProperty(prop)) {\n            if (prop in destination) {\n                member = source[prop];\n                if (typeof member === \"object\") {\n                    apply(destination[prop], member, noOverwrite);\n                }\n                else if (!noOverwrite) {\n                    destination[prop] = source[prop];\n                }\n            }\n            else {\n                destination[prop] = source[prop];\n            }\n        }\n    }\n    return destination;\n}\n\n// This tests for the bug in IE where setting the [name] property using javascript causes the value to be redirected into [submitName].\nfunction testForNamePropertyBug(){\n    var form = document.body.appendChild(document.createElement(\"form\")), input = form.appendChild(document.createElement(\"input\"));\n    input.name = IFRAME_PREFIX + \"TEST\" + channelId; // append channelId in order to avoid caching issues\n    HAS_NAME_PROPERTY_BUG = input !== form.elements[input.name];\n    document.body.removeChild(form);\n}\n\n/**\n * Creates a frame and appends it to the DOM.\n * @param config {object} This object can have the following properties\n * <ul>\n * <li> {object} prop The properties that should be set on the frame. This should include the 'src' property.</li>\n * <li> {object} attr The attributes that should be set on the frame.</li>\n * <li> {DOMElement} container Its parent element (Optional).</li>\n * <li> {function} onLoad A method that should be called with the frames contentWindow as argument when the frame is fully loaded. (Optional)</li>\n * </ul>\n * @return The frames DOMElement\n * @type DOMElement\n */\nfunction createFrame(config){\n    if (undef(HAS_NAME_PROPERTY_BUG)) {\n        testForNamePropertyBug();\n    }\n    var frame;\n    // This is to work around the problems in IE6/7 with setting the name property. \n    // Internally this is set as 'submitName' instead when using 'iframe.name = ...'\n    // This is not required by easyXDM itself, but is to facilitate other use cases \n    if (HAS_NAME_PROPERTY_BUG) {\n        frame = document.createElement(\"<iframe name=\\\"\" + config.props.name + \"\\\"/>\");\n    }\n    else {\n        frame = document.createElement(\"IFRAME\");\n        frame.name = config.props.name;\n    }\n    \n    frame.id = frame.name = config.props.name;\n    delete config.props.name;\n    \n    if (typeof config.container == \"string\") {\n        config.container = document.getElementById(config.container);\n    }\n    \n    if (!config.container) {\n        // This needs to be hidden like this, simply setting display:none and the like will cause failures in some browsers.\n        apply(frame.style, {\n            position: \"absolute\",\n            top: \"-2000px\",\n            // Avoid potential horizontal scrollbar\n            left: \"0px\"\n        });\n        config.container = document.body;\n    }\n    \n    // HACK: IE cannot have the src attribute set when the frame is appended\n    //       into the container, so we set it to \"javascript:false\" as a\n    //       placeholder for now.  If we left the src undefined, it would\n    //       instead default to \"about:blank\", which causes SSL mixed-content\n    //       warnings in IE6 when on an SSL parent page.\n    var src = config.props.src;\n    config.props.src = \"javascript:false\";\n    \n    // transfer properties to the frame\n    apply(frame, config.props);\n    \n    frame.border = frame.frameBorder = 0;\n    frame.allowTransparency = true;\n    config.container.appendChild(frame);\n    \n    if (config.onLoad) {\n        on(frame, \"load\", config.onLoad);\n    }\n    \n    // set the frame URL to the proper value (we previously set it to\n    // \"javascript:false\" to work around the IE issue mentioned above)\n    if(config.usePost) {\n        var form = config.container.appendChild(document.createElement('form')), input;\n        form.target = frame.name;\n        form.action = src;\n        form.method = 'POST';\n        if (typeof(config.usePost) === 'object') {\n            for (var i in config.usePost) {\n                if (config.usePost.hasOwnProperty(i)) {\n                    if (HAS_NAME_PROPERTY_BUG) {\n                        input = document.createElement('<input name=\"' + i + '\"/>');\n                    } else {\n                        input = document.createElement(\"INPUT\");\n                        input.name = i;\n                    }\n                    input.value = config.usePost[i];\n                    form.appendChild(input);\n                }\n            }\n        }\n        form.submit();\n        form.parentNode.removeChild(form);\n    } else {\n        frame.src = src;\n    }\n    config.props.src = src;\n    \n    return frame;\n}\n\n/**\n * Check whether a domain is allowed using an Access Control List.\n * The ACL can contain * and ? as wildcards, or can be regular expressions.\n * If regular expressions they need to begin with ^ and end with $.\n * @param {Array/String} acl The list of allowed domains\n * @param {String} domain The domain to test.\n * @return {Boolean} True if the domain is allowed, false if not.\n */\nfunction checkAcl(acl, domain){\n    // normalize into an array\n    if (typeof acl == \"string\") {\n        acl = [acl];\n    }\n    var re, i = acl.length;\n    while (i--) {\n        re = acl[i];\n        re = new RegExp(re.substr(0, 1) == \"^\" ? re : (\"^\" + re.replace(/(\\*)/g, \".$1\").replace(/\\?/g, \".\") + \"$\"));\n        if (re.test(domain)) {\n            return true;\n        }\n    }\n    return false;\n}\n\n/*\n * Functions related to stacks\n */\n/**\n * Prepares an array of stack-elements suitable for the current configuration\n * @param {Object} config The Transports configuration. See easyXDM.Socket for more.\n * @return {Array} An array of stack-elements with the TransportElement at index 0.\n */\nfunction prepareTransportStack(config){\n    var protocol = config.protocol, stackEls;\n    config.isHost = config.isHost || undef(query.xdm_p);\n    useHash = config.hash || false;\n    \n    if (!config.props) {\n        config.props = {};\n    }\n    if (!config.isHost) {\n        config.channel = query.xdm_c.replace(/[\"'<>\\\\]/g, \"\");\n        config.secret = query.xdm_s;\n        config.remote = query.xdm_e.replace(/[\"'<>\\\\]/g, \"\");\n        ;\n        protocol = query.xdm_p;\n        if (config.acl && !checkAcl(config.acl, config.remote)) {\n            throw new Error(\"Access denied for \" + config.remote);\n        }\n    }\n    else {\n        config.remote = resolveUrl(config.remote);\n        config.channel = config.channel || \"default\" + channelId++;\n        config.secret = Math.random().toString(16).substring(2);\n        if (undef(protocol)) {\n            if (getLocation(location.href) == getLocation(config.remote)) {\n                /*\n                 * Both documents has the same origin, lets use direct access.\n                 */\n                protocol = \"4\";\n            }\n            else if (isHostMethod(window, \"postMessage\") || isHostMethod(document, \"postMessage\")) {\n                /*\n                 * This is supported in IE8+, Firefox 3+, Opera 9+, Chrome 2+ and Safari 4+\n                 */\n                protocol = \"1\";\n            }\n            else if (config.swf && isHostMethod(window, \"ActiveXObject\") && hasFlash()) {\n                /*\n                 * The Flash transport superseedes the NixTransport as the NixTransport has been blocked by MS\n                 */\n                protocol = \"6\";\n            }\n            else if (navigator.product === \"Gecko\" && \"frameElement\" in window && navigator.userAgent.indexOf('WebKit') == -1) {\n                /*\n                 * This is supported in Gecko (Firefox 1+)\n                 */\n                protocol = \"5\";\n            }\n            else if (config.remoteHelper) {\n                /*\n                 * This is supported in all browsers that retains the value of window.name when\n                 * navigating from one domain to another, and where parent.frames[foo] can be used\n                 * to get access to a frame from the same domain\n                 */\n                protocol = \"2\";\n            }\n            else {\n                /*\n                 * This is supported in all browsers where [window].location is writable for all\n                 * The resize event will be used if resize is supported and the iframe is not put\n                 * into a container, else polling will be used.\n                 */\n                protocol = \"0\";\n            }\n        }\n    }\n    config.protocol = protocol; // for conditional branching\n    switch (protocol) {\n        case \"0\":// 0 = HashTransport\n            apply(config, {\n                interval: 100,\n                delay: 2000,\n                useResize: true,\n                useParent: false,\n                usePolling: false\n            }, true);\n            if (config.isHost) {\n                if (!config.local) {\n                    // If no local is set then we need to find an image hosted on the current domain\n                    var domain = location.protocol + \"//\" + location.host, images = document.body.getElementsByTagName(\"img\"), image;\n                    var i = images.length;\n                    while (i--) {\n                        image = images[i];\n                        if (image.src.substring(0, domain.length) === domain) {\n                            config.local = image.src;\n                            break;\n                        }\n                    }\n                    if (!config.local) {\n                        // If no local was set, and we are unable to find a suitable file, then we resort to using the current window \n                        config.local = window;\n                    }\n                }\n                \n                var parameters = {\n                    xdm_c: config.channel,\n                    xdm_p: 0\n                };\n                \n                if (config.local === window) {\n                    // We are using the current window to listen to\n                    config.usePolling = true;\n                    config.useParent = true;\n                    config.local = location.protocol + \"//\" + location.host + location.pathname + location.search;\n                    parameters.xdm_e = config.local;\n                    parameters.xdm_pa = 1; // use parent\n                }\n                else {\n                    parameters.xdm_e = resolveUrl(config.local);\n                }\n                \n                if (config.container) {\n                    config.useResize = false;\n                    parameters.xdm_po = 1; // use polling\n                }\n                config.remote = appendQueryParameters(config.remote, parameters);\n            }\n            else {\n                apply(config, {\n                    useParent: !undef(query.xdm_pa),\n                    usePolling: !undef(query.xdm_po),\n                    useResize: config.useParent ? false : config.useResize\n                });\n            }\n            stackEls = [new easyXDM.stack.HashTransport(config), new easyXDM.stack.ReliableBehavior({}), new easyXDM.stack.QueueBehavior({\n                encode: true,\n                maxLength: 4000 - config.remote.length\n            }), new easyXDM.stack.VerifyBehavior({\n                initiate: config.isHost\n            })];\n            break;\n        case \"1\":\n            stackEls = [new easyXDM.stack.PostMessageTransport(config)];\n            break;\n        case \"2\":\n            if (config.isHost) {\n                config.remoteHelper = resolveUrl(config.remoteHelper);\n            }\n            stackEls = [new easyXDM.stack.NameTransport(config), new easyXDM.stack.QueueBehavior(), new easyXDM.stack.VerifyBehavior({\n                initiate: config.isHost\n            })];\n            break;\n        case \"3\":\n            stackEls = [new easyXDM.stack.NixTransport(config)];\n            break;\n        case \"4\":\n            stackEls = [new easyXDM.stack.SameOriginTransport(config)];\n            break;\n        case \"5\":\n            stackEls = [new easyXDM.stack.FrameElementTransport(config)];\n            break;\n        case \"6\":\n            if (!flashVersion) {\n                hasFlash();\n            }\n            stackEls = [new easyXDM.stack.FlashTransport(config)];\n            break;\n    }\n    // this behavior is responsible for buffering outgoing messages, and for performing lazy initialization\n    stackEls.push(new easyXDM.stack.QueueBehavior({\n        lazy: config.lazy,\n        remove: true\n    }));\n    return stackEls;\n}\n\n/**\n * Chains all the separate stack elements into a single usable stack.<br/>\n * If an element is missing a necessary method then it will have a pass-through method applied.\n * @param {Array} stackElements An array of stack elements to be linked.\n * @return {easyXDM.stack.StackElement} The last element in the chain.\n */\nfunction chainStack(stackElements){\n    var stackEl, defaults = {\n        incoming: function(message, origin){\n            this.up.incoming(message, origin);\n        },\n        outgoing: function(message, recipient){\n            this.down.outgoing(message, recipient);\n        },\n        callback: function(success){\n            this.up.callback(success);\n        },\n        init: function(){\n            this.down.init();\n        },\n        destroy: function(){\n            this.down.destroy();\n        }\n    };\n    for (var i = 0, len = stackElements.length; i < len; i++) {\n        stackEl = stackElements[i];\n        apply(stackEl, defaults, true);\n        if (i !== 0) {\n            stackEl.down = stackElements[i - 1];\n        }\n        if (i !== len - 1) {\n            stackEl.up = stackElements[i + 1];\n        }\n    }\n    return stackEl;\n}\n\n/**\n * This will remove a stackelement from its stack while leaving the stack functional.\n * @param {Object} element The elment to remove from the stack.\n */\nfunction removeFromStack(element){\n    element.up.down = element.down;\n    element.down.up = element.up;\n    element.up = element.down = null;\n}\n\n/*\n * Export the main object and any other methods applicable\n */\n/** \n * @class easyXDM\n * A javascript library providing cross-browser, cross-domain messaging/RPC.\n * @version 2.4.20.7\n * @singleton\n */\napply(easyXDM, {\n    /**\n     * The version of the library\n     * @type {string}\n     */\n    version: \"2.4.20.7\",\n    /**\n     * This is a map containing all the query parameters passed to the document.\n     * All the values has been decoded using decodeURIComponent.\n     * @type {object}\n     */\n    query: query,\n    /**\n     * @private\n     */\n    stack: {},\n    /**\n     * Applies properties from the source object to the target object.<br/>\n     * @param {object} target The target of the properties.\n     * @param {object} source The source of the properties.\n     * @param {boolean} noOverwrite Set to True to only set non-existing properties.\n     */\n    apply: apply,\n    \n    /**\n     * A safe implementation of HTML5 JSON. Feature testing is used to make sure the implementation works.\n     * @return {JSON} A valid JSON conforming object, or null if not found.\n     */\n    getJSONObject: getJSON,\n    /**\n     * This will add a function to the queue of functions to be run once the DOM reaches a ready state.\n     * If functions are added after this event then they will be executed immediately.\n     * @param {function} fn The function to add\n     * @param {object} scope An optional scope for the function to be called with.\n     */\n    whenReady: whenReady,\n    /**\n     * Removes easyXDM variable from the global scope. It also returns control\n     * of the easyXDM variable to whatever code used it before.\n     *\n     * @param {String} ns A string representation of an object that will hold\n     *                    an instance of easyXDM.\n     * @return An instance of easyXDM\n     */\n    noConflict: noConflict\n});\n\n/*jslint evil: true, browser: true, immed: true, passfail: true, undef: true, newcap: true*/\n/*global console, _FirebugCommandLine,  easyXDM, window, escape, unescape, isHostObject, undef, _trace, domIsReady, emptyFn, namespace */\n//\n// easyXDM\n// http://easyxdm.net/\n// Copyright(c) 2009-2011, Øyvind Sean Kinsey, oyvind@kinsey.no.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n/*jslint evil: true, browser: true, immed: true, passfail: true, undef: true, newcap: true*/\n/*global easyXDM, window, escape, unescape, isHostObject, isHostMethod, un, on, createFrame, debug */\n//\n// easyXDM\n// http://easyxdm.net/\n// Copyright(c) 2009-2011, Øyvind Sean Kinsey, oyvind@kinsey.no.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n/** \n * @class easyXDM.DomHelper\n * Contains methods for dealing with the DOM\n * @singleton\n */\neasyXDM.DomHelper = {\n    /**\n     * Provides a consistent interface for adding eventhandlers\n     * @param {Object} target The target to add the event to\n     * @param {String} type The name of the event\n     * @param {Function} listener The listener\n     */\n    on: on,\n    /**\n     * Provides a consistent interface for removing eventhandlers\n     * @param {Object} target The target to remove the event from\n     * @param {String} type The name of the event\n     * @param {Function} listener The listener\n     */\n    un: un,\n    /**\n     * Checks for the presence of the JSON object.\n     * If it is not present it will use the supplied path to load the JSON2 library.\n     * This should be called in the documents head right after the easyXDM script tag.\n     * http://json.org/json2.js\n     * @param {String} path A valid path to json2.js\n     */\n    requiresJSON: function(path){\n        if (!isHostObject(window, \"JSON\")) {\n            // we need to encode the < in order to avoid an illegal token error\n            // when the script is inlined in a document.\n            document.write('<' + 'script type=\"text/javascript\" src=\"' + path + '\"><' + '/script>');\n        }\n    }\n};\n/*jslint evil: true, browser: true, immed: true, passfail: true, undef: true, newcap: true*/\n/*global easyXDM, window, escape, unescape, debug */\n//\n// easyXDM\n// http://easyxdm.net/\n// Copyright(c) 2009-2011, Øyvind Sean Kinsey, oyvind@kinsey.no.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n(function(){\n    // The map containing the stored functions\n    var _map = {};\n    \n    /**\n     * @class easyXDM.Fn\n     * This contains methods related to function handling, such as storing callbacks.\n     * @singleton\n     * @namespace easyXDM\n     */\n    easyXDM.Fn = {\n        /**\n         * Stores a function using the given name for reference\n         * @param {String} name The name that the function should be referred by\n         * @param {Function} fn The function to store\n         * @namespace easyXDM.fn\n         */\n        set: function(name, fn){\n            _map[name] = fn;\n        },\n        /**\n         * Retrieves the function referred to by the given name\n         * @param {String} name The name of the function to retrieve\n         * @param {Boolean} del If the function should be deleted after retrieval\n         * @return {Function} The stored function\n         * @namespace easyXDM.fn\n         */\n        get: function(name, del){\n            if (!_map.hasOwnProperty(name)) {\n                return;\n            }\n            var fn = _map[name];\n            \n            if (del) {\n                delete _map[name];\n            }\n            return fn;\n        }\n    };\n    \n}());\n/*jslint evil: true, browser: true, immed: true, passfail: true, undef: true, newcap: true*/\n/*global easyXDM, window, escape, unescape, chainStack, prepareTransportStack, getLocation, debug */\n//\n// easyXDM\n// http://easyxdm.net/\n// Copyright(c) 2009-2011, Øyvind Sean Kinsey, oyvind@kinsey.no.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n/**\n * @class easyXDM.Socket\n * This class creates a transport channel between two domains that is usable for sending and receiving string-based messages.<br/>\n * The channel is reliable, supports queueing, and ensures that the message originates from the expected domain.<br/>\n * Internally different stacks will be used depending on the browsers features and the available parameters.\n * <h2>How to set up</h2>\n * Setting up the provider:\n * <pre><code>\n * var socket = new easyXDM.Socket({\n * &nbsp; local: \"name.html\",\n * &nbsp; onReady: function(){\n * &nbsp; &nbsp; &#47;&#47; you need to wait for the onReady callback before using the socket\n * &nbsp; &nbsp; socket.postMessage(\"foo-message\");\n * &nbsp; },\n * &nbsp; onMessage: function(message, origin) {\n * &nbsp;&nbsp; alert(\"received \" + message + \" from \" + origin);\n * &nbsp; }\n * });\n * </code></pre>\n * Setting up the consumer:\n * <pre><code>\n * var socket = new easyXDM.Socket({\n * &nbsp; remote: \"http:&#47;&#47;remotedomain/page.html\",\n * &nbsp; remoteHelper: \"http:&#47;&#47;remotedomain/name.html\",\n * &nbsp; onReady: function(){\n * &nbsp; &nbsp; &#47;&#47; you need to wait for the onReady callback before using the socket\n * &nbsp; &nbsp; socket.postMessage(\"foo-message\");\n * &nbsp; },\n * &nbsp; onMessage: function(message, origin) {\n * &nbsp;&nbsp; alert(\"received \" + message + \" from \" + origin);\n * &nbsp; }\n * });\n * </code></pre>\n * If you are unable to upload the <code>name.html</code> file to the consumers domain then remove the <code>remoteHelper</code> property\n * and easyXDM will fall back to using the HashTransport instead of the NameTransport when not able to use any of the primary transports.\n * @namespace easyXDM\n * @constructor\n * @cfg {String/Window} local The url to the local name.html document, a local static file, or a reference to the local window.\n * @cfg {Boolean} lazy (Consumer only) Set this to true if you want easyXDM to defer creating the transport until really needed. \n * @cfg {String} remote (Consumer only) The url to the providers document.\n * @cfg {String} remoteHelper (Consumer only) The url to the remote name.html file. This is to support NameTransport as a fallback. Optional.\n * @cfg {Number} delay The number of milliseconds easyXDM should try to get a reference to the local window.  Optional, defaults to 2000.\n * @cfg {Number} interval The interval used when polling for messages. Optional, defaults to 300.\n * @cfg {String} channel (Consumer only) The name of the channel to use. Can be used to set consistent iframe names. Must be unique. Optional.\n * @cfg {Function} onMessage The method that should handle incoming messages.<br/> This method should accept two arguments, the message as a string, and the origin as a string. Optional.\n * @cfg {Function} onReady A method that should be called when the transport is ready. Optional.\n * @cfg {DOMElement|String} container (Consumer only) The element, or the id of the element that the primary iframe should be inserted into. If not set then the iframe will be positioned off-screen. Optional.\n * @cfg {Array/String} acl (Provider only) Here you can specify which '[protocol]://[domain]' patterns that should be allowed to act as the consumer towards this provider.<br/>\n * This can contain the wildcards ? and *.  Examples are 'http://example.com', '*.foo.com' and '*dom?.com'. If you want to use reqular expressions then you pattern needs to start with ^ and end with $.\n * If none of the patterns match an Error will be thrown.  \n * @cfg {Object} props (Consumer only) Additional properties that should be applied to the iframe. This can also contain nested objects e.g: <code>{style:{width:\"100px\", height:\"100px\"}}</code>. \n * Properties such as 'name' and 'src' will be overrided. Optional.\n */\neasyXDM.Socket = function(config){\n    \n    // create the stack\n    var stack = chainStack(prepareTransportStack(config).concat([{\n        incoming: function(message, origin){\n            config.onMessage(message, origin);\n        },\n        callback: function(success){\n            if (config.onReady) {\n                config.onReady(success);\n            }\n        }\n    }])), recipient = getLocation(config.remote);\n    \n    // set the origin\n    this.origin = getLocation(config.remote);\n\t\n    /**\n     * Initiates the destruction of the stack.\n     */\n    this.destroy = function(){\n        stack.destroy();\n    };\n    \n    /**\n     * Posts a message to the remote end of the channel\n     * @param {String} message The message to send\n     */\n    this.postMessage = function(message){\n        stack.outgoing(message, recipient);\n    };\n    \n    stack.init();\n};\n/*jslint evil: true, browser: true, immed: true, passfail: true, undef: true, newcap: true*/\n/*global easyXDM, window, escape, unescape, undef,, chainStack, prepareTransportStack, debug, getLocation */\n//\n// easyXDM\n// http://easyxdm.net/\n// Copyright(c) 2009-2011, Øyvind Sean Kinsey, oyvind@kinsey.no.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n/** \n * @class easyXDM.Rpc\n * Creates a proxy object that can be used to call methods implemented on the remote end of the channel, and also to provide the implementation\n * of methods to be called from the remote end.<br/>\n * The instantiated object will have methods matching those specified in <code>config.remote</code>.<br/>\n * This requires the JSON object present in the document, either natively, using json.org's json2 or as a wrapper around library spesific methods.\n * <h2>How to set up</h2>\n * <pre><code>\n * var rpc = new easyXDM.Rpc({\n * &nbsp; &#47;&#47; this configuration is equal to that used by the Socket.\n * &nbsp; remote: \"http:&#47;&#47;remotedomain/...\",\n * &nbsp; onReady: function(){\n * &nbsp; &nbsp; &#47;&#47; you need to wait for the onReady callback before using the proxy\n * &nbsp; &nbsp; rpc.foo(...\n * &nbsp; }\n * },{\n * &nbsp; local: {..},\n * &nbsp; remote: {..}\n * });\n * </code></pre>\n * \n * <h2>Exposing functions (procedures)</h2>\n * <pre><code>\n * var rpc = new easyXDM.Rpc({\n * &nbsp; ...\n * },{\n * &nbsp; local: {\n * &nbsp; &nbsp; nameOfMethod: {\n * &nbsp; &nbsp; &nbsp; method: function(arg1, arg2, success, error){\n * &nbsp; &nbsp; &nbsp; &nbsp; ...\n * &nbsp; &nbsp; &nbsp; }\n * &nbsp; &nbsp; },\n * &nbsp; &nbsp; &#47;&#47; with shorthand notation \n * &nbsp; &nbsp; nameOfAnotherMethod:  function(arg1, arg2, success, error){\n * &nbsp; &nbsp; }\n * &nbsp; },\n * &nbsp; remote: {...}\n * });\n * </code></pre>\n\n * The function referenced by  [method] will receive the passed arguments followed by the callback functions <code>success</code> and <code>error</code>.<br/>\n * To send a successfull result back you can use\n *     <pre><code>\n *     return foo;\n *     </pre></code>\n * or\n *     <pre><code>\n *     success(foo);\n *     </pre></code>\n *  To return an error you can use\n *     <pre><code>\n *     throw new Error(\"foo error\");\n *     </code></pre>\n * or\n *     <pre><code>\n *     error(\"foo error\");\n *     </code></pre>\n *\n * <h2>Defining remotely exposed methods (procedures/notifications)</h2>\n * The definition of the remote end is quite similar:\n * <pre><code>\n * var rpc = new easyXDM.Rpc({\n * &nbsp; ...\n * },{\n * &nbsp; local: {...},\n * &nbsp; remote: {\n * &nbsp; &nbsp; nameOfMethod: {}\n * &nbsp; }\n * });\n * </code></pre>\n * To call a remote method use\n * <pre><code>\n * rpc.nameOfMethod(\"arg1\", \"arg2\", function(value) {\n * &nbsp; alert(\"success: \" + value);\n * }, function(message) {\n * &nbsp; alert(\"error: \" + message + );\n * });\n * </code></pre>\n * Both the <code>success</code> and <code>errror</code> callbacks are optional.<br/>\n * When called with no callback a JSON-RPC 2.0 notification will be executed.\n * Be aware that you will not be notified of any errors with this method.\n * <br/>\n * <h2>Specifying a custom serializer</h2>\n * If you do not want to use the JSON2 library for non-native JSON support, but instead capabilities provided by some other library\n * then you can specify a custom serializer using <code>serializer: foo</code>\n * <pre><code>\n * var rpc = new easyXDM.Rpc({\n * &nbsp; ...\n * },{\n * &nbsp; local: {...},\n * &nbsp; remote: {...},\n * &nbsp; serializer : {\n * &nbsp; &nbsp; parse: function(string){ ... },\n * &nbsp; &nbsp; stringify: function(object) {...}\n * &nbsp; }\n * });\n * </code></pre>\n * If <code>serializer</code> is set then the class will not attempt to use the native implementation.\n * @namespace easyXDM\n * @constructor\n * @param {Object} config The underlying transports configuration. See easyXDM.Socket for available parameters.\n * @param {Object} jsonRpcConfig The description of the interface to implement.\n */\neasyXDM.Rpc = function(config, jsonRpcConfig){\n    \n    // expand shorthand notation\n    if (jsonRpcConfig.local) {\n        for (var method in jsonRpcConfig.local) {\n            if (jsonRpcConfig.local.hasOwnProperty(method)) {\n                var member = jsonRpcConfig.local[method];\n                if (typeof member === \"function\") {\n                    jsonRpcConfig.local[method] = {\n                        method: member\n                    };\n                }\n            }\n        }\n    }\n\t\n    // create the stack\n    var stack = chainStack(prepareTransportStack(config).concat([new easyXDM.stack.RpcBehavior(this, jsonRpcConfig), {\n        callback: function(success){\n            if (config.onReady) {\n                config.onReady(success);\n            }\n        }\n    }]));\n\t\n    // set the origin \n    this.origin = getLocation(config.remote);\n\t\n    \n    /**\n     * Initiates the destruction of the stack.\n     */\n    this.destroy = function(){\n        stack.destroy();\n    };\n    \n    stack.init();\n};\n/*jslint evil: true, browser: true, immed: true, passfail: true, undef: true, newcap: true*/\n/*global easyXDM, window, escape, unescape, getLocation, appendQueryParameters, createFrame, debug, un, on, apply, whenReady, getParentObject, IFRAME_PREFIX*/\n//\n// easyXDM\n// http://easyxdm.net/\n// Copyright(c) 2009-2011, Øyvind Sean Kinsey, oyvind@kinsey.no.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n/**\n * @class easyXDM.stack.SameOriginTransport\n * SameOriginTransport is a transport class that can be used when both domains have the same origin.<br/>\n * This can be useful for testing and for when the main application supports both internal and external sources.\n * @namespace easyXDM.stack\n * @constructor\n * @param {Object} config The transports configuration.\n * @cfg {String} remote The remote document to communicate with.\n */\neasyXDM.stack.SameOriginTransport = function(config){\n    var pub, frame, send, targetOrigin;\n    \n    return (pub = {\n        outgoing: function(message, domain, fn){\n            send(message);\n            if (fn) {\n                fn();\n            }\n        },\n        destroy: function(){\n            if (frame) {\n                frame.parentNode.removeChild(frame);\n                frame = null;\n            }\n        },\n        onDOMReady: function(){\n            targetOrigin = getLocation(config.remote);\n            \n            if (config.isHost) {\n                // set up the iframe\n                apply(config.props, {\n                    src: appendQueryParameters(config.remote, {\n                        xdm_e: location.protocol + \"//\" + location.host + location.pathname,\n                        xdm_c: config.channel,\n                        xdm_p: 4 // 4 = SameOriginTransport\n                    }),\n                    name: IFRAME_PREFIX + config.channel + \"_provider\"\n                });\n                frame = createFrame(config);\n                easyXDM.Fn.set(config.channel, function(sendFn){\n                    send = sendFn;\n                    setTimeout(function(){\n                        pub.up.callback(true);\n                    }, 0);\n                    return function(msg){\n                        pub.up.incoming(msg, targetOrigin);\n                    };\n                });\n            }\n            else {\n                send = getParentObject().Fn.get(config.channel, true)(function(msg){\n                    pub.up.incoming(msg, targetOrigin);\n                });\n                setTimeout(function(){\n                    pub.up.callback(true);\n                }, 0);\n            }\n        },\n        init: function(){\n            whenReady(pub.onDOMReady, pub);\n        }\n    });\n};\n/*jslint evil: true, browser: true, immed: true, passfail: true, undef: true, newcap: true*/\n/*global global, easyXDM, window, getLocation, appendQueryParameters, createFrame, debug, apply, whenReady, IFRAME_PREFIX, namespace, resolveUrl, getDomainName, HAS_FLASH_THROTTLED_BUG, getPort, query*/\n//\n// easyXDM\n// http://easyxdm.net/\n// Copyright(c) 2009-2011, Øyvind Sean Kinsey, oyvind@kinsey.no.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n/**\n * @class easyXDM.stack.FlashTransport\n * FlashTransport is a transport class that uses an SWF with LocalConnection to pass messages back and forth.\n * @namespace easyXDM.stack\n * @constructor\n * @param {Object} config The transports configuration.\n * @cfg {String} remote The remote domain to communicate with.\n * @cfg {String} secret the pre-shared secret used to secure the communication.\n * @cfg {String} swf The path to the swf file\n * @cfg {Boolean} swfNoThrottle Set this to true if you want to take steps to avoid beeing throttled when hidden.\n * @cfg {String || DOMElement} swfContainer Set this if you want to control where the swf is placed\n */\neasyXDM.stack.FlashTransport = function(config){\n    var pub, // the public interface\n frame, send, targetOrigin, swf, swfContainer;\n    \n    function onMessage(message, origin){\n        setTimeout(function(){\n            pub.up.incoming(message, targetOrigin);\n        }, 0);\n    }\n    \n    /**\n     * This method adds the SWF to the DOM and prepares the initialization of the channel\n     */\n    function addSwf(domain){\n        // the differentiating query argument is needed in Flash9 to avoid a caching issue where LocalConnection would throw an error.\n        var url = config.swf + \"?host=\" + config.isHost;\n        var id = \"easyXDM_swf_\" + Math.floor(Math.random() * 10000);\n        \n        // prepare the init function that will fire once the swf is ready\n        easyXDM.Fn.set(\"flash_loaded\" + domain.replace(/[\\-.]/g, \"_\"), function(){\n            easyXDM.stack.FlashTransport[domain].swf = swf = swfContainer.firstChild;\n            var queue = easyXDM.stack.FlashTransport[domain].queue;\n            for (var i = 0; i < queue.length; i++) {\n                queue[i]();\n            }\n            queue.length = 0;\n        });\n        \n        if (config.swfContainer) {\n            swfContainer = (typeof config.swfContainer == \"string\") ? document.getElementById(config.swfContainer) : config.swfContainer;\n        }\n        else {\n            // create the container that will hold the swf\n            swfContainer = document.createElement('div');\n            \n            // http://bugs.adobe.com/jira/browse/FP-4796\n            // http://tech.groups.yahoo.com/group/flexcoders/message/162365\n            // https://groups.google.com/forum/#!topic/easyxdm/mJZJhWagoLc\n            apply(swfContainer.style, HAS_FLASH_THROTTLED_BUG && config.swfNoThrottle ? {\n                height: \"20px\",\n                width: \"20px\",\n                position: \"fixed\",\n                right: 0,\n                top: 0\n            } : {\n                height: \"1px\",\n                width: \"1px\",\n                position: \"absolute\",\n                overflow: \"hidden\",\n                right: 0,\n                top: 0\n            });\n            document.body.appendChild(swfContainer);\n        }\n        \n        // create the object/embed\n        var flashVars = \"callback=flash_loaded\" + encodeURIComponent(domain.replace(/[\\-.]/g, \"_\"))\n            + \"&proto=\" + global.location.protocol\n            + \"&domain=\" + encodeURIComponent(getDomainName(global.location.href))\n            + \"&port=\" + encodeURIComponent(getPort(global.location.href))\n            + \"&ns=\" + encodeURIComponent(namespace);\n        swfContainer.innerHTML = \"<object height='20' width='20' type='application/x-shockwave-flash' id='\" + id + \"' data='\" + url + \"'>\" +\n        \"<param name='allowScriptAccess' value='always'></param>\" +\n        \"<param name='wmode' value='transparent'>\" +\n        \"<param name='movie' value='\" +\n        url +\n        \"'></param>\" +\n        \"<param name='flashvars' value='\" +\n        flashVars +\n        \"'></param>\" +\n        \"<embed type='application/x-shockwave-flash' FlashVars='\" +\n        flashVars +\n        \"' allowScriptAccess='always' wmode='transparent' src='\" +\n        url +\n        \"' height='1' width='1'></embed>\" +\n        \"</object>\";\n    }\n    \n    return (pub = {\n        outgoing: function(message, domain, fn){\n            swf.postMessage(config.channel, message.toString());\n            if (fn) {\n                fn();\n            }\n        },\n        destroy: function(){\n            try {\n                swf.destroyChannel(config.channel);\n            } \n            catch (e) {\n            }\n            swf = null;\n            if (frame) {\n                frame.parentNode.removeChild(frame);\n                frame = null;\n            }\n        },\n        onDOMReady: function(){\n            \n            targetOrigin = config.remote;\n            \n            // Prepare the code that will be run after the swf has been intialized\n            easyXDM.Fn.set(\"flash_\" + config.channel + \"_init\", function(){\n                setTimeout(function(){\n                    pub.up.callback(true);\n                });\n            });\n            \n            // set up the omMessage handler\n            easyXDM.Fn.set(\"flash_\" + config.channel + \"_onMessage\", onMessage);\n            \n            config.swf = resolveUrl(config.swf); // reports have been made of requests gone rogue when using relative paths\n            var swfdomain = getDomainName(config.swf);\n            var fn = function(){\n                // set init to true in case the fn was called was invoked from a separate instance\n                easyXDM.stack.FlashTransport[swfdomain].init = true;\n                swf = easyXDM.stack.FlashTransport[swfdomain].swf;\n                // create the channel\n                swf.createChannel(config.channel, config.secret, getLocation(config.remote), config.isHost);\n                \n                if (config.isHost) {\n                    // if Flash is going to be throttled and we want to avoid this\n                    if (HAS_FLASH_THROTTLED_BUG && config.swfNoThrottle) {\n                        apply(config.props, {\n                            position: \"fixed\",\n                            right: 0,\n                            top: 0,\n                            height: \"20px\",\n                            width: \"20px\"\n                        });\n                    }\n                    // set up the iframe\n                    apply(config.props, {\n                        src: appendQueryParameters(config.remote, {\n                            xdm_e: getLocation(location.href),\n                            xdm_c: config.channel,\n                            xdm_p: 6, // 6 = FlashTransport\n                            xdm_s: config.secret\n                        }),\n                        name: IFRAME_PREFIX + config.channel + \"_provider\"\n                    });\n                    frame = createFrame(config);\n                }\n            };\n            \n            if (easyXDM.stack.FlashTransport[swfdomain] && easyXDM.stack.FlashTransport[swfdomain].init) {\n                // if the swf is in place and we are the consumer\n                fn();\n            }\n            else {\n                // if the swf does not yet exist\n                if (!easyXDM.stack.FlashTransport[swfdomain]) {\n                    // add the queue to hold the init fn's\n                    easyXDM.stack.FlashTransport[swfdomain] = {\n                        queue: [fn]\n                    };\n                    addSwf(swfdomain);\n                }\n                else {\n                    easyXDM.stack.FlashTransport[swfdomain].queue.push(fn);\n                }\n            }\n        },\n        init: function(){\n            whenReady(pub.onDOMReady, pub);\n        }\n    });\n};\n/*jslint evil: true, browser: true, immed: true, passfail: true, undef: true, newcap: true*/\n/*global easyXDM, window, escape, unescape, getLocation, appendQueryParameters, createFrame, debug, un, on, apply, whenReady, IFRAME_PREFIX*/\n//\n// easyXDM\n// http://easyxdm.net/\n// Copyright(c) 2009-2011, Øyvind Sean Kinsey, oyvind@kinsey.no.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n/**\n * @class easyXDM.stack.PostMessageTransport\n * PostMessageTransport is a transport class that uses HTML5 postMessage for communication.<br/>\n * <a href=\"http://msdn.microsoft.com/en-us/library/ms644944(VS.85).aspx\">http://msdn.microsoft.com/en-us/library/ms644944(VS.85).aspx</a><br/>\n * <a href=\"https://developer.mozilla.org/en/DOM/window.postMessage\">https://developer.mozilla.org/en/DOM/window.postMessage</a>\n * @namespace easyXDM.stack\n * @constructor\n * @param {Object} config The transports configuration.\n * @cfg {String} remote The remote domain to communicate with.\n */\neasyXDM.stack.PostMessageTransport = function(config){\n    var pub, // the public interface\n frame, // the remote frame, if any\n callerWindow, // the window that we will call with\n targetOrigin; // the domain to communicate with\n    /**\n     * Resolves the origin from the event object\n     * @private\n     * @param {Object} event The messageevent\n     * @return {String} The scheme, host and port of the origin\n     */\n    function _getOrigin(event){\n        if (event.origin) {\n            // This is the HTML5 property\n            return getLocation(event.origin);\n        }\n        if (event.uri) {\n            // From earlier implementations \n            return getLocation(event.uri);\n        }\n        if (event.domain) {\n            // This is the last option and will fail if the \n            // origin is not using the same schema as we are\n            return location.protocol + \"//\" + event.domain;\n        }\n        throw \"Unable to retrieve the origin of the event\";\n    }\n    \n    /**\n     * This is the main implementation for the onMessage event.<br/>\n     * It checks the validity of the origin and passes the message on if appropriate.\n     * @private\n     * @param {Object} event The messageevent\n     */\n    function _window_onMessage(event){\n        if (typeof event.data !== \"string\") {\n            // postMessage also supports passing objects, but easyXDM's messages are always strings\n            return;\n        }\n        var origin = _getOrigin(event);\n        if (origin == targetOrigin && event.data.substring(0, config.channel.length + 1) == config.channel + \" \") {\n            pub.up.incoming(event.data.substring(config.channel.length + 1), origin);\n        }\n    }\n\n    \n    /**\n     * This adds the listener for messages when the frame is ready.\n     * @private\n     * @param {Object} event The messageevent\n     */\n    // add the event handler for listening\n    function _window_waitForReady(event){  \n        if (event.data == config.channel + \"-ready\") {\n            // replace the eventlistener\n            callerWindow = (\"postMessage\" in frame.contentWindow) ? frame.contentWindow : frame.contentWindow.document;\n            un(window, \"message\", _window_waitForReady);\n            on(window, \"message\", _window_onMessage);\n            setTimeout(function(){\n                pub.up.callback(true);\n            }, 0);\n        }\n    }\n    \n    return (pub = {\n        outgoing: function(message, domain, fn){\n            callerWindow.postMessage(config.channel + \" \" + message, domain || targetOrigin);\n            if (fn) {\n                fn();\n            }\n        },\n        destroy: function(){\n            un(window, \"message\", _window_waitForReady);\n            un(window, \"message\", _window_onMessage);\n            if (frame) {\n                callerWindow = null;\n                frame.parentNode.removeChild(frame);\n                frame = null;\n            }\n        },\n        onDOMReady: function(){\n            targetOrigin = getLocation(config.remote);\n            if (config.isHost) {\n                on(window, \"message\", _window_waitForReady);\n                \n                // set up the iframe\n                apply(config.props, {\n                    src: appendQueryParameters(config.remote, {\n                        xdm_e: getLocation(location.href),\n                        xdm_c: config.channel,\n                        xdm_p: 1 // 1 = PostMessage\n                    }),\n                    name: IFRAME_PREFIX + config.channel + \"_provider\"\n                });\n                frame = createFrame(config);\n            }\n            else {\n                // add the event handler for listening\n                on(window, \"message\", _window_onMessage);\n                callerWindow = (\"postMessage\" in window.parent) ? window.parent : window.parent.document;\n                callerWindow.postMessage(config.channel + \"-ready\", targetOrigin);\n                \n                setTimeout(function(){\n                    pub.up.callback(true);\n                }, 0);\n            }\n        },\n        init: function(){\n            whenReady(pub.onDOMReady, pub);\n        }\n    });\n};\n/*jslint evil: true, browser: true, immed: true, passfail: true, undef: true, newcap: true*/\n/*global easyXDM, window, escape, unescape, getLocation, appendQueryParameters, createFrame, debug, apply, query, whenReady, IFRAME_PREFIX*/\n//\n// easyXDM\n// http://easyxdm.net/\n// Copyright(c) 2009-2011, Øyvind Sean Kinsey, oyvind@kinsey.no.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n/**\n * @class easyXDM.stack.FrameElementTransport\n * FrameElementTransport is a transport class that can be used with Gecko-browser as these allow passing variables using the frameElement property.<br/>\n * Security is maintained as Gecho uses Lexical Authorization to determine under which scope a function is running.\n * @namespace easyXDM.stack\n * @constructor\n * @param {Object} config The transports configuration.\n * @cfg {String} remote The remote document to communicate with.\n */\neasyXDM.stack.FrameElementTransport = function(config){\n    var pub, frame, send, targetOrigin;\n    \n    return (pub = {\n        outgoing: function(message, domain, fn){\n            send.call(this, message);\n            if (fn) {\n                fn();\n            }\n        },\n        destroy: function(){\n            if (frame) {\n                frame.parentNode.removeChild(frame);\n                frame = null;\n            }\n        },\n        onDOMReady: function(){\n            targetOrigin = getLocation(config.remote);\n            \n            if (config.isHost) {\n                // set up the iframe\n                apply(config.props, {\n                    src: appendQueryParameters(config.remote, {\n                        xdm_e: getLocation(location.href),\n                        xdm_c: config.channel,\n                        xdm_p: 5 // 5 = FrameElementTransport\n                    }),\n                    name: IFRAME_PREFIX + config.channel + \"_provider\"\n                });\n                frame = createFrame(config);\n                frame.fn = function(sendFn){\n                    delete frame.fn;\n                    send = sendFn;\n                    setTimeout(function(){\n                        pub.up.callback(true);\n                    }, 0);\n                    // remove the function so that it cannot be used to overwrite the send function later on\n                    return function(msg){\n                        pub.up.incoming(msg, targetOrigin);\n                    };\n                };\n            }\n            else {\n                // This is to mitigate origin-spoofing\n                if (document.referrer && getLocation(document.referrer) != query.xdm_e) {\n                    window.top.location = query.xdm_e;\n                }\n                send = window.frameElement.fn(function(msg){\n                    pub.up.incoming(msg, targetOrigin);\n                });\n                pub.up.callback(true);\n            }\n        },\n        init: function(){\n            whenReady(pub.onDOMReady, pub);\n        }\n    });\n};\n/*jslint evil: true, browser: true, immed: true, passfail: true, undef: true, newcap: true*/\n/*global easyXDM, window, escape, unescape, undef, getLocation, appendQueryParameters, resolveUrl, createFrame, debug, un, apply, whenReady, IFRAME_PREFIX*/\n//\n// easyXDM\n// http://easyxdm.net/\n// Copyright(c) 2009-2011, Øyvind Sean Kinsey, oyvind@kinsey.no.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n/**\n * @class easyXDM.stack.NameTransport\n * NameTransport uses the window.name property to relay data.\n * The <code>local</code> parameter needs to be set on both the consumer and provider,<br/>\n * and the <code>remoteHelper</code> parameter needs to be set on the consumer.\n * @constructor\n * @param {Object} config The transports configuration.\n * @cfg {String} remoteHelper The url to the remote instance of hash.html - this is only needed for the host.\n * @namespace easyXDM.stack\n */\neasyXDM.stack.NameTransport = function(config){\n    \n    var pub; // the public interface\n    var isHost, callerWindow, remoteWindow, readyCount, callback, remoteOrigin, remoteUrl;\n    \n    function _sendMessage(message){\n        var url = config.remoteHelper + (isHost ? \"#_3\" : \"#_2\") + config.channel;\n        callerWindow.contentWindow.sendMessage(message, url);\n    }\n    \n    function _onReady(){\n        if (isHost) {\n            if (++readyCount === 2 || !isHost) {\n                pub.up.callback(true);\n            }\n        }\n        else {\n            _sendMessage(\"ready\");\n            pub.up.callback(true);\n        }\n    }\n    \n    function _onMessage(message){\n        pub.up.incoming(message, remoteOrigin);\n    }\n    \n    function _onLoad(){\n        if (callback) {\n            setTimeout(function(){\n                callback(true);\n            }, 0);\n        }\n    }\n    \n    return (pub = {\n        outgoing: function(message, domain, fn){\n            callback = fn;\n            _sendMessage(message);\n        },\n        destroy: function(){\n            callerWindow.parentNode.removeChild(callerWindow);\n            callerWindow = null;\n            if (isHost) {\n                remoteWindow.parentNode.removeChild(remoteWindow);\n                remoteWindow = null;\n            }\n        },\n        onDOMReady: function(){\n            isHost = config.isHost;\n            readyCount = 0;\n            remoteOrigin = getLocation(config.remote);\n            config.local = resolveUrl(config.local);\n            \n            if (isHost) {\n                // Register the callback\n                easyXDM.Fn.set(config.channel, function(message){\n                    if (isHost && message === \"ready\") {\n                        // Replace the handler\n                        easyXDM.Fn.set(config.channel, _onMessage);\n                        _onReady();\n                    }\n                });\n                \n                // Set up the frame that points to the remote instance\n                remoteUrl = appendQueryParameters(config.remote, {\n                    xdm_e: config.local,\n                    xdm_c: config.channel,\n                    xdm_p: 2\n                });\n                apply(config.props, {\n                    src: remoteUrl + '#' + config.channel,\n                    name: IFRAME_PREFIX + config.channel + \"_provider\"\n                });\n                remoteWindow = createFrame(config);\n            }\n            else {\n                config.remoteHelper = config.remote;\n                easyXDM.Fn.set(config.channel, _onMessage);\n            }\n            \n            // Set up the iframe that will be used for the transport\n            var onLoad = function(){\n                // Remove the handler\n                var w = callerWindow || this;\n                un(w, \"load\", onLoad);\n                easyXDM.Fn.set(config.channel + \"_load\", _onLoad);\n                (function test(){\n                    if (typeof w.contentWindow.sendMessage == \"function\") {\n                        _onReady();\n                    }\n                    else {\n                        setTimeout(test, 50);\n                    }\n                }());\n            };\n            \n            callerWindow = createFrame({\n                props: {\n                    src: config.local + \"#_4\" + config.channel\n                },\n                onLoad: onLoad\n            });\n        },\n        init: function(){\n            whenReady(pub.onDOMReady, pub);\n        }\n    });\n};\n/*jslint evil: true, browser: true, immed: true, passfail: true, undef: true, newcap: true*/\n/*global easyXDM, window, escape, unescape, getLocation, createFrame, debug, un, on, apply, whenReady, IFRAME_PREFIX*/\n//\n// easyXDM\n// http://easyxdm.net/\n// Copyright(c) 2009-2011, Øyvind Sean Kinsey, oyvind@kinsey.no.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n/**\n * @class easyXDM.stack.HashTransport\n * HashTransport is a transport class that uses the IFrame URL Technique for communication.<br/>\n * <a href=\"http://msdn.microsoft.com/en-us/library/bb735305.aspx\">http://msdn.microsoft.com/en-us/library/bb735305.aspx</a><br/>\n * @namespace easyXDM.stack\n * @constructor\n * @param {Object} config The transports configuration.\n * @cfg {String/Window} local The url to the local file used for proxying messages, or the local window.\n * @cfg {Number} delay The number of milliseconds easyXDM should try to get a reference to the local window.\n * @cfg {Number} interval The interval used when polling for messages.\n */\neasyXDM.stack.HashTransport = function(config){\n    var pub;\n    var me = this, isHost, _timer, pollInterval, _lastMsg, _msgNr, _listenerWindow, _callerWindow;\n    var useParent, _remoteOrigin;\n    \n    function _sendMessage(message){\n        if (!_callerWindow) {\n            return;\n        }\n        var url = config.remote + \"#\" + (_msgNr++) + \"_\" + message;\n        ((isHost || !useParent) ? _callerWindow.contentWindow : _callerWindow).location = url;\n    }\n    \n    function _handleHash(hash){\n        _lastMsg = hash;\n        pub.up.incoming(_lastMsg.substring(_lastMsg.indexOf(\"_\") + 1), _remoteOrigin);\n    }\n    \n    /**\n     * Checks location.hash for a new message and relays this to the receiver.\n     * @private\n     */\n    function _pollHash(){\n        if (!_listenerWindow) {\n            return;\n        }\n        var href = _listenerWindow.location.href, hash = \"\", indexOf = href.indexOf(\"#\");\n        if (indexOf != -1) {\n            hash = href.substring(indexOf);\n        }\n        if (hash && hash != _lastMsg) {\n            _handleHash(hash);\n        }\n    }\n    \n    function _attachListeners(){\n        _timer = setInterval(_pollHash, pollInterval);\n    }\n    \n    return (pub = {\n        outgoing: function(message, domain){\n            _sendMessage(message);\n        },\n        destroy: function(){\n            window.clearInterval(_timer);\n            if (isHost || !useParent) {\n                _callerWindow.parentNode.removeChild(_callerWindow);\n            }\n            _callerWindow = null;\n        },\n        onDOMReady: function(){\n            isHost = config.isHost;\n            pollInterval = config.interval;\n            _lastMsg = \"#\" + config.channel;\n            _msgNr = 0;\n            useParent = config.useParent;\n            _remoteOrigin = getLocation(config.remote);\n            if (isHost) {\n                apply(config.props, {\n                    src: config.remote,\n                    name: IFRAME_PREFIX + config.channel + \"_provider\"\n                });\n                if (useParent) {\n                    config.onLoad = function(){\n                        _listenerWindow = window;\n                        _attachListeners();\n                        pub.up.callback(true);\n                    };\n                }\n                else {\n                    var tries = 0, max = config.delay / 50;\n                    (function getRef(){\n                        if (++tries > max) {\n                            throw new Error(\"Unable to reference listenerwindow\");\n                        }\n                        try {\n                            _listenerWindow = _callerWindow.contentWindow.frames[IFRAME_PREFIX + config.channel + \"_consumer\"];\n                        } \n                        catch (ex) {\n                        }\n                        if (_listenerWindow) {\n                            _attachListeners();\n                            pub.up.callback(true);\n                        }\n                        else {\n                            setTimeout(getRef, 50);\n                        }\n                    }());\n                }\n                _callerWindow = createFrame(config);\n            }\n            else {\n                _listenerWindow = window;\n                _attachListeners();\n                if (useParent) {\n                    _callerWindow = parent;\n                    pub.up.callback(true);\n                }\n                else {\n                    apply(config, {\n                        props: {\n                            src: config.remote + \"#\" + config.channel + new Date(),\n                            name: IFRAME_PREFIX + config.channel + \"_consumer\"\n                        },\n                        onLoad: function(){\n                            pub.up.callback(true);\n                        }\n                    });\n                    _callerWindow = createFrame(config);\n                }\n            }\n        },\n        init: function(){\n            whenReady(pub.onDOMReady, pub);\n        }\n    });\n};\n/*jslint evil: true, browser: true, immed: true, passfail: true, undef: true, newcap: true*/\n/*global easyXDM, window, escape, unescape, debug */\n//\n// easyXDM\n// http://easyxdm.net/\n// Copyright(c) 2009-2011, Øyvind Sean Kinsey, oyvind@kinsey.no.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n/**\n * @class easyXDM.stack.ReliableBehavior\n * This is a behavior that tries to make the underlying transport reliable by using acknowledgements.\n * @namespace easyXDM.stack\n * @constructor\n * @param {Object} config The behaviors configuration.\n */\neasyXDM.stack.ReliableBehavior = function(config){\n    var pub, // the public interface\n callback; // the callback to execute when we have a confirmed success/failure\n    var idOut = 0, idIn = 0, currentMessage = \"\";\n    \n    return (pub = {\n        incoming: function(message, origin){\n            var indexOf = message.indexOf(\"_\"), ack = message.substring(0, indexOf).split(\",\");\n            message = message.substring(indexOf + 1);\n            \n            if (ack[0] == idOut) {\n                currentMessage = \"\";\n                if (callback) {\n                    callback(true);\n                }\n            }\n            if (message.length > 0) {\n                pub.down.outgoing(ack[1] + \",\" + idOut + \"_\" + currentMessage, origin);\n                if (idIn != ack[1]) {\n                    idIn = ack[1];\n                    pub.up.incoming(message, origin);\n                }\n            }\n            \n        },\n        outgoing: function(message, origin, fn){\n            currentMessage = message;\n            callback = fn;\n            pub.down.outgoing(idIn + \",\" + (++idOut) + \"_\" + message, origin);\n        }\n    });\n};\n/*jslint evil: true, browser: true, immed: true, passfail: true, undef: true, newcap: true*/\n/*global easyXDM, window, escape, unescape, debug, undef, removeFromStack*/\n//\n// easyXDM\n// http://easyxdm.net/\n// Copyright(c) 2009-2011, Øyvind Sean Kinsey, oyvind@kinsey.no.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n/**\n * @class easyXDM.stack.QueueBehavior\n * This is a behavior that enables queueing of messages. <br/>\n * It will buffer incoming messages and dispach these as fast as the underlying transport allows.\n * This will also fragment/defragment messages so that the outgoing message is never bigger than the\n * set length.\n * @namespace easyXDM.stack\n * @constructor\n * @param {Object} config The behaviors configuration. Optional.\n * @cfg {Number} maxLength The maximum length of each outgoing message. Set this to enable fragmentation.\n */\neasyXDM.stack.QueueBehavior = function(config){\n    var pub, queue = [], waiting = true, incoming = \"\", destroying, maxLength = 0, lazy = false, doFragment = false;\n    \n    function dispatch(){\n        if (config.remove && queue.length === 0) {\n            removeFromStack(pub);\n            return;\n        }\n        if (waiting || queue.length === 0 || destroying) {\n            return;\n        }\n        waiting = true;\n        var message = queue.shift();\n        \n        pub.down.outgoing(message.data, message.origin, function(success){\n            waiting = false;\n            if (message.callback) {\n                setTimeout(function(){\n                    message.callback(success);\n                }, 0);\n            }\n            dispatch();\n        });\n    }\n    return (pub = {\n        init: function(){\n            if (undef(config)) {\n                config = {};\n            }\n            if (config.maxLength) {\n                maxLength = config.maxLength;\n                doFragment = true;\n            }\n            if (config.lazy) {\n                lazy = true;\n            }\n            else {\n                pub.down.init();\n            }\n        },\n        callback: function(success){\n            waiting = false;\n            var up = pub.up; // in case dispatch calls removeFromStack\n            dispatch();\n            up.callback(success);\n        },\n        incoming: function(message, origin){\n            if (doFragment) {\n                var indexOf = message.indexOf(\"_\"), seq = parseInt(message.substring(0, indexOf), 10);\n                incoming += message.substring(indexOf + 1);\n                if (seq === 0) {\n                    if (config.encode) {\n                        incoming = decodeURIComponent(incoming);\n                    }\n                    pub.up.incoming(incoming, origin);\n                    incoming = \"\";\n                }\n            }\n            else {\n                pub.up.incoming(message, origin);\n            }\n        },\n        outgoing: function(message, origin, fn){\n            if (config.encode) {\n                message = encodeURIComponent(message);\n            }\n            var fragments = [], fragment;\n            if (doFragment) {\n                // fragment into chunks\n                while (message.length !== 0) {\n                    fragment = message.substring(0, maxLength);\n                    message = message.substring(fragment.length);\n                    fragments.push(fragment);\n                }\n                // enqueue the chunks\n                while ((fragment = fragments.shift())) {\n                    queue.push({\n                        data: fragments.length + \"_\" + fragment,\n                        origin: origin,\n                        callback: fragments.length === 0 ? fn : null\n                    });\n                }\n            }\n            else {\n                queue.push({\n                    data: message,\n                    origin: origin,\n                    callback: fn\n                });\n            }\n            if (lazy) {\n                pub.down.init();\n            }\n            else {\n                dispatch();\n            }\n        },\n        destroy: function(){\n            destroying = true;\n            pub.down.destroy();\n        }\n    });\n};\n/*jslint evil: true, browser: true, immed: true, passfail: true, undef: true, newcap: true*/\n/*global easyXDM, window, escape, unescape, undef, debug */\n//\n// easyXDM\n// http://easyxdm.net/\n// Copyright(c) 2009-2011, Øyvind Sean Kinsey, oyvind@kinsey.no.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n/**\n * @class easyXDM.stack.VerifyBehavior\n * This behavior will verify that communication with the remote end is possible, and will also sign all outgoing,\n * and verify all incoming messages. This removes the risk of someone hijacking the iframe to send malicious messages.\n * @namespace easyXDM.stack\n * @constructor\n * @param {Object} config The behaviors configuration.\n * @cfg {Boolean} initiate If the verification should be initiated from this end.\n */\neasyXDM.stack.VerifyBehavior = function(config){\n    var pub, mySecret, theirSecret, verified = false;\n    \n    function startVerification(){\n        mySecret = Math.random().toString(16).substring(2);\n        pub.down.outgoing(mySecret);\n    }\n    \n    return (pub = {\n        incoming: function(message, origin){\n            var indexOf = message.indexOf(\"_\");\n            if (indexOf === -1) {\n                if (message === mySecret) {\n                    pub.up.callback(true);\n                }\n                else if (!theirSecret) {\n                    theirSecret = message;\n                    if (!config.initiate) {\n                        startVerification();\n                    }\n                    pub.down.outgoing(message);\n                }\n            }\n            else {\n                if (message.substring(0, indexOf) === theirSecret) {\n                    pub.up.incoming(message.substring(indexOf + 1), origin);\n                }\n            }\n        },\n        outgoing: function(message, origin, fn){\n            pub.down.outgoing(mySecret + \"_\" + message, origin, fn);\n        },\n        callback: function(success){\n            if (config.initiate) {\n                startVerification();\n            }\n        }\n    });\n};\n/*jslint evil: true, browser: true, immed: true, passfail: true, undef: true, newcap: true*/\n/*global easyXDM, window, escape, unescape, undef, getJSON, debug, emptyFn, isArray */\n//\n// easyXDM\n// http://easyxdm.net/\n// Copyright(c) 2009-2011, Øyvind Sean Kinsey, oyvind@kinsey.no.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n/**\n * @class easyXDM.stack.RpcBehavior\n * This uses JSON-RPC 2.0 to expose local methods and to invoke remote methods and have responses returned over the the string based transport stack.<br/>\n * Exposed methods can return values synchronous, asyncronous, or bet set up to not return anything.\n * @namespace easyXDM.stack\n * @constructor\n * @param {Object} proxy The object to apply the methods to.\n * @param {Object} config The definition of the local and remote interface to implement.\n * @cfg {Object} local The local interface to expose.\n * @cfg {Object} remote The remote methods to expose through the proxy.\n * @cfg {Object} serializer The serializer to use for serializing and deserializing the JSON. Should be compatible with the HTML5 JSON object. Optional, will default to JSON.\n */\neasyXDM.stack.RpcBehavior = function(proxy, config){\n    var pub, serializer = config.serializer || getJSON();\n    var _callbackCounter = 0, _callbacks = {};\n    \n    /**\n     * Serializes and sends the message\n     * @private\n     * @param {Object} data The JSON-RPC message to be sent. The jsonrpc property will be added.\n     */\n    function _send(data){\n        data.jsonrpc = \"2.0\";\n        pub.down.outgoing(serializer.stringify(data));\n    }\n    \n    /**\n     * Creates a method that implements the given definition\n     * @private\n     * @param {Object} The method configuration\n     * @param {String} method The name of the method\n     * @return {Function} A stub capable of proxying the requested method call\n     */\n    function _createMethod(definition, method){\n        var slice = Array.prototype.slice;\n        \n        return function(){\n            var l = arguments.length, callback, message = {\n                method: method\n            };\n            \n            if (l > 0 && typeof arguments[l - 1] === \"function\") {\n                //with callback, procedure\n                if (l > 1 && typeof arguments[l - 2] === \"function\") {\n                    // two callbacks, success and error\n                    callback = {\n                        success: arguments[l - 2],\n                        error: arguments[l - 1]\n                    };\n                    message.params = slice.call(arguments, 0, l - 2);\n                }\n                else {\n                    // single callback, success\n                    callback = {\n                        success: arguments[l - 1]\n                    };\n                    message.params = slice.call(arguments, 0, l - 1);\n                }\n                _callbacks[\"\" + (++_callbackCounter)] = callback;\n                message.id = _callbackCounter;\n            }\n            else {\n                // no callbacks, a notification\n                message.params = slice.call(arguments, 0);\n            }\n            if (definition.namedParams && message.params.length === 1) {\n                message.params = message.params[0];\n            }\n            // Send the method request\n            _send(message);\n        };\n    }\n    \n    /**\n     * Executes the exposed method\n     * @private\n     * @param {String} method The name of the method\n     * @param {Number} id The callback id to use\n     * @param {Function} method The exposed implementation\n     * @param {Array} params The parameters supplied by the remote end\n     */\n    function _executeMethod(method, id, fn, params){\n        if (!fn) {\n            if (id) {\n                _send({\n                    id: id,\n                    error: {\n                        code: -32601,\n                        message: \"Procedure not found.\"\n                    }\n                });\n            }\n            return;\n        }\n        \n        var success, error;\n        if (id) {\n            success = function(result){\n                success = emptyFn;\n                _send({\n                    id: id,\n                    result: result\n                });\n            };\n            error = function(message, data){\n                error = emptyFn;\n                var msg = {\n                    id: id,\n                    error: {\n                        code: -32099,\n                        message: message\n                    }\n                };\n                if (data) {\n                    msg.error.data = data;\n                }\n                _send(msg);\n            };\n        }\n        else {\n            success = error = emptyFn;\n        }\n        // Call local method\n        if (!isArray(params)) {\n            params = [params];\n        }\n        try {\n            var result = fn.method.apply(fn.scope, params.concat([success, error]));\n            if (!undef(result)) {\n                success(result);\n            }\n        } \n        catch (ex1) {\n            error(ex1.message);\n        }\n    }\n    \n    return (pub = {\n        incoming: function(message, origin){\n            var data = serializer.parse(message);\n            if (data.method) {\n                // A method call from the remote end\n                if (config.handle) {\n                    config.handle(data, _send);\n                }\n                else {\n                    _executeMethod(data.method, data.id, config.local[data.method], data.params);\n                }\n            }\n            else {\n                // A method response from the other end\n                var callback = _callbacks[data.id];\n                if (data.error) {\n                    if (callback.error) {\n                        callback.error(data.error);\n                    }\n                }\n                else if (callback.success) {\n                    callback.success(data.result);\n                }\n                delete _callbacks[data.id];\n            }\n        },\n        init: function(){\n            if (config.remote) {\n                // Implement the remote sides exposed methods\n                for (var method in config.remote) {\n                    if (config.remote.hasOwnProperty(method)) {\n                        proxy[method] = _createMethod(config.remote[method], method);\n                    }\n                }\n            }\n            pub.down.init();\n        },\n        destroy: function(){\n            for (var method in config.remote) {\n                if (config.remote.hasOwnProperty(method) && proxy.hasOwnProperty(method)) {\n                    delete proxy[method];\n                }\n            }\n            pub.down.destroy();\n        }\n    });\n};\nglobal.easyXDM = easyXDM;\n})(window, document, location, window.setTimeout, decodeURIComponent, encodeURIComponent);\n",null,"/**\n * Created by a.korotaev on 24.06.16.\n */\n/**\n * Impelements Xsolla Login Api\n * @param projectId - project's unique identifier\n * @param baseUrl - api endpoint\n * @constructor\n */\n\nvar XLApi = function (projectId, baseUrl) {\n    var self = this;\n    this.baseUrl = baseUrl || '//login.xsolla.com/api/';\n\n    this.projectId = projectId;\n\n    this.makeApiCall = function (params, success, error) {\n        var r = new XMLHttpRequest();\n        r.withCredentials = true;\n        r.open(params.method, self.baseUrl + params.endpoint, true);\n        r.onreadystatechange = function () {\n            if (r.readyState == 4) {\n                if (r.status == 200) {\n                    success(JSON.parse(r.responseText));\n                } else {\n                    if (r.responseText) {\n                        error(JSON.parse(r.responseText));\n                    } else {\n                        error({error: {message: 'Networking error', code: r.status}});\n                    }\n                }\n            }\n        };\n        if (params.method == 'POST') {\n            r.setRequestHeader(\"Content-Type\", \"application/json;charset=UTF-8\");\n            r.send(params.postBody);\n        } else if (params.method == 'GET') {\n            r.send(params.getArguments);\n        }\n    };\n};\n/**\n * Get all avialable social methods auth url\n * @param success - success callback\n * @param error - error callback\n * @param getArguments - additional params to send with request\n */\nXLApi.prototype.getSocialsURLs = function (success, error, getArguments) {\n    var str = \"\";\n    for (var key in getArguments) {\n        if (str != \"\") {\n            str += \"&\";\n        }\n        str += key + \"=\" + encodeURIComponent(getArguments[key]);\n    }\n\n    return this.makeApiCall({method: 'GET', endpoint: 'social/login_urls?' + str, getArguments: null}, success, error);\n};\n\nXLApi.prototype.loginPassAuth = function (login, pass, rememberMe, redirectUrl, success, error) {\n    var body = {\n        username: login,\n        password: pass,\n        remember_me: rememberMe\n    };\n    return this.makeApiCall({method: 'POST', endpoint: 'proxy/login?projectId='+this.projectId + '&redirect_url=' + encodeURIComponent(redirectUrl), postBody: JSON.stringify(body)}, success, error);\n};\n\nXLApi.prototype.smsAuth = function (phoneNumber, success, error) {\n    return this.makeApiCall({method: 'GET', endpoint: 'sms', getArguments: 'phoneNumber=' + phoneNumber}, success, error);\n};\n\nmodule.exports = XLApi;\n","/**\n * Created by a.korotaev on 24.06.16.\n */\n\nvar XLApi = require('./xlapi');\nrequire('./easyXDM');\n/**\n * Create an `Auth0` instance with `options`\n *\n * @class XL\n * @constructor\n */\nfunction XL (options) {\n    var self = this;\n\n    self._socialUrls = {};\n\n    self._options = {};\n    self._options.errorHandler = options.errorHandler || function (a) {\n        };\n    self._options.loginPassValidator = options.loginPassValidator || function (a, b) {\n            return true;\n        };\n    self._options.isMarkupSocialsHandlersEnabled = options.isMarkupSocialsHandlersEnabled || false;\n    self._options.redirectUrl = options.redirectUrl || undefined;\n    self._options.apiUrl = options.apiUrl || '//login.xsolla.com/api/';\n    self._options.maxXLClickDepth = options.maxXLClickDepth || 20;\n    self._options.onlyWidgets = options.onlyWidgets || false;\n    self._options.projectId = options.projectId;\n    self._options.locale = options.locale || 'en';\n\n    var params = {};\n    params.projectId = options.projectId;\n\n    if (self._options.redirectUrl) {\n        params.redirect_url = self._options.redirectUrl;\n    }\n\n    self._api = new XLApi(options.projectId, self._options.apiUrl);\n\n    if (!self._options.onlyWidgets) {\n\n        var updateSocialLinks = function () {\n            self._api.getSocialsURLs(function (response) {\n                self._socialUrls = {};\n                for (var key in response) {\n                    if (response.hasOwnProperty(key)) {\n                        self._socialUrls['sn-' + key] = response[key];\n                    }\n                }\n            }, function (e) {\n                console.error(e);\n            }, params);\n        };\n\n        //Update auth links every hour\n        updateSocialLinks();\n        setInterval(updateSocialLinks, 1000 * 60 * 59);\n\n        var elements = self.getAllElementsWithAttribute('data-xl-auth');\n        var login = '';\n        var pass = '';\n\n        // Find closest ancestor with data-xl-auth attribute\n        function findAncestor(el) {\n            if (el.attributes['data-xl-auth']) {\n                return el;\n            }\n            var i = 0;\n            while ((el = el.parentElement) && !el.attributes['data-xl-auth'] && ++i < self._options.maxXLClickDepth);\n            return el;\n        }\n\n        if (self._options.isMarkupSocialsHandlersEnabled) {\n            document.addEventListener('click', function (e) {\n                var target = findAncestor(e.target);\n                // Do nothing if click was outside of elements with data-xl-auth\n                if (!target) {\n                    return;\n                }\n                var xlData = target.attributes['data-xl-auth'];\n                if (xlData) {\n                    var nodeValue = xlData.nodeValue;\n                    if (nodeValue) {\n                        self.login({authType: nodeValue});\n                    }\n                }\n            });\n        }\n    }\n}\n/**\n * Performs login\n * @param prop\n * @param error - call in case error\n * @param success\n */\nXL.prototype.login = function (prop, error, success) {\n    var self = this;\n\n    if (!prop || !self._socialUrls) {\n        return;\n    }\n\n    /**\n     * props\n     * authType: sn-<social name>, login-pass, sms\n     */\n    if (prop.authType) {\n        if (prop.authType.startsWith('sn-')) {\n            var socialUrl = self._socialUrls[prop.authType];\n            if (socialUrl != undefined) {\n                window.location.href = self._socialUrls[prop.authType];\n            } else {\n                console.error('Auth type: ' + prop.authType + ' doesn\\'t exist');\n            }\n\n        } else if (prop.authType == 'login-pass') {\n            self._api.loginPassAuth(prop.login, prop.pass, prop.rememberMe, self._options.redirectUrl, function (res) {\n                if (res.login_url) {\n                    var finishAuth = function () {\n                        window.location.href = res.login_url;\n                    };\n                    if (success) {\n                        success({status: 'success', finish: finishAuth, redirectUrl: res.login_url});\n                    } else {\n                        finishAuth();\n                    }\n                } else {\n                    error(self.createErrorObject('Login or pass not valid', XL.INCORRECT_LOGIN_OR_PASSWORD_ERROR_CODE));\n                }\n            }, function (err) {\n                error(err);\n            });\n        } else if (prop.authType == 'sms') {\n            if (smsAuthStep == 'phone') {\n                self._api.smsAuth(prop.phoneNumber, null, null);\n            } else if (smsAuthStep == 'code') {\n\n            }\n\n        } else {\n            console.error('Unknown auth type');\n        }\n    }\n};\n\nXL.prototype.sendSms = function (number, error, success) {\n\n};\n\n\nXL.prototype.getAllElementsWithAttribute = function (attribute) {\n    var matchingElements = [];\n    var allElements = document.getElementsByTagName('*');\n    for (var i = 0, n = allElements.length; i < n; i++)\n    {\n        if (allElements[i].getAttribute(attribute) !== null)\n        {\n            matchingElements.push(allElements[i]);\n        }\n    }\n    return matchingElements;\n};\n\nXL.prototype.createErrorObject = function(message, code) {\n    return {\n        error: {\n            message: message,\n            code: code || -1\n        }\n    };\n};\n\nXL.getProjectId = function() {\n    return window.__xl._options.projectId;\n};\n\nXL.getRedirectURL = function () {\n    return window.__xl._options.redirectUrl;\n};\n\nXL.init = function (params) {\n    if (!window.__xl) {\n        var xl = new XL(params);\n        window.__xl = xl;\n    } else {\n        console.error('XL already init!');\n    }\n};\n\nXL.login = function (prop, error, success) {\n    if (window.__xl) {\n        window.__xl.login(prop, error, success);\n    } else {\n        console.error('Please run XL.init() first');\n    }\n};\n\nXL.AuthWidget = function (elementId, options) {\n    if (window.__xl) {\n        if (!elementId) {\n            console.error('No div name!');\n        } else {\n            if (options==undefined) {\n                options = {};\n            }\n            var width = options.width || 200;\n            var height = options.height || 400;\n\n            // var styleString = 'boreder:none';\n            var src = 'http://localhost:8080/home/?projectId=' + XL.getProjectId() + '&locale=' + window.__xl._options.locale;\n\n            var redirectUrl = XL.getRedirectURL();\n            if (redirectUrl) {\n                src = src + '&redirectUrl='+encodeURIComponent(redirectUrl);\n            }\n\n            // var widgetHtml = '<iframe frameborder=\"0\" width=\"'+width+'\" height=\"'+height+'\"  src=\"'+src+'\">Not supported</iframe>';\n            var widgetIframe = document.createElement('iframe');\n            widgetIframe.onload = function () {\n                element.removeChild(preloader);\n                widgetIframe.style.width = width+'px';\n                widgetIframe.style.height = height+'px';\n            };\n            widgetIframe.style.width = 0;\n            widgetIframe.style.height = 0;\n            widgetIframe.frameBorder = '0';\n            widgetIframe.src = src;\n\n\n            var preloader = document.createElement('div');\n            preloader.innerHTML = 'Loading...';\n\n            var element = document.getElementById(elementId);\n            if (element) {\n                element.appendChild(preloader);\n                element.appendChild(widgetIframe);\n            } else {\n                console.error('Element \\\"' + elementId +'\\\" not found!');\n            }\n\n            // var socket = new easyXDM.Socket({\n            //     remote: src, // the path to the provider,\n            //     container: element,\n            //     onMessage:function(message, origin) {\n            //         //do something with message\n            //     }\n            // });\n        }\n    } else {\n        console.error('Please run XL.init() first');\n    }\n};\n\nXL.AuthButton = function (divName, options) {\n\n};\n\nXL.INVALID_LOGIN_ERROR_CODE = 1;\nXL.INCORRECT_LOGIN_OR_PASSWORD_ERROR_CODE = 2;\n\nmodule.exports = XL;"],"sourceRoot":"."}