{"version":3,"sources":["node_modules/browser-pack/_prelude.js","src/xlapi.js","xl.min.js","src/main.js"],"names":["f","exports","module","define","amd","g","window","global","self","this","XL","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length",1,"XLApi","projectId","baseUrl","makeApiCall","params","success","error","XMLHttpRequest","withCredentials","open","method","endpoint","onreadystatechange","readyState","status","JSON","parse","responseText","message","setRequestHeader","send","postBody","getArguments","prototype","getSocialsURLs","str","key","encodeURIComponent","loginPassAuth","login","pass","rememberMe","redirectUrl","body","username","password","remember_me","stringify","smsAuth","phoneNumber","main","options","findAncestor","el","attributes","parentElement","_options","maxXLClickDepth","_socialUrls","errorHandler","loginPassValidator","b","isMarkupSocialsHandlersEnabled","undefined","apiUrl","onlyWidgets","locale","fields","preloader","redirect_url","_api","updateSocialLinks","response","hasOwnProperty","console","setInterval","getAllElementsWithAttribute","document","addEventListener","target","xlData","nodeValue","authType","prop","startsWith","socialUrl","location","href","res","login_url","finishAuth","finish","createErrorObject","INCORRECT_LOGIN_OR_PASSWORD_ERROR_CODE","err","smsAuthStep","sendSms","number","attribute","matchingElements","allElements","getElementsByTagName","getAttribute","push","getProjectId","__xl","getRedirectURL","init","xl","AuthWidget","elementId","width","height","widgetBaseUrl","src","widgetIframe","createElement","onload","element","removeChild","style","frameBorder","innerHTML","getElementById","appendChild","AuthButton","divName","INVALID_LOGIN_ERROR_CODE","./xlapi"],"mappings":"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","file":"xl.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","/**\n * Created by a.korotaev on 24.06.16.\n */\n/**\n * Impelements Xsolla Login Api\n * @param projectId - project's unique identifier\n * @param baseUrl - api endpoint\n * @constructor\n */\n\nvar XLApi = function (projectId, baseUrl) {\n    var self = this;\n    this.baseUrl = baseUrl || '//login.xsolla.com/api/';\n\n    this.projectId = projectId;\n\n    this.makeApiCall = function (params, success, error) {\n        var r = new XMLHttpRequest();\n        r.withCredentials = true;\n        r.open(params.method, self.baseUrl + params.endpoint, true);\n        r.onreadystatechange = function () {\n            if (r.readyState == 4) {\n                if (r.status == 200) {\n                    success(JSON.parse(r.responseText));\n                } else {\n                    if (r.responseText) {\n                        error(JSON.parse(r.responseText));\n                    } else {\n                        error({error: {message: 'Networking error', code: r.status}});\n                    }\n                }\n            }\n        };\n        if (params.method == 'POST') {\n            r.setRequestHeader(\"Content-Type\", \"application/json;charset=UTF-8\");\n            r.send(params.postBody);\n        } else if (params.method == 'GET') {\n            r.send(params.getArguments);\n        }\n    };\n};\n/**\n * Get all avialable social methods auth url\n * @param success - success callback\n * @param error - error callback\n * @param getArguments - additional params to send with request\n */\nXLApi.prototype.getSocialsURLs = function (success, error, getArguments) {\n    var str = \"\";\n    for (var key in getArguments) {\n        if (str != \"\") {\n            str += \"&\";\n        }\n        str += key + \"=\" + encodeURIComponent(getArguments[key]);\n    }\n\n    return this.makeApiCall({method: 'GET', endpoint: 'social/login_urls?' + str, getArguments: null}, success, error);\n};\n\nXLApi.prototype.loginPassAuth = function (login, pass, rememberMe, redirectUrl, success, error) {\n    var body = {\n        username: login,\n        password: pass,\n        remember_me: rememberMe\n    };\n    return this.makeApiCall({method: 'POST', endpoint: 'proxy/login?projectId='+this.projectId + '&redirect_url=' + encodeURIComponent(redirectUrl), postBody: JSON.stringify(body)}, success, error);\n};\n\nXLApi.prototype.smsAuth = function (phoneNumber, success, error) {\n    return this.makeApiCall({method: 'GET', endpoint: 'sms', getArguments: 'phoneNumber=' + phoneNumber}, success, error);\n};\n\nmodule.exports = XLApi;\n",null,"/**\n * Created by a.korotaev on 24.06.16.\n */\n\nvar XLApi = require('./xlapi');\n/**\n * Create an `Auth0` instance with `options`\n *\n * @class XL\n * @constructor\n */\nfunction XL (options) {\n    var self = this;\n\n    self._socialUrls = {};\n\n    self._options = {};\n    self._options.errorHandler = options.errorHandler || function (a) {\n        };\n    self._options.loginPassValidator = options.loginPassValidator || function (a, b) {\n            return true;\n        };\n    self._options.isMarkupSocialsHandlersEnabled = options.isMarkupSocialsHandlersEnabled || false;\n    self._options.redirectUrl = options.redirectUrl || undefined;\n    self._options.apiUrl = options.apiUrl || '//login.xsolla.com/api/';\n    self._options.maxXLClickDepth = options.maxXLClickDepth || 20;\n    self._options.onlyWidgets = options.onlyWidgets || false;\n    self._options.projectId = options.projectId;\n    self._options.locale = options.locale || undefined;\n    self._options.fields = options.fields || undefined;\n    self._options.preloader = options.preloader || '<div></div>';\n\n    var params = {};\n    params.projectId = options.projectId;\n\n    if (self._options.redirectUrl) {\n        params.redirect_url = self._options.redirectUrl;\n    }\n\n    self._api = new XLApi(options.projectId, self._options.apiUrl);\n\n    if (!self._options.onlyWidgets) {\n\n        var updateSocialLinks = function () {\n            self._api.getSocialsURLs(function (response) {\n                self._socialUrls = {};\n                for (var key in response) {\n                    if (response.hasOwnProperty(key)) {\n                        self._socialUrls['sn-' + key] = response[key];\n                    }\n                }\n            }, function (e) {\n                console.error(e);\n            }, params);\n        };\n\n        //Update auth links every hour\n        updateSocialLinks();\n        setInterval(updateSocialLinks, 1000 * 60 * 59);\n\n        var elements = self.getAllElementsWithAttribute('data-xl-auth');\n        var login = '';\n        var pass = '';\n\n        // Find closest ancestor with data-xl-auth attribute\n        function findAncestor(el) {\n            if (el.attributes['data-xl-auth']) {\n                return el;\n            }\n            var i = 0;\n            while ((el = el.parentElement) && !el.attributes['data-xl-auth'] && ++i < self._options.maxXLClickDepth);\n            return el;\n        }\n\n        if (self._options.isMarkupSocialsHandlersEnabled) {\n            document.addEventListener('click', function (e) {\n                var target = findAncestor(e.target);\n                // Do nothing if click was outside of elements with data-xl-auth\n                if (!target) {\n                    return;\n                }\n                var xlData = target.attributes['data-xl-auth'];\n                if (xlData) {\n                    var nodeValue = xlData.nodeValue;\n                    if (nodeValue) {\n                        self.login({authType: nodeValue});\n                    }\n                }\n            });\n        }\n    }\n}\n/**\n * Performs login\n * @param prop\n * @param error - call in case error\n * @param success\n */\nXL.prototype.login = function (prop, error, success) {\n    var self = this;\n\n    if (!prop || !self._socialUrls) {\n        return;\n    }\n\n    /**\n     * props\n     * authType: sn-<social name>, login-pass, sms\n     */\n    if (prop.authType) {\n        if (prop.authType.startsWith('sn-')) {\n            var socialUrl = self._socialUrls[prop.authType];\n            if (socialUrl != undefined) {\n                window.location.href = self._socialUrls[prop.authType];\n            } else {\n                console.error('Auth type: ' + prop.authType + ' doesn\\'t exist');\n            }\n\n        } else if (prop.authType == 'login-pass') {\n            self._api.loginPassAuth(prop.login, prop.pass, prop.rememberMe, self._options.redirectUrl, function (res) {\n                if (res.login_url) {\n                    var finishAuth = function () {\n                        window.location.href = res.login_url;\n                    };\n                    if (success) {\n                        success({status: 'success', finish: finishAuth, redirectUrl: res.login_url});\n                    } else {\n                        finishAuth();\n                    }\n                } else {\n                    error(self.createErrorObject('Login or pass not valid', XL.INCORRECT_LOGIN_OR_PASSWORD_ERROR_CODE));\n                }\n            }, function (err) {\n                error(err);\n            });\n        } else if (prop.authType == 'sms') {\n            if (smsAuthStep == 'phone') {\n                self._api.smsAuth(prop.phoneNumber, null, null);\n            } else if (smsAuthStep == 'code') {\n\n            }\n\n        } else {\n            console.error('Unknown auth type');\n        }\n    }\n};\n\nXL.prototype.sendSms = function (number, error, success) {\n\n};\n\n\nXL.prototype.getAllElementsWithAttribute = function (attribute) {\n    var matchingElements = [];\n    var allElements = document.getElementsByTagName('*');\n    for (var i = 0, n = allElements.length; i < n; i++)\n    {\n        if (allElements[i].getAttribute(attribute) !== null)\n        {\n            matchingElements.push(allElements[i]);\n        }\n    }\n    return matchingElements;\n};\n\nXL.prototype.createErrorObject = function(message, code) {\n    return {\n        error: {\n            message: message,\n            code: code || -1\n        }\n    };\n};\n\nXL.getProjectId = function() {\n    return window.__xl._options.projectId;\n};\n\nXL.getRedirectURL = function () {\n    return window.__xl._options.redirectUrl;\n};\n\nXL.init = function (params) {\n    if (!window.__xl) {\n        var xl = new XL(params);\n        window.__xl = xl;\n    } else {\n        console.error('XL already init!');\n    }\n};\n\nXL.login = function (prop, error, success) {\n    if (window.__xl) {\n        window.__xl.login(prop, error, success);\n    } else {\n        console.error('Please run XL.init() first');\n    }\n};\n\nXL.AuthWidget = function (elementId, options) {\n    if (window.__xl) {\n        if (!elementId) {\n            console.error('No div name!');\n        } else {\n            if (options==undefined) {\n                options = {};\n            }\n            var width = options.width || 400 + 'px';\n            var height = options.height || 550 + 'px';\n\n            var widgetBaseUrl = options.widgetBaseUrl || 'https://xl-widget.xsolla.com/';\n\n            // var styleString = 'boreder:none';\n            var src = widgetBaseUrl + '?projectId=' + XL.getProjectId();\n\n            if (window.__xl._options.locale) {\n                src = src + '&locale=' + window.__xl._options.locale;\n            }\n            if (window.__xl._options.fields) {\n                src = src + '&fields=' + window.__xl._options.fields;\n            }\n            var redirectUrl = XL.getRedirectURL();\n            if (redirectUrl) {\n                src = src + '&redirectUrl='+encodeURIComponent(redirectUrl);\n            }\n\n            // var widgetHtml = '<iframe frameborder=\"0\" width=\"'+width+'\" height=\"'+height+'\"  src=\"'+src+'\">Not supported</iframe>';\n            var widgetIframe = document.createElement('iframe');\n            widgetIframe.onload = function () {\n                element.removeChild(preloader);\n                widgetIframe.style.width = '100%';\n                widgetIframe.style.height = '100%';\n            };\n            widgetIframe.style.width = 0;\n            widgetIframe.style.height = 0;\n            widgetIframe.frameBorder = '0';\n            widgetIframe.src = src;\n\n\n            var preloader = document.createElement('div');\n\n            preloader.innerHTML = window.__xl._options.preloader;\n\n            var element = document.getElementById(elementId);\n            if (element) {\n                element.style.width = width;\n                element.style.height = height;\n                element.appendChild(preloader);\n                element.appendChild(widgetIframe);\n            } else {\n                console.error('Element \\\"' + elementId +'\\\" not found!');\n            }\n\n            // var socket = new easyXDM.Socket({\n            //     remote: src, // the path to the provider,\n            //     container: element,\n            //     onMessage:function(message, origin) {\n            //         //do something with message\n            //     }\n            // });\n        }\n    } else {\n        console.error('Please run XL.init() first');\n    }\n};\n\nXL.AuthButton = function (divName, options) {\n\n};\n\nXL.INVALID_LOGIN_ERROR_CODE = 1;\nXL.INCORRECT_LOGIN_OR_PASSWORD_ERROR_CODE = 2;\n\nmodule.exports = XL;"],"sourceRoot":"."}