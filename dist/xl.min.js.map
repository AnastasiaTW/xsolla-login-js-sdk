{"version":3,"sources":["node_modules/browser-pack/_prelude.js","node_modules/superagent/lib/client.js","xl.min.js","node_modules/superagent/lib/is-object.js","node_modules/superagent/lib/request-base.js","node_modules/superagent/lib/request.js","node_modules/superagent/node_modules/component-emitter/index.js","src/xlapi.js","src/main.js"],"names":["f","exports","module","define","amd","g","window","global","self","this","XL","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length",1,"noop","serialize","obj","isObject","pairs","key","pushEncodedKeyValuePair","join","val","Array","isArray","forEach","v","subkey","push","encodeURIComponent","parseString","str","pair","pos","split","len","indexOf","decodeURIComponent","slice","parseHeader","index","line","field","lines","fields","pop","toLowerCase","trim","isJSON","mime","test","type","shift","params","reduce","parts","Response","req","options","xhr","text","method","responseType","responseText","statusText","_setStatusProperties","status","header","headers","getAllResponseHeaders","getResponseHeader","_setHeaderProperties","body","_parseBody","response","Request","url","_query","_header","on","err","res","parse","original","rawResponse","statusCode","callback","emit","new_err","del","fn","request","end","root","console","warn","Emitter","requestBase","bind","getXHR","XMLHttpRequest","location","protocol","ActiveXObject","replace","serializeObject","types","html","json","xml","urlencoded","form","form-data","application/x-www-form-urlencoded","application/json","JSON","stringify","prototype","get","ct","Object","statusType","info","ok","clientError","serverError","error","toError","accepted","noContent","badRequest","unauthorized","notAcceptable","notFound","forbidden","msg","set","_responseType","accept","auth","user","pass","btoa","username","password","query","attach","file","filename","_getFormData","append","name","_formData","FormData","_callback","clearTimeout","crossDomainError","crossDomain","_timeoutError","timeout","_timeout","_appendQueryString","data","_data","onreadystatechange","readyState","timedout","_aborted","handleProgress","total","percent","loaded","direction","hasListeners","onprogress","upload","_timer","setTimeout","abort","open","_withCredentials","withCredentials","_isHost","contentType","_serializer","setRequestHeader","send","head","patch","post","put","./is-object","./request","./request-base","emitter",2,3,"_parser","ms","then","resolve","reject","_fullfilledPromise","Promise","innerResolve","innerReject","use","getHeader","unset","redirects","_maxRedirects","toJSON","toString",4,"RequestConstructor","arguments",5,"mixin","addEventListener","event","_callbacks","once","off","apply","removeListener","removeAllListeners","removeEventListener","callbacks","cb","splice","args","listeners",6,"XLApi","projectId","baseUrl","makeApiCall","success","responseHandler","message","requestUrl","endpoint","postBody","getSocialsURLs","getArguments","loginPassAuth","login","rememberMe","remember_me","smsAuth","phoneNumber","superagent","main","_socialUrls","undefined","_options","errorHandler","loginPassValidator","b","isMarkupSocialsHandlersEnabled","_api","hasOwnProperty","getAllElementsWithAttribute","document","element","target","xlData","attributes","nodeValue","authType","prop","startsWith","socialUrl","href","login_url","createErrorObject","INCORRECT_LOGIN_OR_PASSWORD_ERROR_CODE","smsAuthStep","attribute","matchingElements","allElements","getElementsByTagName","getAttribute","init","__xl","xl","AuthWidget","divName","getElementById","innerHTML","AuthButton","INVALID_LOGIN_ERROR_CODE","./xlapi"],"mappings":"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","file":"xl.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","/**\n * Root reference for iframes.\n */\n\nvar root;\nif (typeof window !== 'undefined') { // Browser window\n  root = window;\n} else if (typeof self !== 'undefined') { // Web Worker\n  root = self;\n} else { // Other environments\n  console.warn(\"Using browser-only version of superagent in non-browser environment\");\n  root = this;\n}\n\nvar Emitter = require('emitter');\nvar requestBase = require('./request-base');\nvar isObject = require('./is-object');\n\n/**\n * Noop.\n */\n\nfunction noop(){};\n\n/**\n * Expose `request`.\n */\n\nvar request = module.exports = require('./request').bind(null, Request);\n\n/**\n * Determine XHR.\n */\n\nrequest.getXHR = function () {\n  if (root.XMLHttpRequest\n      && (!root.location || 'file:' != root.location.protocol\n          || !root.ActiveXObject)) {\n    return new XMLHttpRequest;\n  } else {\n    try { return new ActiveXObject('Microsoft.XMLHTTP'); } catch(e) {}\n    try { return new ActiveXObject('Msxml2.XMLHTTP.6.0'); } catch(e) {}\n    try { return new ActiveXObject('Msxml2.XMLHTTP.3.0'); } catch(e) {}\n    try { return new ActiveXObject('Msxml2.XMLHTTP'); } catch(e) {}\n  }\n  throw Error(\"Browser-only verison of superagent could not find XHR\");\n};\n\n/**\n * Removes leading and trailing whitespace, added to support IE.\n *\n * @param {String} s\n * @return {String}\n * @api private\n */\n\nvar trim = ''.trim\n  ? function(s) { return s.trim(); }\n  : function(s) { return s.replace(/(^\\s*|\\s*$)/g, ''); };\n\n/**\n * Serialize the given `obj`.\n *\n * @param {Object} obj\n * @return {String}\n * @api private\n */\n\nfunction serialize(obj) {\n  if (!isObject(obj)) return obj;\n  var pairs = [];\n  for (var key in obj) {\n    pushEncodedKeyValuePair(pairs, key, obj[key]);\n  }\n  return pairs.join('&');\n}\n\n/**\n * Helps 'serialize' with serializing arrays.\n * Mutates the pairs array.\n *\n * @param {Array} pairs\n * @param {String} key\n * @param {Mixed} val\n */\n\nfunction pushEncodedKeyValuePair(pairs, key, val) {\n  if (val != null) {\n    if (Array.isArray(val)) {\n      val.forEach(function(v) {\n        pushEncodedKeyValuePair(pairs, key, v);\n      });\n    } else if (isObject(val)) {\n      for(var subkey in val) {\n        pushEncodedKeyValuePair(pairs, key + '[' + subkey + ']', val[subkey]);\n      }\n    } else {\n      pairs.push(encodeURIComponent(key)\n        + '=' + encodeURIComponent(val));\n    }\n  } else if (val === null) {\n    pairs.push(encodeURIComponent(key));\n  }\n}\n\n/**\n * Expose serialization method.\n */\n\n request.serializeObject = serialize;\n\n /**\n  * Parse the given x-www-form-urlencoded `str`.\n  *\n  * @param {String} str\n  * @return {Object}\n  * @api private\n  */\n\nfunction parseString(str) {\n  var obj = {};\n  var pairs = str.split('&');\n  var pair;\n  var pos;\n\n  for (var i = 0, len = pairs.length; i < len; ++i) {\n    pair = pairs[i];\n    pos = pair.indexOf('=');\n    if (pos == -1) {\n      obj[decodeURIComponent(pair)] = '';\n    } else {\n      obj[decodeURIComponent(pair.slice(0, pos))] =\n        decodeURIComponent(pair.slice(pos + 1));\n    }\n  }\n\n  return obj;\n}\n\n/**\n * Expose parser.\n */\n\nrequest.parseString = parseString;\n\n/**\n * Default MIME type map.\n *\n *     superagent.types.xml = 'application/xml';\n *\n */\n\nrequest.types = {\n  html: 'text/html',\n  json: 'application/json',\n  xml: 'application/xml',\n  urlencoded: 'application/x-www-form-urlencoded',\n  'form': 'application/x-www-form-urlencoded',\n  'form-data': 'application/x-www-form-urlencoded'\n};\n\n/**\n * Default serialization map.\n *\n *     superagent.serialize['application/xml'] = function(obj){\n *       return 'generated xml here';\n *     };\n *\n */\n\n request.serialize = {\n   'application/x-www-form-urlencoded': serialize,\n   'application/json': JSON.stringify\n };\n\n /**\n  * Default parsers.\n  *\n  *     superagent.parse['application/xml'] = function(str){\n  *       return { object parsed from str };\n  *     };\n  *\n  */\n\nrequest.parse = {\n  'application/x-www-form-urlencoded': parseString,\n  'application/json': JSON.parse\n};\n\n/**\n * Parse the given header `str` into\n * an object containing the mapped fields.\n *\n * @param {String} str\n * @return {Object}\n * @api private\n */\n\nfunction parseHeader(str) {\n  var lines = str.split(/\\r?\\n/);\n  var fields = {};\n  var index;\n  var line;\n  var field;\n  var val;\n\n  lines.pop(); // trailing CRLF\n\n  for (var i = 0, len = lines.length; i < len; ++i) {\n    line = lines[i];\n    index = line.indexOf(':');\n    field = line.slice(0, index).toLowerCase();\n    val = trim(line.slice(index + 1));\n    fields[field] = val;\n  }\n\n  return fields;\n}\n\n/**\n * Check if `mime` is json or has +json structured syntax suffix.\n *\n * @param {String} mime\n * @return {Boolean}\n * @api private\n */\n\nfunction isJSON(mime) {\n  return /[\\/+]json\\b/.test(mime);\n}\n\n/**\n * Return the mime type for the given `str`.\n *\n * @param {String} str\n * @return {String}\n * @api private\n */\n\nfunction type(str){\n  return str.split(/ *; */).shift();\n};\n\n/**\n * Return header field parameters.\n *\n * @param {String} str\n * @return {Object}\n * @api private\n */\n\nfunction params(str){\n  return str.split(/ *; */).reduce(function(obj, str){\n    var parts = str.split(/ *= */),\n        key = parts.shift(),\n        val = parts.shift();\n\n    if (key && val) obj[key] = val;\n    return obj;\n  }, {});\n};\n\n/**\n * Initialize a new `Response` with the given `xhr`.\n *\n *  - set flags (.ok, .error, etc)\n *  - parse header\n *\n * Examples:\n *\n *  Aliasing `superagent` as `request` is nice:\n *\n *      request = superagent;\n *\n *  We can use the promise-like API, or pass callbacks:\n *\n *      request.get('/').end(function(res){});\n *      request.get('/', function(res){});\n *\n *  Sending data can be chained:\n *\n *      request\n *        .post('/user')\n *        .send({ name: 'tj' })\n *        .end(function(res){});\n *\n *  Or passed to `.send()`:\n *\n *      request\n *        .post('/user')\n *        .send({ name: 'tj' }, function(res){});\n *\n *  Or passed to `.post()`:\n *\n *      request\n *        .post('/user', { name: 'tj' })\n *        .end(function(res){});\n *\n * Or further reduced to a single call for simple cases:\n *\n *      request\n *        .post('/user', { name: 'tj' }, function(res){});\n *\n * @param {XMLHTTPRequest} xhr\n * @param {Object} options\n * @api private\n */\n\nfunction Response(req, options) {\n  options = options || {};\n  this.req = req;\n  this.xhr = this.req.xhr;\n  // responseText is accessible only if responseType is '' or 'text' and on older browsers\n  this.text = ((this.req.method !='HEAD' && (this.xhr.responseType === '' || this.xhr.responseType === 'text')) || typeof this.xhr.responseType === 'undefined')\n     ? this.xhr.responseText\n     : null;\n  this.statusText = this.req.xhr.statusText;\n  this._setStatusProperties(this.xhr.status);\n  this.header = this.headers = parseHeader(this.xhr.getAllResponseHeaders());\n  // getAllResponseHeaders sometimes falsely returns \"\" for CORS requests, but\n  // getResponseHeader still works. so we get content-type even if getting\n  // other headers fails.\n  this.header['content-type'] = this.xhr.getResponseHeader('content-type');\n  this._setHeaderProperties(this.header);\n  this.body = this.req.method != 'HEAD'\n    ? this._parseBody(this.text ? this.text : this.xhr.response)\n    : null;\n}\n\n/**\n * Get case-insensitive `field` value.\n *\n * @param {String} field\n * @return {String}\n * @api public\n */\n\nResponse.prototype.get = function(field){\n  return this.header[field.toLowerCase()];\n};\n\n/**\n * Set header related properties:\n *\n *   - `.type` the content type without params\n *\n * A response of \"Content-Type: text/plain; charset=utf-8\"\n * will provide you with a `.type` of \"text/plain\".\n *\n * @param {Object} header\n * @api private\n */\n\nResponse.prototype._setHeaderProperties = function(header){\n  // content-type\n  var ct = this.header['content-type'] || '';\n  this.type = type(ct);\n\n  // params\n  var obj = params(ct);\n  for (var key in obj) this[key] = obj[key];\n};\n\n/**\n * Parse the given body `str`.\n *\n * Used for auto-parsing of bodies. Parsers\n * are defined on the `superagent.parse` object.\n *\n * @param {String} str\n * @return {Mixed}\n * @api private\n */\n\nResponse.prototype._parseBody = function(str){\n  var parse = request.parse[this.type];\n  if (!parse && isJSON(this.type)) {\n    parse = request.parse['application/json'];\n  }\n  return parse && str && (str.length || str instanceof Object)\n    ? parse(str)\n    : null;\n};\n\n/**\n * Set flags such as `.ok` based on `status`.\n *\n * For example a 2xx response will give you a `.ok` of __true__\n * whereas 5xx will be __false__ and `.error` will be __true__. The\n * `.clientError` and `.serverError` are also available to be more\n * specific, and `.statusType` is the class of error ranging from 1..5\n * sometimes useful for mapping respond colors etc.\n *\n * \"sugar\" properties are also defined for common cases. Currently providing:\n *\n *   - .noContent\n *   - .badRequest\n *   - .unauthorized\n *   - .notAcceptable\n *   - .notFound\n *\n * @param {Number} status\n * @api private\n */\n\nResponse.prototype._setStatusProperties = function(status){\n  // handle IE9 bug: http://stackoverflow.com/questions/10046972/msie-returns-status-code-of-1223-for-ajax-request\n  if (status === 1223) {\n    status = 204;\n  }\n\n  var type = status / 100 | 0;\n\n  // status / class\n  this.status = this.statusCode = status;\n  this.statusType = type;\n\n  // basics\n  this.info = 1 == type;\n  this.ok = 2 == type;\n  this.clientError = 4 == type;\n  this.serverError = 5 == type;\n  this.error = (4 == type || 5 == type)\n    ? this.toError()\n    : false;\n\n  // sugar\n  this.accepted = 202 == status;\n  this.noContent = 204 == status;\n  this.badRequest = 400 == status;\n  this.unauthorized = 401 == status;\n  this.notAcceptable = 406 == status;\n  this.notFound = 404 == status;\n  this.forbidden = 403 == status;\n};\n\n/**\n * Return an `Error` representative of this response.\n *\n * @return {Error}\n * @api public\n */\n\nResponse.prototype.toError = function(){\n  var req = this.req;\n  var method = req.method;\n  var url = req.url;\n\n  var msg = 'cannot ' + method + ' ' + url + ' (' + this.status + ')';\n  var err = new Error(msg);\n  err.status = this.status;\n  err.method = method;\n  err.url = url;\n\n  return err;\n};\n\n/**\n * Expose `Response`.\n */\n\nrequest.Response = Response;\n\n/**\n * Initialize a new `Request` with the given `method` and `url`.\n *\n * @param {String} method\n * @param {String} url\n * @api public\n */\n\nfunction Request(method, url) {\n  var self = this;\n  this._query = this._query || [];\n  this.method = method;\n  this.url = url;\n  this.header = {}; // preserves header name case\n  this._header = {}; // coerces header names to lowercase\n  this.on('end', function(){\n    var err = null;\n    var res = null;\n\n    try {\n      res = new Response(self);\n    } catch(e) {\n      err = new Error('Parser is unable to parse the response');\n      err.parse = true;\n      err.original = e;\n      // issue #675: return the raw response if the response parsing fails\n      err.rawResponse = self.xhr && self.xhr.responseText ? self.xhr.responseText : null;\n      // issue #876: return the http status code if the response parsing fails\n      err.statusCode = self.xhr && self.xhr.status ? self.xhr.status : null;\n      return self.callback(err);\n    }\n\n    self.emit('response', res);\n\n    var new_err;\n    try {\n      if (res.status < 200 || res.status >= 300) {\n        new_err = new Error(res.statusText || 'Unsuccessful HTTP response');\n        new_err.original = err;\n        new_err.response = res;\n        new_err.status = res.status;\n      }\n    } catch(e) {\n      new_err = e; // #985 touching res may cause INVALID_STATE_ERR on old Android\n    }\n\n    // #1000 don't catch errors from the callback to avoid double calling it\n    if (new_err) {\n      self.callback(new_err, res);\n    } else {\n      self.callback(null, res);\n    }\n  });\n}\n\n/**\n * Mixin `Emitter` and `requestBase`.\n */\n\nEmitter(Request.prototype);\nfor (var key in requestBase) {\n  Request.prototype[key] = requestBase[key];\n}\n\n/**\n * Set Content-Type to `type`, mapping values from `request.types`.\n *\n * Examples:\n *\n *      superagent.types.xml = 'application/xml';\n *\n *      request.post('/')\n *        .type('xml')\n *        .send(xmlstring)\n *        .end(callback);\n *\n *      request.post('/')\n *        .type('application/xml')\n *        .send(xmlstring)\n *        .end(callback);\n *\n * @param {String} type\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.type = function(type){\n  this.set('Content-Type', request.types[type] || type);\n  return this;\n};\n\n/**\n * Set responseType to `val`. Presently valid responseTypes are 'blob' and\n * 'arraybuffer'.\n *\n * Examples:\n *\n *      req.get('/')\n *        .responseType('blob')\n *        .end(callback);\n *\n * @param {String} val\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.responseType = function(val){\n  this._responseType = val;\n  return this;\n};\n\n/**\n * Set Accept to `type`, mapping values from `request.types`.\n *\n * Examples:\n *\n *      superagent.types.json = 'application/json';\n *\n *      request.get('/agent')\n *        .accept('json')\n *        .end(callback);\n *\n *      request.get('/agent')\n *        .accept('application/json')\n *        .end(callback);\n *\n * @param {String} accept\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.accept = function(type){\n  this.set('Accept', request.types[type] || type);\n  return this;\n};\n\n/**\n * Set Authorization field value with `user` and `pass`.\n *\n * @param {String} user\n * @param {String} pass\n * @param {Object} options with 'type' property 'auto' or 'basic' (default 'basic')\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.auth = function(user, pass, options){\n  if (!options) {\n    options = {\n      type: 'basic'\n    }\n  }\n\n  switch (options.type) {\n    case 'basic':\n      var str = btoa(user + ':' + pass);\n      this.set('Authorization', 'Basic ' + str);\n    break;\n\n    case 'auto':\n      this.username = user;\n      this.password = pass;\n    break;\n  }\n  return this;\n};\n\n/**\n* Add query-string `val`.\n*\n* Examples:\n*\n*   request.get('/shoes')\n*     .query('size=10')\n*     .query({ color: 'blue' })\n*\n* @param {Object|String} val\n* @return {Request} for chaining\n* @api public\n*/\n\nRequest.prototype.query = function(val){\n  if ('string' != typeof val) val = serialize(val);\n  if (val) this._query.push(val);\n  return this;\n};\n\n/**\n * Queue the given `file` as an attachment to the specified `field`,\n * with optional `filename`.\n *\n * ``` js\n * request.post('/upload')\n *   .attach('content', new Blob(['<a id=\"a\"><b id=\"b\">hey!</b></a>'], { type: \"text/html\"}))\n *   .end(callback);\n * ```\n *\n * @param {String} field\n * @param {Blob|File} file\n * @param {String} filename\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.attach = function(field, file, filename){\n  this._getFormData().append(field, file, filename || file.name);\n  return this;\n};\n\nRequest.prototype._getFormData = function(){\n  if (!this._formData) {\n    this._formData = new root.FormData();\n  }\n  return this._formData;\n};\n\n/**\n * Invoke the callback with `err` and `res`\n * and handle arity check.\n *\n * @param {Error} err\n * @param {Response} res\n * @api private\n */\n\nRequest.prototype.callback = function(err, res){\n  var fn = this._callback;\n  this.clearTimeout();\n  fn(err, res);\n};\n\n/**\n * Invoke callback with x-domain error.\n *\n * @api private\n */\n\nRequest.prototype.crossDomainError = function(){\n  var err = new Error('Request has been terminated\\nPossible causes: the network is offline, Origin is not allowed by Access-Control-Allow-Origin, the page is being unloaded, etc.');\n  err.crossDomain = true;\n\n  err.status = this.status;\n  err.method = this.method;\n  err.url = this.url;\n\n  this.callback(err);\n};\n\n/**\n * Invoke callback with timeout error.\n *\n * @api private\n */\n\nRequest.prototype._timeoutError = function(){\n  var timeout = this._timeout;\n  var err = new Error('timeout of ' + timeout + 'ms exceeded');\n  err.timeout = timeout;\n  this.callback(err);\n};\n\n/**\n * Compose querystring to append to req.url\n *\n * @api private\n */\n\nRequest.prototype._appendQueryString = function(){\n  var query = this._query.join('&');\n  if (query) {\n    this.url += ~this.url.indexOf('?')\n      ? '&' + query\n      : '?' + query;\n  }\n};\n\n/**\n * Initiate request, invoking callback `fn(res)`\n * with an instanceof `Response`.\n *\n * @param {Function} fn\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.end = function(fn){\n  var self = this;\n  var xhr = this.xhr = request.getXHR();\n  var timeout = this._timeout;\n  var data = this._formData || this._data;\n\n  // store callback\n  this._callback = fn || noop;\n\n  // state change\n  xhr.onreadystatechange = function(){\n    if (4 != xhr.readyState) return;\n\n    // In IE9, reads to any property (e.g. status) off of an aborted XHR will\n    // result in the error \"Could not complete the operation due to error c00c023f\"\n    var status;\n    try { status = xhr.status } catch(e) { status = 0; }\n\n    if (0 == status) {\n      if (self.timedout) return self._timeoutError();\n      if (self._aborted) return;\n      return self.crossDomainError();\n    }\n    self.emit('end');\n  };\n\n  // progress\n  var handleProgress = function(e){\n    if (e.total > 0) {\n      e.percent = e.loaded / e.total * 100;\n    }\n    e.direction = 'download';\n    self.emit('progress', e);\n  };\n  if (this.hasListeners('progress')) {\n    xhr.onprogress = handleProgress;\n  }\n  try {\n    if (xhr.upload && this.hasListeners('progress')) {\n      xhr.upload.onprogress = handleProgress;\n    }\n  } catch(e) {\n    // Accessing xhr.upload fails in IE from a web worker, so just pretend it doesn't exist.\n    // Reported here:\n    // https://connect.microsoft.com/IE/feedback/details/837245/xmlhttprequest-upload-throws-invalid-argument-when-used-from-web-worker-context\n  }\n\n  // timeout\n  if (timeout && !this._timer) {\n    this._timer = setTimeout(function(){\n      self.timedout = true;\n      self.abort();\n    }, timeout);\n  }\n\n  // querystring\n  this._appendQueryString();\n\n  // initiate request\n  if (this.username && this.password) {\n    xhr.open(this.method, this.url, true, this.username, this.password);\n  } else {\n    xhr.open(this.method, this.url, true);\n  }\n\n  // CORS\n  if (this._withCredentials) xhr.withCredentials = true;\n\n  // body\n  if ('GET' != this.method && 'HEAD' != this.method && 'string' != typeof data && !this._isHost(data)) {\n    // serialize stuff\n    var contentType = this._header['content-type'];\n    var serialize = this._serializer || request.serialize[contentType ? contentType.split(';')[0] : ''];\n    if (!serialize && isJSON(contentType)) serialize = request.serialize['application/json'];\n    if (serialize) data = serialize(data);\n  }\n\n  // set header fields\n  for (var field in this.header) {\n    if (null == this.header[field]) continue;\n    xhr.setRequestHeader(field, this.header[field]);\n  }\n\n  if (this._responseType) {\n    xhr.responseType = this._responseType;\n  }\n\n  // send stuff\n  this.emit('request', this);\n\n  // IE11 xhr.send(undefined) sends 'undefined' string as POST payload (instead of nothing)\n  // We need null here if data is undefined\n  xhr.send(typeof data !== 'undefined' ? data : null);\n  return this;\n};\n\n\n/**\n * Expose `Request`.\n */\n\nrequest.Request = Request;\n\n/**\n * GET `url` with optional callback `fn(res)`.\n *\n * @param {String} url\n * @param {Mixed|Function} [data] or fn\n * @param {Function} [fn]\n * @return {Request}\n * @api public\n */\n\nrequest.get = function(url, data, fn){\n  var req = request('GET', url);\n  if ('function' == typeof data) fn = data, data = null;\n  if (data) req.query(data);\n  if (fn) req.end(fn);\n  return req;\n};\n\n/**\n * HEAD `url` with optional callback `fn(res)`.\n *\n * @param {String} url\n * @param {Mixed|Function} [data] or fn\n * @param {Function} [fn]\n * @return {Request}\n * @api public\n */\n\nrequest.head = function(url, data, fn){\n  var req = request('HEAD', url);\n  if ('function' == typeof data) fn = data, data = null;\n  if (data) req.send(data);\n  if (fn) req.end(fn);\n  return req;\n};\n\n/**\n * OPTIONS query to `url` with optional callback `fn(res)`.\n *\n * @param {String} url\n * @param {Mixed|Function} [data] or fn\n * @param {Function} [fn]\n * @return {Request}\n * @api public\n */\n\nrequest.options = function(url, data, fn){\n  var req = request('OPTIONS', url);\n  if ('function' == typeof data) fn = data, data = null;\n  if (data) req.send(data);\n  if (fn) req.end(fn);\n  return req;\n};\n\n/**\n * DELETE `url` with optional callback `fn(res)`.\n *\n * @param {String} url\n * @param {Function} [fn]\n * @return {Request}\n * @api public\n */\n\nfunction del(url, fn){\n  var req = request('DELETE', url);\n  if (fn) req.end(fn);\n  return req;\n};\n\nrequest['del'] = del;\nrequest['delete'] = del;\n\n/**\n * PATCH `url` with optional `data` and callback `fn(res)`.\n *\n * @param {String} url\n * @param {Mixed} [data]\n * @param {Function} [fn]\n * @return {Request}\n * @api public\n */\n\nrequest.patch = function(url, data, fn){\n  var req = request('PATCH', url);\n  if ('function' == typeof data) fn = data, data = null;\n  if (data) req.send(data);\n  if (fn) req.end(fn);\n  return req;\n};\n\n/**\n * POST `url` with optional `data` and callback `fn(res)`.\n *\n * @param {String} url\n * @param {Mixed} [data]\n * @param {Function} [fn]\n * @return {Request}\n * @api public\n */\n\nrequest.post = function(url, data, fn){\n  var req = request('POST', url);\n  if ('function' == typeof data) fn = data, data = null;\n  if (data) req.send(data);\n  if (fn) req.end(fn);\n  return req;\n};\n\n/**\n * PUT `url` with optional `data` and callback `fn(res)`.\n *\n * @param {String} url\n * @param {Mixed|Function} [data] or fn\n * @param {Function} [fn]\n * @return {Request}\n * @api public\n */\n\nrequest.put = function(url, data, fn){\n  var req = request('PUT', url);\n  if ('function' == typeof data) fn = data, data = null;\n  if (data) req.send(data);\n  if (fn) req.end(fn);\n  return req;\n};\n",null,"/**\n * Check if `obj` is an object.\n *\n * @param {Object} obj\n * @return {Boolean}\n * @api private\n */\n\nfunction isObject(obj) {\n  return null !== obj && 'object' === typeof obj;\n}\n\nmodule.exports = isObject;\n","/**\n * Module of mixed-in functions shared between node and client code\n */\nvar isObject = require('./is-object');\n\n/**\n * Clear previous timeout.\n *\n * @return {Request} for chaining\n * @api public\n */\n\nexports.clearTimeout = function _clearTimeout(){\n  this._timeout = 0;\n  clearTimeout(this._timer);\n  return this;\n};\n\n/**\n * Override default response body parser\n *\n * This function will be called to convert incoming data into request.body\n *\n * @param {Function}\n * @api public\n */\n\nexports.parse = function parse(fn){\n  this._parser = fn;\n  return this;\n};\n\n/**\n * Override default request body serializer\n *\n * This function will be called to convert data set via .send or .attach into payload to send\n *\n * @param {Function}\n * @api public\n */\n\nexports.serialize = function serialize(fn){\n  this._serializer = fn;\n  return this;\n};\n\n/**\n * Set timeout to `ms`.\n *\n * @param {Number} ms\n * @return {Request} for chaining\n * @api public\n */\n\nexports.timeout = function timeout(ms){\n  this._timeout = ms;\n  return this;\n};\n\n/**\n * Promise support\n *\n * @param {Function} resolve\n * @param {Function} reject\n * @return {Request}\n */\n\nexports.then = function then(resolve, reject) {\n  if (!this._fullfilledPromise) {\n    var self = this;\n    this._fullfilledPromise = new Promise(function(innerResolve, innerReject){\n      self.end(function(err, res){\n        if (err) innerReject(err); else innerResolve(res);\n      });\n    });\n  }\n  return this._fullfilledPromise.then(resolve, reject);\n}\n\n/**\n * Allow for extension\n */\n\nexports.use = function use(fn) {\n  fn(this);\n  return this;\n}\n\n\n/**\n * Get request header `field`.\n * Case-insensitive.\n *\n * @param {String} field\n * @return {String}\n * @api public\n */\n\nexports.get = function(field){\n  return this._header[field.toLowerCase()];\n};\n\n/**\n * Get case-insensitive header `field` value.\n * This is a deprecated internal API. Use `.get(field)` instead.\n *\n * (getHeader is no longer used internally by the superagent code base)\n *\n * @param {String} field\n * @return {String}\n * @api private\n * @deprecated\n */\n\nexports.getHeader = exports.get;\n\n/**\n * Set header `field` to `val`, or multiple fields with one object.\n * Case-insensitive.\n *\n * Examples:\n *\n *      req.get('/')\n *        .set('Accept', 'application/json')\n *        .set('X-API-Key', 'foobar')\n *        .end(callback);\n *\n *      req.get('/')\n *        .set({ Accept: 'application/json', 'X-API-Key': 'foobar' })\n *        .end(callback);\n *\n * @param {String|Object} field\n * @param {String} val\n * @return {Request} for chaining\n * @api public\n */\n\nexports.set = function(field, val){\n  if (isObject(field)) {\n    for (var key in field) {\n      this.set(key, field[key]);\n    }\n    return this;\n  }\n  this._header[field.toLowerCase()] = val;\n  this.header[field] = val;\n  return this;\n};\n\n/**\n * Remove header `field`.\n * Case-insensitive.\n *\n * Example:\n *\n *      req.get('/')\n *        .unset('User-Agent')\n *        .end(callback);\n *\n * @param {String} field\n */\nexports.unset = function(field){\n  delete this._header[field.toLowerCase()];\n  delete this.header[field];\n  return this;\n};\n\n/**\n * Write the field `name` and `val` for \"multipart/form-data\"\n * request bodies.\n *\n * ``` js\n * request.post('/upload')\n *   .field('foo', 'bar')\n *   .end(callback);\n * ```\n *\n * @param {String} name\n * @param {String|Blob|File|Buffer|fs.ReadStream} val\n * @return {Request} for chaining\n * @api public\n */\nexports.field = function(name, val) {\n  this._getFormData().append(name, val);\n  return this;\n};\n\n/**\n * Abort the request, and clear potential timeout.\n *\n * @return {Request}\n * @api public\n */\nexports.abort = function(){\n  if (this._aborted) {\n    return this;\n  }\n  this._aborted = true;\n  this.xhr && this.xhr.abort(); // browser\n  this.req && this.req.abort(); // node\n  this.clearTimeout();\n  this.emit('abort');\n  return this;\n};\n\n/**\n * Enable transmission of cookies with x-domain requests.\n *\n * Note that for this to work the origin must not be\n * using \"Access-Control-Allow-Origin\" with a wildcard,\n * and also must set \"Access-Control-Allow-Credentials\"\n * to \"true\".\n *\n * @api public\n */\n\nexports.withCredentials = function(){\n  // This is browser-only functionality. Node side is no-op.\n  this._withCredentials = true;\n  return this;\n};\n\n/**\n * Set the max redirects to `n`. Does noting in browser XHR implementation.\n *\n * @param {Number} n\n * @return {Request} for chaining\n * @api public\n */\n\nexports.redirects = function(n){\n  this._maxRedirects = n;\n  return this;\n};\n\n/**\n * Convert to a plain javascript object (not JSON string) of scalar properties.\n * Note as this method is designed to return a useful non-this value,\n * it cannot be chained.\n *\n * @return {Object} describing method, url, and data of this request\n * @api public\n */\n\nexports.toJSON = function(){\n  return {\n    method: this.method,\n    url: this.url,\n    data: this._data,\n    headers: this._header\n  };\n};\n\n/**\n * Check if `obj` is a host object,\n * we don't want to serialize these :)\n *\n * TODO: future proof, move to compoent land\n *\n * @param {Object} obj\n * @return {Boolean}\n * @api private\n */\n\nexports._isHost = function _isHost(obj) {\n  var str = {}.toString.call(obj);\n\n  switch (str) {\n    case '[object File]':\n    case '[object Blob]':\n    case '[object FormData]':\n      return true;\n    default:\n      return false;\n  }\n}\n\n/**\n * Send `data` as the request body, defaulting the `.type()` to \"json\" when\n * an object is given.\n *\n * Examples:\n *\n *       // manual json\n *       request.post('/user')\n *         .type('json')\n *         .send('{\"name\":\"tj\"}')\n *         .end(callback)\n *\n *       // auto json\n *       request.post('/user')\n *         .send({ name: 'tj' })\n *         .end(callback)\n *\n *       // manual x-www-form-urlencoded\n *       request.post('/user')\n *         .type('form')\n *         .send('name=tj')\n *         .end(callback)\n *\n *       // auto x-www-form-urlencoded\n *       request.post('/user')\n *         .type('form')\n *         .send({ name: 'tj' })\n *         .end(callback)\n *\n *       // defaults to x-www-form-urlencoded\n *      request.post('/user')\n *        .send('name=tobi')\n *        .send('species=ferret')\n *        .end(callback)\n *\n * @param {String|Object} data\n * @return {Request} for chaining\n * @api public\n */\n\nexports.send = function(data){\n  var obj = isObject(data);\n  var type = this._header['content-type'];\n\n  // merge\n  if (obj && isObject(this._data)) {\n    for (var key in data) {\n      this._data[key] = data[key];\n    }\n  } else if ('string' == typeof data) {\n    // default to x-www-form-urlencoded\n    if (!type) this.type('form');\n    type = this._header['content-type'];\n    if ('application/x-www-form-urlencoded' == type) {\n      this._data = this._data\n        ? this._data + '&' + data\n        : data;\n    } else {\n      this._data = (this._data || '') + data;\n    }\n  } else {\n    this._data = data;\n  }\n\n  if (!obj || this._isHost(data)) return this;\n\n  // default to json\n  if (!type) this.type('json');\n  return this;\n};\n","// The node and browser modules expose versions of this with the\n// appropriate constructor function bound as first argument\n/**\n * Issue a request:\n *\n * Examples:\n *\n *    request('GET', '/users').end(callback)\n *    request('/users').end(callback)\n *    request('/users', callback)\n *\n * @param {String} method\n * @param {String|Function} url or callback\n * @return {Request}\n * @api public\n */\n\nfunction request(RequestConstructor, method, url) {\n  // callback\n  if ('function' == typeof url) {\n    return new RequestConstructor('GET', method).end(url);\n  }\n\n  // url first\n  if (2 == arguments.length) {\n    return new RequestConstructor('GET', method);\n  }\n\n  return new RequestConstructor(method, url);\n}\n\nmodule.exports = request;\n","\r\n/**\r\n * Expose `Emitter`.\r\n */\r\n\r\nif (typeof module !== 'undefined') {\r\n  module.exports = Emitter;\r\n}\r\n\r\n/**\r\n * Initialize a new `Emitter`.\r\n *\r\n * @api public\r\n */\r\n\r\nfunction Emitter(obj) {\r\n  if (obj) return mixin(obj);\r\n};\r\n\r\n/**\r\n * Mixin the emitter properties.\r\n *\r\n * @param {Object} obj\r\n * @return {Object}\r\n * @api private\r\n */\r\n\r\nfunction mixin(obj) {\r\n  for (var key in Emitter.prototype) {\r\n    obj[key] = Emitter.prototype[key];\r\n  }\r\n  return obj;\r\n}\r\n\r\n/**\r\n * Listen on the given `event` with `fn`.\r\n *\r\n * @param {String} event\r\n * @param {Function} fn\r\n * @return {Emitter}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.on =\r\nEmitter.prototype.addEventListener = function(event, fn){\r\n  this._callbacks = this._callbacks || {};\r\n  (this._callbacks['$' + event] = this._callbacks['$' + event] || [])\r\n    .push(fn);\r\n  return this;\r\n};\r\n\r\n/**\r\n * Adds an `event` listener that will be invoked a single\r\n * time then automatically removed.\r\n *\r\n * @param {String} event\r\n * @param {Function} fn\r\n * @return {Emitter}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.once = function(event, fn){\r\n  function on() {\r\n    this.off(event, on);\r\n    fn.apply(this, arguments);\r\n  }\r\n\r\n  on.fn = fn;\r\n  this.on(event, on);\r\n  return this;\r\n};\r\n\r\n/**\r\n * Remove the given callback for `event` or all\r\n * registered callbacks.\r\n *\r\n * @param {String} event\r\n * @param {Function} fn\r\n * @return {Emitter}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.off =\r\nEmitter.prototype.removeListener =\r\nEmitter.prototype.removeAllListeners =\r\nEmitter.prototype.removeEventListener = function(event, fn){\r\n  this._callbacks = this._callbacks || {};\r\n\r\n  // all\r\n  if (0 == arguments.length) {\r\n    this._callbacks = {};\r\n    return this;\r\n  }\r\n\r\n  // specific event\r\n  var callbacks = this._callbacks['$' + event];\r\n  if (!callbacks) return this;\r\n\r\n  // remove all handlers\r\n  if (1 == arguments.length) {\r\n    delete this._callbacks['$' + event];\r\n    return this;\r\n  }\r\n\r\n  // remove specific handler\r\n  var cb;\r\n  for (var i = 0; i < callbacks.length; i++) {\r\n    cb = callbacks[i];\r\n    if (cb === fn || cb.fn === fn) {\r\n      callbacks.splice(i, 1);\r\n      break;\r\n    }\r\n  }\r\n  return this;\r\n};\r\n\r\n/**\r\n * Emit `event` with the given args.\r\n *\r\n * @param {String} event\r\n * @param {Mixed} ...\r\n * @return {Emitter}\r\n */\r\n\r\nEmitter.prototype.emit = function(event){\r\n  this._callbacks = this._callbacks || {};\r\n  var args = [].slice.call(arguments, 1)\r\n    , callbacks = this._callbacks['$' + event];\r\n\r\n  if (callbacks) {\r\n    callbacks = callbacks.slice(0);\r\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\r\n      callbacks[i].apply(this, args);\r\n    }\r\n  }\r\n\r\n  return this;\r\n};\r\n\r\n/**\r\n * Return array of callbacks for `event`.\r\n *\r\n * @param {String} event\r\n * @return {Array}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.listeners = function(event){\r\n  this._callbacks = this._callbacks || {};\r\n  return this._callbacks['$' + event] || [];\r\n};\r\n\r\n/**\r\n * Check if this emitter has `event` handlers.\r\n *\r\n * @param {String} event\r\n * @return {Boolean}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.hasListeners = function(event){\r\n  return !! this.listeners(event).length;\r\n};\r\n","/**\n * Created by a.korotaev on 24.06.16.\n */\n/**\n * Impelements Xsolla Login Api\n * @param projectId - project's unique identifier\n * @constructor\n */\nvar request = require('superagent');\n\nvar XLApi = function (projectId) {\n    var self = this;\n    // this.baseUrl = 'http://login.xsolla.com/api/';\n    // this.baseUrl = 'http://xsolla-login-api.herokuapp.com/api/';\n    this.baseUrl = 'http://test-login.xsolla.com/api/';\n    this.projectId = projectId;\n\n    this.makeApiCall = function (params, success, error) {\n        // var r = new XMLHttpRequest();\n        // r.open(params.method, self.baseUrl + params.endpoint, true);\n        // // r.setRequestHeader(\"Content-Type\", \"application/json;charset=UTF-8\");\n        // r.onreadystatechange = function () {\n        //     if (r.readyState == 4) {\n        //         if (r.status == 200) {\n        //             success(JSON.parse(r.responseText));\n        //         } else {\n        //             if (r.responseText) {\n        //                 error(JSON.parse(r.responseText));\n        //             } else {\n        //                 error({error: {message: 'Networking error', code: r.status}});\n        //             }\n        //         }\n        //     }\n        // };\n        // if (params.method == 'POST') {\n        //     r.setRequestHeader(\"Content-Type\", \"application/json;charset=UTF-8\");\n        //     r.send(params.postBody);\n        // } else if (params.method == 'GET') {\n        //     r.send(params.getArguments);\n        // }\n\n        var responseHandler = function (err, res) {\n            if (!err) {\n                success(JSON.parse(res.text));\n            } else {\n                debugger;\n                error({error: {message: err.message, code: 10}});\n            }\n        };\n\n        var method = params.method || 'GET';\n        var requestUrl = self.baseUrl + params.endpoint;\n        if (method == 'GET') {\n            request.get(requestUrl, responseHandler);\n        } else if (method == 'POST') {\n            debugger;\n            request\n                .post(requestUrl)\n                .send(params.postBody)\n                .end(responseHandler);\n        }\n\n    };\n};\n/**\n * Get all avialable social methods auth url\n * @param success - success callback\n * @param error - error callback\n */\nXLApi.prototype.getSocialsURLs = function (success, error) {\n    return this.makeApiCall({method: 'GET', endpoint: 'social/login_urls?projectId='+this.projectId, getArguments: null}, success, error);\n};\n\nXLApi.prototype.loginPassAuth = function (login, pass, rememberMe, success, error) {\n    var body = {\n        username: login,\n        password: pass,\n        remember_me: rememberMe\n    };\n    return this.makeApiCall({method: 'POST', endpoint: 'proxy/login?projectId='+this.projectId, postBody: JSON.stringify(body)}, success, error);\n};\n\nXLApi.prototype.smsAuth = function (phoneNumber, success, error) {\n    return this.makeApiCall({method: 'GET', endpoint: 'sms', getArguments: 'phoneNumber=' + phoneNumber}, success, error);\n};\n\nmodule.exports = XLApi;\n","/**\n * Created by a.korotaev on 24.06.16.\n */\n\nvar XLApi = require('./xlapi');\n/**\n * Create an `Auth0` instance with `options`\n *\n * @class XL\n * @constructor\n */\nfunction XL (options) {\n    var self = this;\n\n    self._socialUrls = undefined;\n\n    self._options = {};\n    self._options.errorHandler = options.errorHandler || function(a) {};\n    self._options.loginPassValidator = options.loginPassValidator || function (a,b) { return true; };\n    self._options.isMarkupSocialsHandlersEnabled = options.isMarkupSocialsHandlersEnabled || false;\n\n    self._api = new XLApi(options.projectId);\n    self._api.getSocialsURLs(function (response) {\n        self._socialUrls = {};\n        for (var key in response) {\n            if (response.hasOwnProperty(key)) {\n                self._socialUrls['sn-' + key] = response[key];\n            }\n        }\n    }, function (e) {\n        console.error(e);\n    });\n\n    var elements = self.getAllElementsWithAttribute('data-xl-auth');\n    var login = '';\n    var pass = '';\n\n    // for (var i = 0; i < elements.length; i++) {\n    //     var nodeValue = elements[i].attributes['data-xl-auth'].nodeValue;\n    //     if (nodeValue.startsWith('sn')) {\n    //         elements[i].onclick = function (nodeValue) {\n    //             return function () {\n    //                 self.login({authType: nodeValue})\n    //             };\n    //         }(nodeValue);\n    //     } else if (nodeValue == 'form-sms') {\n    //         // elements[i].onsubmit = config.eventHandlers.sms;\n    //     } else if (nodeValue == 'form-login_pass') {\n    //         // elements[i].onsubmit = config.eventHandlers.loginPass;\n    //         elements[i].onsubmit = function (login, pass) {\n    //             return function (e) {\n    //                 e.preventDefault();\n    //                 if (self._options.loginPassValidator(login, pass)) {\n    //                     self.login({\n    //                         authType: 'login-pass',\n    //                         login: login,\n    //                         pass: pass\n    //                     }, function (res) {\n    //                         if (res.error) {\n    //                             self._options.errorHandler(res);\n    //                         }\n    //                     });\n    //                 } else {\n    //                     self._options.errorHandler(self.createErrorObject('Login or pass not valid', XL.INVALID_LOGIN_ERROR_CODE));\n    //                 }\n    //             }\n    //         }(login, pass);\n    //     } else if (nodeValue.startsWith('input-')) {\n    //         if (nodeValue == 'input-login') {\n    //             login = '';\n    //         } else if (nodeValue == 'input-pass') {\n    //             pass = '';\n    //         }\n    //     }\n    // }\n\n    if (self._options.isMarkupSocialsHandlersEnabled) {\n        document.addEventListener('click', function (e) {\n            var element = e.target;\n            var xlData = element.attributes['data-xl-auth'];\n            if (xlData) {\n                var nodeValue = xlData.nodeValue;\n                if (nodeValue) {\n                    self.login({authType: nodeValue});\n                }\n            }\n        });\n    }\n}\n\nXL.prototype.login = function (prop, callback) {\n    var self = this;\n\n    if (!prop || !self._socialUrls) {\n        return;\n    }\n\n    /**\n     * props\n     * authType: sn-<social name>, login-pass, sms\n     */\n    if (prop.authType) {\n        if (prop.authType.startsWith('sn-')) {\n            var socialUrl = self._socialUrls[prop.authType];\n            if (socialUrl != undefined) {\n                window.location.href = self._socialUrls[prop.authType];\n            } else {\n                console.error('Auth type: ' + prop.authType + ' doesn\\'t exist');\n            }\n\n        } else if (prop.authType == 'login-pass') {\n            self._api.loginPassAuth(prop.login, prop.pass, prop.rememberMe, function (a) {\n                if (res.login_url) {\n                    window.location.href = res.login_url;\n                } else {\n                    callback(self.createErrorObject('Login or pass not valid', XL.INCORRECT_LOGIN_OR_PASSWORD_ERROR_CODE));\n                }\n            }, function (err) {\n                callback(err);\n            });\n        } else if (prop.authType == 'sms') {\n            if (smsAuthStep == 'phone') {\n                self._api.smsAuth(prop.phoneNumber, null, null);\n            } else if (smsAuthStep == 'code') {\n\n            }\n\n        } else {\n            console.error('Unknown auth type');\n        }\n    }\n};\n\n\nXL.prototype.getAllElementsWithAttribute = function (attribute) {\n    var matchingElements = [];\n    var allElements = document.getElementsByTagName('*');\n    for (var i = 0, n = allElements.length; i < n; i++)\n    {\n        if (allElements[i].getAttribute(attribute) !== null)\n        {\n            matchingElements.push(allElements[i]);\n        }\n    }\n    return matchingElements;\n};\n\nXL.prototype.createErrorObject = function(message, code) {\n    return {\n        error: {\n            message: message,\n            code: code || -1\n        }\n    };\n};\n\nXL.init = function (params) {\n    if (!window.__xl) {\n        var xl = new XL(params);\n        window.__xl = xl;\n    } else {\n        console.error('XL already init!');\n    }\n};\n\nXL.login = function (prop, callback) {\n    if (window.__xl) {\n        window.__xl.login(prop, callback);\n    } else {\n        console.error('Please run XL.init() first');\n    }\n};\n\nXL.AuthWidget = function (divName, options) {\n    if (!divName) {\n        console.error('No div name!');\n    } else {\n        var html = '<iframe></iframe>';\n        var element = document.getElementById(divName);\n        if (element) {\n            document.getElementById(divName).innerHTML = html;\n        } else {\n            console.error('Element ' + divName +' not found!');\n        }\n    }\n};\n\nXL.AuthButton = function (divName, options) {\n\n};\n\nXL.INVALID_LOGIN_ERROR_CODE = 1;\nXL.INCORRECT_LOGIN_OR_PASSWORD_ERROR_CODE = 2;\n\nmodule.exports = XL;"],"sourceRoot":"."}